<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[vim]]></title>
      <url>/2017-11-day/vim/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<h1 id="vim-80的安装和配置"><a href="#vim-80的安装和配置" class="header-anchor"></a>1. <a href="#vim-8-0的安装和配置" class="headerlink" title="vim-8.0的安装和配置"></a>vim-8.0的安装和配置</h1><h2 id="编译-vim-80"><a href="#编译-vim-80" class="header-anchor"></a>1.1. <a href="#编译-vim-8-0" class="headerlink" title="编译 vim-8.0"></a>编译 vim-8.0</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1. ./configure --with-features=huge --<span class="built_in">enable</span>-multibyte  --<span class="built_in">enable</span>-rubyinterp=yes --<span class="built_in">enable</span>-pythoninterp=yes  --with-python-config-dir=/usr/lib/python2.7/config   --<span class="built_in">enable</span>-python3interp=yes --with-python3-config-dir=<span class="variable">$HOME</span>/.<span class="built_in">local</span>/software/anaconda3/lib/python3.5/config   --<span class="built_in">enable</span>-perlinterp=yes  --<span class="built_in">enable</span>-luainterp=yes --<span class="built_in">enable</span>-gui=gtk2 --<span class="built_in">enable</span>-cscope --prefix=<span class="variable">$HOME</span>/.<span class="built_in">local</span>/software/vim-8.0</div><div class="line">2. make install -j 48</div><div class="line">3. 加一下vim-8.0的环境变量 （如果已经把自己的~/.<span class="built_in">local</span>/bin目录加了环境变量的目录，直接ln -s Installpath/vim-8.0/bin/vim . 就可以）</div></pre></td></tr></table></figure>
<h2 id="编译-youcompelteme"><a href="#编译-youcompelteme" class="header-anchor"></a>1.2. <a href="#编译-YouCompelteMe" class="headerlink" title="编译 YouCompelteMe"></a>编译 YouCompelteMe</h2><p><code>~/.vim/bundle 下的Youcompelte要进行编译  ./install.py --clang-completer</code></p>
<h2 id="格式化代码工具安装"><a href="#格式化代码工具安装" class="header-anchor"></a>1.3. <a href="#格式化代码工具安装" class="headerlink" title="格式化代码工具安装"></a>格式化代码工具安装</h2><p>首先vim支持一键格式化是这样实现的，vim安装插件<code>vim-autoformat</code>，可以调用相应的格式化代码软件读文件进行操作。<br><a href="https://github.com/Chiel92/vim-autoformat" target="_blank" rel="external">https://github.com/Chiel92/vim-autoformat</a> 这里是vim-autoformat的框架，然后各个programming language的autoformat工具是通过这个框架去实现在vim中自动格式化的，链接中有推荐的populate autoformat tools</p>
<ol>
<li>python代码格式化 - yapf:  ~/.vim/下有yapf的源文件目录，python setup.py install –user。然后yapf命令被自动copy到~/.local/bin</li>
<li>fortran代码格式化 - frettify: python setup.py install –user。note: 需要conda已经安装了future</li>
<li>c++代码格式化 - clang    -clang-format:<br>下载llvm-libs llvm clang包from www.rpmfind.net/   下载的时候看好系统版本，要一样。<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum localinstall llvm-libs-3.4.2-7.el7.x86_64.rpm</div><div class="line">yum localinstall  llvm-3.4.2-7.el7.x86_64.rpm</div><div class="line">yum localinstall  clang-3.4.2-7.el7.x86_64.rpm</div></pre></td></tr></table></figure>
</li>
</ol>
<p>note: (or rpm -ivh filename.rpm)</p>
<h1 id="vim中的移动和跳转"><a href="#vim中的移动和跳转" class="header-anchor"></a>2. <a href="#vim中的移动和跳转" class="headerlink" title="vim中的移动和跳转"></a>vim中的移动和跳转</h1><ol>
<li>按屏幕移动</li>
</ol>
<p>最常用的几个命令如下：<br>Ctrl + f // 向前（往行号大的方向移动）移动一屏，F-Forward<br>Ctrl + b // 向后移动一屏，B-Before吧<br>Ctrl + d // 向前移动半屏，D-Down<br>Ctrl + u // 向后移动半屏，U-Up<br>Ctrl+e //编辑窗口中的文件内容整体上移一行。<br>Ctrl+y //编辑窗口中的文件内容整体下移一行。</p>
<p> 1. 使用z重新定位屏幕命令<br>z + 回车 // 把当前行移动到屏幕顶部<br>扩展下上命令如：<br>100z + 回车 // 将移动第100行到屏幕的顶部，记得键入100z之后要再回车<br>z. // 把当前行移动到屏幕中央，不用回车，切记<br>z- // 把当前行移动到屏幕底部，同上，不用回车</p>
<pre><code>2. 按搜索移动
</code></pre><p>事实上，对于一个源程序文件我们往往是要查找其中的一个变量或函数名，最有效的方法就是按文本搜索快速移动。<br>/pattern // 向前搜索模式，pattern代指要搜索的内容<br>?pattern // 向后搜索模式<br>n // 重复上次搜索（向行号大的方向）<br>N // 反方向重复上次搜索</p>
<pre><code>3. 按行号移动
</code></pre><p>nG // 移动到第n行，注意此处G是大写。即输入n，在小写模式下输入shift+g，大写模式下直接按下g键<br>（如100G则能快速定位到源程序中第100行代码位置处，想必是很有用的。）<br>Ctrl + g // 显示当前行（并不是移动命令）<br>G // 移动到文件的尾部，在小写模式下输入shift+g，大写模式下直接按下g键</p>
<pre><code>4. 按光标移动
</code></pre><p>左：h<br>下：j<br>上：k<br>右：l<br>下一行行首：+ //shift键切换到上档 ‘+’<br>上一行行首：-<br>当前行行首：0<br>把光标移至当前行的起始位置，也即当前行的第一个非空白字符：^<br>当前行行尾：$<br>后一个单词词首：w,W // w：将光标右移一个字。光标停留在下一个字的字首位置；W：将光标右移一个字。光标停留在下一个字的字首位置（即使两个字之间存在标点符号）。<br>后一个单词词尾：e,E // e：把光标移至当前所在字（或下一个字）的最后一个字符位置；E: 同e，只是以空格字符作为字的分隔符。<br>前一个单词词首：b,B //b:将光标左移一个字。光标停留在下一个字的字首位置；B：将光标左移一个字。光标停留在下一个字的字首位置（即使两个字之间存在标点符号）。<br>当前屏幕首行：H<br>当前屏幕末行：L<br>当前屏幕中央：M<br>fx //往右移动到 x 字符上<br>Fx //往左移动到 x 字符上<br>tx //往右移动到 x 字符前<br>Tx //往左移动到 x 字符后<br>　 （注意：以上四个命令中，其中x是键入的字符）<br>; //分号，配合 f 和 t 使用，重复一次<br>, //逗号，配合 f 和 t 使用，反方向重复一次<br>标记文本替换<br>mqq //用字符串qq来标记当前光标的位置<br>`qq //移至qq所标记处 (数字1键左边键的上档)<br>‘qq //移至qq标记所在行的开头处（单引号）<br>” //移至当前行上第一次所在位置的行的开头处（在光标移动之后，两个单引号）</p>
]]></content>
      
        <categories>
            
            <category> 技术学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vim </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一些软件的安装步骤(hoomd, gromacs, cuda，etc.)]]></title>
      <url>/2017-11-day/InstallationManual/</url>
      <content type="html"><![CDATA[<p>一些软件的安装步骤，以及此过程中遇到的问题的解决办法。<br><a id="more"></a></p>
<h1 id="服务器软件的安装"><a href="#服务器软件的安装" class="header-anchor"></a>1. <a href="#服务器软件的安装" class="headerlink" title="服务器软件的安装"></a>服务器软件的安装</h1><h2 id="安装cuda"><a href="#安装cuda" class="header-anchor"></a>1.1. <a href="#安装cuda" class="headerlink" title="安装cuda"></a>安装cuda</h2><ol>
<li><p>安装cuda经常会遇到问题，但大部分都与如何禁用nouveau驱动相关，所以step-1，需要禁用nouveau驱动。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">1. 在配置文件中禁用nouveau</div><div class="line">vi /etc/modprobe.d/blacklist.conf  添加：blacklist nouveau</div><div class="line">    CentOS 7:</div><div class="line">     vim /usr/lib/modprobe.d/dist-blacklist.conf$</div><div class="line">    或</div><div class="line">     vim /lib/modprobe.d/dist-blacklist.conf</div><div class="line">    并且在加上blacklist nouveau之后还要加上一行options nouveau modeset=0</div><div class="line">2. 备份原来的 initramfs nouveau image镜像</div><div class="line">mv /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r)-nouveau.img  </div><div class="line">3. 创建新的 initramfs image镜像</div><div class="line">dracut /boot/initramfs-$(uname -r).img $(uname -r)  </div><div class="line">注：重启后会发现终端界面字体变大了，不清晰了，表示nouveau禁用成功。</div><div class="line">4. 所有安装已经完成，重新启动机器。</div></pre></td></tr></table></figure>
</li>
<li><p>单独安装nvidia驱动 <code>./NVIDIA-Linux-x86_64-384.90-1080ti.run</code><br>需要注意几点：<br>（1）cuda安装包本身包含两个部分：cuda-toolkit和nvidia driver，再安装cuda的时候是可以选择只安装cuda-toolkit，而省略nvidia driver的（甚至可以从cuda中抽出单独的部分作为一个安装包）<br>（2）1080Ti的显卡需要较新的驱动384.90来支持<br>（3）安装完成后一定要用命令查看一下显卡状态<code>nvidia-smi</code>，如果有错误提示，则安装有问题。</p>
</li>
<li>安装cuda <code>./cuda_9.0.176_384.81_linux-run</code> 不需要装driver</li>
</ol>
<h2 id="hoomd"><a href="#hoomd" class="header-anchor"></a>1.2. <a href="#hoomd" class="headerlink" title="hoomd"></a>hoomd</h2><h3 id="本地编译hoomd-133及以下版本"><a href="#本地编译hoomd-133及以下版本" class="header-anchor"></a>1.2.1. <a href="#本地编译hoomd-1-3-3及以下版本" class="headerlink" title="本地编译hoomd-1.3.3及以下版本"></a>本地编译hoomd-1.3.3及以下版本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">(1) mkdir build 然后进入build</div><div class="line">(2) cmake -Wno-dev ../ -DCMAKE_INSTALL_PREFIX=<span class="variable">$HOME</span>/.<span class="built_in">local</span>/hoomd -DCMAKE_BUILD_TYPE=Release -DENABLE_CUDA=On -DCUDA_TOOLKIT_ROOT_DIR=/usr/<span class="built_in">local</span>/cuda -DENABLE_MPI_CUDA=On -DENABLE_MPI=On -DPYTHON_EXECUTABLE=`<span class="built_in">which</span> python2`</div><div class="line">(3) make install -j8</div><div class="line">注意事项：</div><div class="line">1. 确保默认python的是用系统自带的python2</div><div class="line">2. 如果编译并行版本的话，需要安装openmpi，并且做好环境变量</div></pre></td></tr></table></figure>
<h3 id="anaconda安装hoomd"><a href="#anaconda安装hoomd" class="header-anchor"></a>1.2.2. <a href="#anaconda安装hoomd" class="headerlink" title="anaconda安装hoomd"></a>anaconda安装hoomd</h3><p>anaconda安装的hoomd实际上是anaconda云端已经编译好的hoomd，任何相关包都是依赖于anaconda，如cuda、并行库等。<br><code>conda install hoomd=1.3.3</code> 可以将hoomd以一个子包的形式安装到anaconda的软件相关目录下，如果<code>hoomd=1.3.3</code>的版本号不加，则安装最新版（最新版与2.0之前的版本差别较大，新版本的发展已经失去了控制。。。，比如没有xml支持，这简直不能忍！）<br>当然有时候我们联网并不方便，因为服务器一般与外网是隔绝的，大概为了安全（这时候可以用proxychains联网）。这时候可以将hoomd相关包下载下来本地conda安装。<br>需要四个包<code>boost-1.59.0-glotzer_py35_6.tar.gz, hoomd-1.3.3-py35_1.tar.gz, mpich2-1.4.1p1-0.tar.gz, mpich-3.2-5.tar.gz</code><br>然后按顺序<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">conda install boost<span class="number">-1.59</span><span class="number">.0</span>-glotzer_py35_6.tar.gz</div><div class="line">conda install mpich2<span class="number">-1.4</span><span class="number">.1</span>p1<span class="number">-0.</span>tar.gz</div><div class="line">conda install mpich<span class="number">-3.2</span><span class="number">-5.</span>tar.gz</div><div class="line">conda install hoomd<span class="number">-1.3</span><span class="number">.3</span>-py35_1.tar.gz</div></pre></td></tr></table></figure></p>
<h2 id="gromacs安装"><a href="#gromacs安装" class="header-anchor"></a>1.3. <a href="#gromacs安装" class="headerlink" title="gromacs安装"></a>gromacs安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ ../configure --prefix=$HOME/.local/openmpi/ --enable-mpi-thread-multiple --with-cuda=/usr/local/cuda</div><div class="line">$ make -j24</div><div class="line">$ make install</div><div class="line"></div><div class="line">$  ../configure --enable-shared --enable-float --enable-mpi --enable-threads --enable-openmp --enable-sse2 --enable-avx --prefix=$HOME/.local/fftw</div><div class="line">$ gmake -j24</div><div class="line">$ gmake install</div><div class="line"></div><div class="line">$  cmake .. -DCMAKE_INSTALL_PREFIX=$HOME/.local/gromacs -DGMX_GPU=on -DGMX_MPI=on -DGMX_SIMD=AVX2_256 -DGMX_FFT_LIBRARY=fftw3 -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda -DCMAKE_PREFIX_PATH=$HOME/.local/fftw</div><div class="line">$ make -j24</div><div class="line">$ make install</div></pre></td></tr></table></figure>
<p>note: 环境变量的设置<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> CPPFLAGS=-I/home/jxm/.<span class="built_in">local</span>/fftw/include</div><div class="line"><span class="built_in">export</span> LDFLAGS=-I/home/jxm/.<span class="built_in">local</span>/fftw/lib</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$HOME</span>/.<span class="built_in">local</span>/openmpi/bin:/usr/<span class="built_in">local</span>/cuda/bin/:<span class="variable">$PATH</span></div><div class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$HOME</span>/.<span class="built_in">local</span>/openmpi/lib:<span class="variable">$LD_LIBRARY_PATH</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$HOME</span>/.<span class="built_in">local</span>/gromacs/bin/:<span class="variable">$PATH</span></div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 技术学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hoomd </tag>
            
            <tag> gromacs </tag>
            
            <tag> cuda </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Xshell 相关]]></title>
      <url>/2017-11-day/Xshell/</url>
      <content type="html"><![CDATA[<p>关于Xshell的设置技巧、使用中遇到的问题~<br><a id="more"></a></p>
<h1 id="xshell设置技巧"><a href="#xshell设置技巧" class="header-anchor"></a>1. <a href="#Xshell设置技巧" class="headerlink" title="Xshell设置技巧"></a>Xshell设置技巧</h1><h1 id="内置上传下载的工具xmodem-ymodem-zmodemsxrx-sbrb-szrz"><a href="#内置上传下载的工具xmodem-ymodem-zmodemsxrx-sbrb-szrz" class="header-anchor"></a>2. <a href="#内置上传下载的工具XMODEM、YMODEM、ZMODEM（sx-rx-sb-rb-sz-rz）" class="headerlink" title="内置上传下载的工具XMODEM、YMODEM、ZMODEM（sx/rx, sb/rb, sz/rz）"></a>内置上传下载的工具XMODEM、YMODEM、ZMODEM（sx/rx, sb/rb, sz/rz）</h1><p>note: ‘lrzsz’这个包对应ZMODEM，centos7自带。<br>以sz/rz为例：<br>sz表示send a file ， 后面加文件名字<br>‘sz filename.dat’ 会出现选择传输到本地目录的界面<br>rz表示receive a file<br>‘rz’ 会出现本地目录以选择需要上传的文件<br>ps: 在Xshell里面可以设置默认的下载目录，所以在终端sz filename可以直接下载到本地，比如桌面，非常方便。</p>
]]></content>
      
        <categories>
            
            <category> xshell </category>
            
        </categories>
        
        
        <tags>
            
            <tag> xshell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Fortran命令]]></title>
      <url>/2017-09-day/fortran/</url>
      <content type="html"><![CDATA[<p>保存fortran的一些常用命令，以作备忘。<br><a id="more"></a></p>
<p>#有关fortran编程本身</p>
<h2 id="rewind和backspace的用法"><a href="#rewind和backspace的用法" class="header-anchor"></a>1. <a href="#rewind和backspace的用法" class="headerlink" title="rewind和backspace的用法"></a>rewind和backspace的用法</h2><p>在早期的FORTRAN规范和编译器中，BACKSPACE和REWIND的确与顺序存贮设备–比如磁带机–有关。后来，变成设备无关的语句。但是，可能与文件模式有关。<br>REWIND现在仍然很常用。假如您的程序需要两遍读入同一个文本格式数据文件，当您读完第一遍后，用REWIND回到文件头部。BACKSPACE用于回退一个记录。后面通常加上文件号，这里的记录可以理解为一个回车符号。</p>
]]></content>
      
        <categories>
            
            <category> fortran </category>
            
        </categories>
        
        
        <tags>
            
            <tag> fortran </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[win10系统重装相关]]></title>
      <url>/2017-08-day/ReinstallSystemBackup/</url>
      <content type="html"><![CDATA[<p>windows系统用过一段时间后会产生一些系统垃圾，运行变慢，应运而生的“系统瘦身”软件也层出不穷。不过，最好的方法仍是——重装。备份好重要数据，一个win的安装USB就可以在一个下午的时间翻新系统。本文即重装注意事项和数据清单。<br><a id="more"></a></p>
<h1 id="备份数据"><a href="#备份数据" class="header-anchor"></a>1. <a href="#备份数据" class="headerlink" title="备份数据"></a>备份数据</h1><p>一般我们都将系统分为C盘+D盘（或者还有其他盘）。其中C盘是系统盘，个人重要的数据和软件安装一般放在D盘（or others）中。那么重装的时候清空C盘分区，其他的分区不动即可保存数据。不过，个人安装的软件，除了绿色软件外，基本都无法继续使用。我们正好也借此机会，通过重装软件清空一下软件带来的冗余。</p>
<h1 id="软件list和相关操作"><a href="#软件list和相关操作" class="header-anchor"></a>2. <a href="#软件list和相关操作" class="headerlink" title="软件list和相关操作"></a>软件list和相关操作</h1><ol>
<li>Endnote。一是，整个文献库通过compress为一个enl文件备份（其中包含这个lib的所有数据）；二是，Endnote里面的style文件比如，比如Jilin-thesis这种style文件，lib压缩的时候不包括。三是，Endnote x8的安装软件msi+license.dat（from byr）。note:安装完Endnote软件后，拷贝compressed lib到Endnote新建Libs目录，打开即可加载。style文件点击加载，保存即可。[Endnote 8.0已备份移动硬盘]</li>
<li>xshell+xftp+xmanager。注册码百度即可。xshell，文件-导出-下一步 可以得到包含所有会话的配置（server-user-passwd）。点击加载即可重新使用。[已备份移动硬盘]</li>
<li>Office。没什么可备份的，有2013版本的软件安装即可。但是要注意之后安装mathtype公式编辑工具。[office2013+mathtype已备份移动硬盘]</li>
<li>CTEX</li>
<li>Diskgenius 4.6.2.1 破解版</li>
<li>FastStone Capture</li>
<li>Shadowsocks-4.0.5。one of the most important softwares.</li>
<li>origin</li>
<li>evernote</li>
<li>Photoshop CS4直接安装无需破解版本</li>
<li>uTorrentPortable：uTorrent移动版本的自然是更好操作一些。备份torrents数据，之后拷贝到新系统的uTorrent的data/torrents目录下（其他也可以）。在uTorrent中设置下载的默认路径，指向原来byr的目录。如果下载一个文件到一个文件夹，uTorrent会检查是否有这么一个文件的，如果有会检查文件的完整性然后自动关联上传做种。</li>
<li>WinRAR</li>
<li>PotPlayer: windows上强大的播放器。在andorid上推荐xplayer，流畅的飞起。</li>
<li>Bitvise client/server:用作远程工具</li>
<li>Adobe reader</li>
<li>大白菜装机</li>
<li>百度云</li>
<li>SoftEther VPN Client</li>
<li>Chrome</li>
<li>SougouInput</li>
<li>Material Studio (it depends.)</li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown Writing]]></title>
      <url>/2017-07-day/Markdown_Writing/</url>
      <content type="html"><![CDATA[<p>Markdown语法测试<br><a id="more"></a></p>
<h1 id="任务列表"><a href="#任务列表" class="header-anchor"></a>1. <a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h1><p>在任务项目前面加[]。用[x]表示此项已完成。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">- [x] Finish my changes</div><div class="line">- [ ] Push my commits to GitHub</div><div class="line">- [ ] Open a pull request</div></pre></td></tr></table></figure></p>
<ul>
<li style="list-style: none"><input type="checkbox" checked> Finish my changes</li>
<li style="list-style: none"><input type="checkbox"> Push my commits to GitHub</li>
<li style="list-style: none"><input type="checkbox"> Open a pull request</li>
</ul>
<p>注意如果项目内容以（）开始要对（加转义字符\<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">- [ ] \(Optional) Open a followup issue</div></pre></td></tr></table></figure></p>
<ul>
<li style="list-style: none"><input type="checkbox"> (Optional) Open a followup issue</li>
</ul>
]]></content>
      
        <categories>
            
            <category> markdown </category>
            
        </categories>
        
        
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Learn Numpy The Hard Way]]></title>
      <url>/2017-07-day/LearnNumpy/</url>
      <content type="html"><![CDATA[<p>NumPy, which stands for Numerical Python, is a library consisting of multidimensional array objects and a collection of routines for processing those arrays. Using NumPy, mathematical and logical operations on arrays can be performed<br>一些参考资料：<br><a href="http://scipy-lectures.github.io/intro/numpy/index.html" target="_blank" rel="external">Basics of numpy</a><br><a href="http://scipy-lectures.github.io/intro/numpy/exercises.html" target="_blank" rel="external">Some numpy exercises</a><br><a href="http://scipy-lectures.github.io/advanced/advanced_numpy/" target="_blank" rel="external">Advanced numpy</a><br><a href="http://docs.scipy.org/doc/numpy/reference/" target="_blank" rel="external">Numpy reference</a></p>
<a id="more"></a>
<h1 id="numpy的前世今生"><a href="#numpy的前世今生" class="header-anchor"></a>1. <a href="#Numpy的前世今生" class="headerlink" title="Numpy的前世今生"></a>Numpy的前世今生</h1><p><strong>Numeric</strong>, the ancestor of NumPy, was developed by Jim Hugunin. Another package Numarray was also developed, having some additional functionalities. In 2005, Travis Oliphant created NumPy package by incorporating the features of Numarray into Numeric package. There are many contributors to this open source project.</p>
<h1 id="numpy数值类型"><a href="#numpy数值类型" class="header-anchor"></a>2. <a href="#Numpy数值类型" class="headerlink" title="Numpy数值类型"></a>Numpy数值类型</h1><p>NumPy中的基本数据类型</p>
<table>
<thead>
<tr>
<th style="text-align:left">名称</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">bool</td>
<td style="text-align:left">用一个字节存储的布尔类型（True或False）</td>
</tr>
<tr>
<td style="text-align:left">inti</td>
<td style="text-align:left">由所在平台决定其大小的整数（一般为int32或int64）</td>
</tr>
<tr>
<td style="text-align:left">int8</td>
<td style="text-align:left">一个字节大小，-128 至 127</td>
</tr>
<tr>
<td style="text-align:left">int16</td>
<td style="text-align:left">整数，-32768 至 32767</td>
</tr>
<tr>
<td style="text-align:left">int32</td>
<td style="text-align:left">整数，-2 <strong> 31 至 2 </strong> 32 -1</td>
</tr>
<tr>
<td style="text-align:left">int64</td>
<td style="text-align:left">整数，-2 <strong> 63 至 2 </strong> 63 - 1</td>
</tr>
<tr>
<td style="text-align:left">uint8</td>
<td style="text-align:left">无符号整数，0 至 255</td>
</tr>
<tr>
<td style="text-align:left">uint16</td>
<td style="text-align:left">无符号整数，0 至 65535</td>
</tr>
<tr>
<td style="text-align:left">uint32</td>
<td style="text-align:left">无符号整数，0 至 2 ** 32 - 1</td>
</tr>
<tr>
<td style="text-align:left">uint64</td>
<td style="text-align:left">无符号整数，0 至 2 ** 64 - 1</td>
</tr>
<tr>
<td style="text-align:left">float16</td>
<td style="text-align:left">半精度浮点数：16位，正负号1位，指数5位，精度10位</td>
</tr>
<tr>
<td style="text-align:left">float32</td>
<td style="text-align:left">单精度浮点数：32位，正负号1位，指数8位，精度23位</td>
</tr>
<tr>
<td style="text-align:left">float64或float</td>
<td style="text-align:left">双精度浮点数：64位，正负号1位，指数11位，精度52位</td>
</tr>
<tr>
<td style="text-align:left">complex64</td>
<td style="text-align:left">复数，分别用两个32位浮点数表示实部和虚部</td>
</tr>
<tr>
<td style="text-align:left">complex128或complex</td>
<td style="text-align:left">复数，分别用两个64位浮点数表示实部和虚部</td>
</tr>
</tbody>
</table>
<h1 id="numpy数组的初始化"><a href="#numpy数组的初始化" class="header-anchor"></a>3. <a href="#Numpy数组的初始化" class="headerlink" title="Numpy数组的初始化"></a>Numpy数组的初始化</h1><p>Numpy的主要数据类型是ndarray，即多维数组。它有以下几个属性：<br>ndarray.ndim：数组的维数<br>ndarray.shape：数组每一维的大小<br>ndarray.size：数组中全部元素的数量<br>ndarray.dtype：数组中元素的类型（numpy.int32, numpy.int16, and numpy.float64等）<br>ndarray.itemsize：每个元素占几个字节</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line">np.arange(<span class="number">24</span>).reshape(<span class="number">3</span>,<span class="number">8</span>) <span class="comment"># np.arange初始化数组并reshape</span></div><div class="line"></div><div class="line"><span class="comment">#生成数组赋特殊值：</span></div><div class="line">np.zeros(<span class="number">24</span>)</div><div class="line">np.ones(<span class="number">24</span>)</div><div class="line"><span class="comment"># 由于numpy可以按index取值，所以zeros/ones方法可以用来创建bool数组用于取值</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>np.ones(<span class="number">24</span>, dtype=bool)</div><div class="line">array([ <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,</div><div class="line">        <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,</div><div class="line">        <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>], dtype=bool)</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>np.empty(<span class="number">24</span>)  <span class="comment"># 随机数，取决于内存情况</span></div><div class="line">array([  <span class="number">6.89818397e-310</span>,   <span class="number">6.89818397e-310</span>,   <span class="number">6.89817518e-310</span>,</div><div class="line">         <span class="number">6.89817518e-310</span>,   <span class="number">6.89817384e-310</span>,   <span class="number">6.89817852e-310</span>,</div><div class="line">         <span class="number">6.89818486e-310</span>,   <span class="number">6.89818483e-310</span>,   <span class="number">6.89817852e-310</span>,</div><div class="line">         <span class="number">6.89817384e-310</span>,   <span class="number">6.89818483e-310</span>,   <span class="number">6.89817384e-310</span>,</div><div class="line">         <span class="number">6.89818486e-310</span>,   <span class="number">6.89818486e-310</span>,   <span class="number">6.89818483e-310</span>,</div><div class="line">         <span class="number">6.89817518e-310</span>,   <span class="number">6.89818486e-310</span>,   <span class="number">6.89818484e-310</span>,</div><div class="line">         <span class="number">6.89817518e-310</span>,   <span class="number">6.89818488e-310</span>,   <span class="number">6.89817518e-310</span>,</div><div class="line">         <span class="number">6.89818486e-310</span>,   <span class="number">6.89818488e-310</span>,   <span class="number">6.89818484e-310</span>])</div><div class="line"><span class="string">'np.arange() （最小值，最大值，步长）（左闭右开） '</span></div><div class="line"><span class="string">'np.linspace（最小值，最大值，元素数量）'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, <span class="number">20</span>)</div><div class="line">array([ <span class="number">0.</span>        ,  <span class="number">0.33069396</span>,  <span class="number">0.66138793</span>,  <span class="number">0.99208189</span>,  <span class="number">1.32277585</span>,</div><div class="line">        <span class="number">1.65346982</span>,  <span class="number">1.98416378</span>,  <span class="number">2.31485774</span>,  <span class="number">2.64555171</span>,  <span class="number">2.97624567</span>,</div><div class="line">        <span class="number">3.30693964</span>,  <span class="number">3.6376336</span> ,  <span class="number">3.96832756</span>,  <span class="number">4.29902153</span>,  <span class="number">4.62971549</span>,</div><div class="line">        <span class="number">4.96040945</span>,  <span class="number">5.29110342</span>,  <span class="number">5.62179738</span>,  <span class="number">5.95249134</span>,  <span class="number">6.28318531</span>])</div></pre></td></tr></table></figure>
<h1 id="numpy-数组的寻址索引和遍历"><a href="#numpy-数组的寻址索引和遍历" class="header-anchor"></a>4. <a href="#Numpy-数组的寻址，索引和遍历" class="headerlink" title="Numpy 数组的寻址，索引和遍历"></a>Numpy 数组的寻址，索引和遍历</h1><p>多维数组的访问通过给每一维指定一个索引，顺序是先高维再低维：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x, y)</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="number">10</span>*x + y</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>np.fromfunction(f, (<span class="number">5</span>,<span class="number">4</span>), dtype=np.int)</div><div class="line">array([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>],</div><div class="line">       [<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>],</div><div class="line">       [<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>],</div><div class="line">       [<span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>],</div><div class="line">       [<span class="number">40</span>, <span class="number">41</span>, <span class="number">42</span>, <span class="number">43</span>]])</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>b[<span class="number">1</span>:<span class="number">3</span>, :]</div><div class="line">array([[<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>],</div><div class="line">              [<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>]])</div></pre></td></tr></table></figure></p>
<p>…符号表示将所有未指定索引的维度均赋为：，：表示索引该维度范围所有元素<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>c =  np.arange(<span class="number">24</span>).reshape(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</div><div class="line">array([[[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>],</div><div class="line">        [ <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>],</div><div class="line">        [ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>]],</div><div class="line"></div><div class="line">       [[<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>],</div><div class="line">        [<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>],</div><div class="line">        [<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>]]])</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>c[<span class="number">1</span>,...]</div><div class="line">array([[<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>],</div><div class="line">       [<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>],</div><div class="line">       [<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>]])</div></pre></td></tr></table></figure></p>
<p>遍历数组的方法可以用循环/迭代器等。如果需要flatten数组然后访问，可以用c.flat做一个迭代器，也可以用c.flatten（）函数将数组先一维展开。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> c.flat:</div><div class="line">        print(i)</div><div class="line">  <span class="comment">#即可打印所有元素</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>c.flatten()</div><div class="line">array([ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>,</div><div class="line">       <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>])</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Learn Numpy The Hard Way]]></title>
      <url>/2017-07-day/NumPy_Learn/</url>
      <content type="html"><![CDATA[<p>NumPy, which stands for Numerical Python, is a library consisting of multidimensional array objects and a collection of routines for processing those arrays. Using NumPy, mathematical and logical operations on arrays can be performed<br>一些参考资料：<br><a href="http://scipy-lectures.github.io/intro/numpy/index.html" target="_blank" rel="external">Basics of numpy</a><br><a href="http://scipy-lectures.github.io/intro/numpy/exercises.html" target="_blank" rel="external">Some numpy exercises</a><br><a href="http://scipy-lectures.github.io/advanced/advanced_numpy/" target="_blank" rel="external">Advanced numpy</a><br><a href="http://docs.scipy.org/doc/numpy/reference/" target="_blank" rel="external">Numpy reference</a></p>
<a id="more"></a>
<h1 id="numpy的前世今生"><a href="#numpy的前世今生" class="header-anchor"></a>1. <a href="#Numpy的前世今生" class="headerlink" title="Numpy的前世今生"></a>Numpy的前世今生</h1><p><strong>Numeric</strong>, the ancestor of NumPy, was developed by Jim Hugunin. Another package Numarray was also developed, having some additional functionalities. In 2005, Travis Oliphant created NumPy package by incorporating the features of Numarray into Numeric package. There are many contributors to this open source project.</p>
<h1 id="numpy数值类型"><a href="#numpy数值类型" class="header-anchor"></a>2. <a href="#Numpy数值类型" class="headerlink" title="Numpy数值类型"></a>Numpy数值类型</h1><p>NumPy中的基本数据类型</p>
<table>
<thead>
<tr>
<th style="text-align:left">名称</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">bool</td>
<td style="text-align:left">用一个字节存储的布尔类型（True或False）</td>
</tr>
<tr>
<td style="text-align:left">inti</td>
<td style="text-align:left">由所在平台决定其大小的整数（一般为int32或int64）</td>
</tr>
<tr>
<td style="text-align:left">int8</td>
<td style="text-align:left">一个字节大小，-128 至 127</td>
</tr>
<tr>
<td style="text-align:left">int16</td>
<td style="text-align:left">整数，-32768 至 32767</td>
</tr>
<tr>
<td style="text-align:left">int32</td>
<td style="text-align:left">整数，-2 <strong> 31 至 2 </strong> 32 -1</td>
</tr>
<tr>
<td style="text-align:left">int64</td>
<td style="text-align:left">整数，-2 <strong> 63 至 2 </strong> 63 - 1</td>
</tr>
<tr>
<td style="text-align:left">uint8</td>
<td style="text-align:left">无符号整数，0 至 255</td>
</tr>
<tr>
<td style="text-align:left">uint16</td>
<td style="text-align:left">无符号整数，0 至 65535</td>
</tr>
<tr>
<td style="text-align:left">uint32</td>
<td style="text-align:left">无符号整数，0 至 2 ** 32 - 1</td>
</tr>
<tr>
<td style="text-align:left">uint64</td>
<td style="text-align:left">无符号整数，0 至 2 ** 64 - 1</td>
</tr>
<tr>
<td style="text-align:left">float16</td>
<td style="text-align:left">半精度浮点数：16位，正负号1位，指数5位，精度10位</td>
</tr>
<tr>
<td style="text-align:left">float32</td>
<td style="text-align:left">单精度浮点数：32位，正负号1位，指数8位，精度23位</td>
</tr>
<tr>
<td style="text-align:left">float64或float</td>
<td style="text-align:left">双精度浮点数：64位，正负号1位，指数11位，精度52位</td>
</tr>
<tr>
<td style="text-align:left">complex64</td>
<td style="text-align:left">复数，分别用两个32位浮点数表示实部和虚部</td>
</tr>
<tr>
<td style="text-align:left">complex128或complex</td>
<td style="text-align:left">复数，分别用两个64位浮点数表示实部和虚部</td>
</tr>
</tbody>
</table>
<h1 id="numpy数组的初始化"><a href="#numpy数组的初始化" class="header-anchor"></a>3. <a href="#Numpy数组的初始化" class="headerlink" title="Numpy数组的初始化"></a>Numpy数组的初始化</h1><p>Numpy的主要数据类型是ndarray，即多维数组。它有以下几个属性：<br>ndarray.ndim：数组的维数<br>ndarray.shape：数组每一维的大小<br>ndarray.size：数组中全部元素的数量<br>ndarray.dtype：数组中元素的类型（numpy.int32, numpy.int16, and numpy.float64等）<br>ndarray.itemsize：每个元素占几个字节</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line">np.arange(<span class="number">24</span>).reshape(<span class="number">3</span>,<span class="number">8</span>) <span class="comment"># np.arange初始化数组并reshape</span></div><div class="line"></div><div class="line"><span class="comment">#生成数组赋特殊值：</span></div><div class="line">np.zeros(<span class="number">24</span>)</div><div class="line">np.ones(<span class="number">24</span>)</div><div class="line"><span class="comment"># 由于numpy可以按index取值，所以zeros/ones方法可以用来创建bool数组用于取值</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>np.ones(<span class="number">24</span>, dtype=bool)</div><div class="line">array([ <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,</div><div class="line">        <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,</div><div class="line">        <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>,  <span class="keyword">True</span>], dtype=bool)</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>np.empty(<span class="number">24</span>)  <span class="comment"># 随机数，取决于内存情况</span></div><div class="line">array([  <span class="number">6.89818397e-310</span>,   <span class="number">6.89818397e-310</span>,   <span class="number">6.89817518e-310</span>,</div><div class="line">         <span class="number">6.89817518e-310</span>,   <span class="number">6.89817384e-310</span>,   <span class="number">6.89817852e-310</span>,</div><div class="line">         <span class="number">6.89818486e-310</span>,   <span class="number">6.89818483e-310</span>,   <span class="number">6.89817852e-310</span>,</div><div class="line">         <span class="number">6.89817384e-310</span>,   <span class="number">6.89818483e-310</span>,   <span class="number">6.89817384e-310</span>,</div><div class="line">         <span class="number">6.89818486e-310</span>,   <span class="number">6.89818486e-310</span>,   <span class="number">6.89818483e-310</span>,</div><div class="line">         <span class="number">6.89817518e-310</span>,   <span class="number">6.89818486e-310</span>,   <span class="number">6.89818484e-310</span>,</div><div class="line">         <span class="number">6.89817518e-310</span>,   <span class="number">6.89818488e-310</span>,   <span class="number">6.89817518e-310</span>,</div><div class="line">         <span class="number">6.89818486e-310</span>,   <span class="number">6.89818488e-310</span>,   <span class="number">6.89818484e-310</span>])</div><div class="line"><span class="string">'np.arange() （最小值，最大值，步长）（左闭右开） '</span></div><div class="line"><span class="string">'np.linspace（最小值，最大值，元素数量）'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, <span class="number">20</span>)</div><div class="line">array([ <span class="number">0.</span>        ,  <span class="number">0.33069396</span>,  <span class="number">0.66138793</span>,  <span class="number">0.99208189</span>,  <span class="number">1.32277585</span>,</div><div class="line">        <span class="number">1.65346982</span>,  <span class="number">1.98416378</span>,  <span class="number">2.31485774</span>,  <span class="number">2.64555171</span>,  <span class="number">2.97624567</span>,</div><div class="line">        <span class="number">3.30693964</span>,  <span class="number">3.6376336</span> ,  <span class="number">3.96832756</span>,  <span class="number">4.29902153</span>,  <span class="number">4.62971549</span>,</div><div class="line">        <span class="number">4.96040945</span>,  <span class="number">5.29110342</span>,  <span class="number">5.62179738</span>,  <span class="number">5.95249134</span>,  <span class="number">6.28318531</span>])</div></pre></td></tr></table></figure>
<h1 id="numpy-数组的寻址索引和遍历"><a href="#numpy-数组的寻址索引和遍历" class="header-anchor"></a>4. <a href="#Numpy-数组的寻址，索引和遍历" class="headerlink" title="Numpy 数组的寻址，索引和遍历"></a>Numpy 数组的寻址，索引和遍历</h1><p>多维数组的访问通过给每一维指定一个索引，顺序是先高维再低维：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x, y)</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="number">10</span>*x + y</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>np.fromfunction(f, (<span class="number">5</span>,<span class="number">4</span>), dtype=np.int)</div><div class="line">array([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>],</div><div class="line">       [<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>],</div><div class="line">       [<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>],</div><div class="line">       [<span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>],</div><div class="line">       [<span class="number">40</span>, <span class="number">41</span>, <span class="number">42</span>, <span class="number">43</span>]])</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>b[<span class="number">1</span>:<span class="number">3</span>, :]</div><div class="line">array([[<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>],</div><div class="line">              [<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>]])</div></pre></td></tr></table></figure></p>
<p>…符号表示将所有未指定索引的维度均赋为：，：表示索引该维度范围所有元素<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>c =  np.arange(<span class="number">24</span>).reshape(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</div><div class="line">array([[[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>],</div><div class="line">        [ <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>],</div><div class="line">        [ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>]],</div><div class="line"></div><div class="line">       [[<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>],</div><div class="line">        [<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>],</div><div class="line">        [<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>]]])</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>c[<span class="number">1</span>,...]</div><div class="line">array([[<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>],</div><div class="line">       [<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>],</div><div class="line">       [<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>]])</div></pre></td></tr></table></figure></p>
<p>遍历数组的方法可以用循环/迭代器等。如果需要flatten数组然后访问，可以用c.flat做一个迭代器，也可以用c.flatten（）函数将数组先一维展开。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> c.flat:</div><div class="line">        print(i)</div><div class="line">  <span class="comment">#即可打印所有元素</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>c.flatten()</div><div class="line">array([ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>,</div><div class="line">       <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>])</div></pre></td></tr></table></figure></p>
<h1 id="scipy中的空间算法"><a href="#scipy中的空间算法" class="header-anchor"></a>5. <a href="#Scipy中的空间算法" class="headerlink" title="Scipy中的空间算法"></a>Scipy中的空间算法</h1><p>计算点集的凸点，即计算一堆点用最外层的点连线围起来，形成一个多面体。这个多面体包含所有的点。<br><code>scipy.spatial.ConvexHull</code>函数用于计算多维凸面（Convex hulls in N dimensions.）<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> scipy.spatial <span class="keyword">import</span> ConvexHull</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>points = np.random.rand(<span class="number">30</span>, <span class="number">3</span>)   <span class="comment"># 30 random points in 3-D</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>hull = ConvexHull(points)</div></pre></td></tr></table></figure></p>
<p>通过<code>ConvexHull函数即可计算points的凸面</code>，然后通过<code>simplices</code>提取凸点<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">simp = hull.simplices</div></pre></td></tr></table></figure></p>
<p>注意这里simp是二维numpy数组，其中每个元素都包含三个id，id是粒子的index。每个元素实际上都是三个点构成一个外接圆，simplices算法就是这样找出所有外接圆，且没有任何粒子在外接圆内。<br>我们可以通过merge所有的id来找到所有的凸点（注意很可能有重复的点）<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Final_hull = list(set(simp.flatten()))</div></pre></td></tr></table></figure></p>
<p>note:甚至你可以通过计算所有凸点的平均最短近邻距离，然后估算凸多面体的表面积。（此方法未验证其误差）<br>当然还有其他方法提取凸点，即<code>vertices</code>，可以直接给出凸点id。<br>附上scipy 对ConvexHull的Attributes的描述：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">points	(ndarray of double, shape (npoints, ndim)) Coordinates of input points.</div><div class="line">vertices	(ndarray of ints, shape (nvertices,)) Indices of points forming the vertices of the convex hull. For 2-D convex hulls, the vertices are in counterclockwise order. For other dimensions, they are in input order.</div><div class="line">simplices	(ndarray of ints, shape (nfacet, ndim)) Indices of points forming the simplical facets of the convex hull.</div><div class="line">neighbors	(ndarray of ints, shape (nfacet, ndim)) Indices of neighbor facets for each facet. The kth neighbor is opposite to the kth vertex. -1 denotes no neighbor.</div><div class="line">equations	(ndarray of double, shape (nfacet, ndim+1)) [normal, offset] forming the hyperplane equation of the facet (see Qhull documentation for more).</div><div class="line">coplanar	(ndarray of int, shape (ncoplanar, 3)) Indices of coplanar points and the corresponding indices of the nearest facets and nearest vertex indices. Coplanar points are input points which were not included in the triangulation due to numerical precision issues. If option “Qc” is not specified, this list is not computed.</div><div class="line">area	(float) Area of the convex hull</div><div class="line">volume	(float) Volume of the convex hull</div></pre></td></tr></table></figure></p>
<h1 id="numpyrandomchoice的用法"><a href="#numpyrandomchoice的用法" class="header-anchor"></a>6. <a href="#numpy-random-choice的用法" class="headerlink" title="numpy.random.choice的用法"></a>numpy.random.choice的用法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">numpy.random.choice(a, size=<span class="keyword">None</span>, replace=<span class="keyword">True</span>, p=<span class="keyword">None</span>)</div><div class="line">--从所给的一维数组a中产生一个样本</div><div class="line">参数：</div><div class="line">-- a 表示一个给定的一维数组或者一个数字，如果是数字，则相当于np.arange(n)</div><div class="line">-- size 表示一个整数或整数元组；默认无值，给出一个随机选择的值</div><div class="line">-- replace 值为<span class="keyword">True</span> <span class="keyword">False</span> 表示随机选的值是否可以重复，如果是<span class="keyword">False</span>表示所有选的值不重复</div><div class="line">-- p 与a的shape一样的一维数组，表示选择的权重（概率，probability），不给出则为uniform分布</div></pre></td></tr></table></figure>
<h1 id="numpyrandomshuffle的用法"><a href="#numpyrandomshuffle的用法" class="header-anchor"></a>7. <a href="#numpy-random-shuffle的用法" class="headerlink" title="numpy.random.shuffle的用法"></a>numpy.random.shuffle的用法</h1><p>（shuffle是洗牌的意思，顾名思义是对数组random排序的意思）<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">numpy.random.shuffle(x)</div><div class="line">Modify a sequence <span class="keyword">in</span>-place by shuffling its contents.即原地修改原数组。</div><div class="line">x是数组或者list，不限维度</div><div class="line">可以通过shuffle一个List，然后取前多少个值来完成随机选择一些值。</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux与Windows双系统启动引导恢复]]></title>
      <url>/2017-07-day/Ubuntu_Rescue_Mode_Repair/</url>
      <content type="html"><![CDATA[<p>由grub引导的Linux与Windows共存的双系统环境中，Windows版本更新的时候常会出现grub引导失败，造成系统无法正常启动的问题。这是因为Windows更新的过程中导致MBR损坏导致无法找到/boot/grub部分，无法进一步引导系统。而这种情况下启动界面上会启动<code>grub rescue</code>模式，本文即在此模式下恢复grub引导。<br><a id="more"></a></p>
<h1 id="术语简述"><a href="#术语简述" class="header-anchor"></a>1. <a href="#术语简述" class="headerlink" title="术语简述"></a>术语简述</h1><h2 id="bios"><a href="#bios" class="header-anchor"></a>1.1. <a href="#BIOS" class="headerlink" title="BIOS"></a>BIOS</h2><p>“Basic Input Output System”，中文名称就是”基本输入输出系统”。其实，它是一组固化到计算机内主板上一个ROM芯片上的程序，它保存着计算机最重要的基本输入输出的程序、系统设置信息、开机后自检程序和系统自启动程序。 其主要功能是为计算机提供最底层的、最直接的硬件设置和控制。</p>
<h2 id="mbr"><a href="#mbr" class="header-anchor"></a>1.2. <a href="#MBR" class="headerlink" title="MBR"></a>MBR</h2><p>“Master Boot Record” 硬盘的物理扇区，也叫主引导记录！因为BIOS 很小无法承载启动的运行程序，所以在bios检测到一个硬盘后，将硬盘的0柱面、0磁头、1扇区的内容经过简单判断后， 至内存中的指定位置，然后跳转至这个位置，开始从这个位置运行，大小为512个byte，其中主要存放引导程序和该硬盘的分区表。</p>
<h2 id="grub"><a href="#grub" class="header-anchor"></a>1.3. <a href="#grub" class="headerlink" title="grub"></a>grub</h2><p>“GRand Unified Bootloade” 多重操作系统启动管理器，就是运行这个GRUB之后可以通过它来引导进入其它的系统，包括window以及linux</p>
<p>小结：PC 首先启动到BIOS ，然后检测硬盘的MBR，将MBR这块扇区的内容(也就是写在上面的GRUB)装入内存运行，再通过运行GRUB得到的结果实现新的跳转启动！</p>
<h1 id="出现grub-resuce情况下修复grub2"><a href="#出现grub-resuce情况下修复grub2" class="header-anchor"></a>2. <a href="#出现grub-resuce情况下修复grub2" class="headerlink" title="出现grub resuce情况下修复grub2"></a>出现grub resuce情况下修复grub2</h1><p>grub2分为两部分，一部分写入MBR，另一部分存在linux系统的/boot/grub目录下。出现<code>grub rescue&gt;</code>即MBR部分无法正常运作grub程序，找不到/boot/grub部分，于是启动grub救援模式。</p>
<p>grub rescue命令行有以下可用命令：<br>set, ls, insmod, root, prefix（设置启动路径）</p>
<ol>
<li>ls查看所有分区，列出：<br>（hd0），（hd0，msdos8），（hd0，msdos7），（hd0，msdos6），（hd0，msdos5），（hd0，msdos3），（hd0，msdos1）<br>需要找到ubuntu的安装分区，通过 <code>ls (hd0, msdos4)/boot</code>直到不出现<code>error: unknown filesystem</code></li>
<li>找到之后通过如下命令设置一次性启动参数：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">grub rescue&gt;<span class="built_in">set</span> root=(hd0,msdos8)</div><div class="line">grub rescue&gt;<span class="built_in">set</span> prefix=(hd0,msdos8)/boot/grub</div><div class="line">grub rescue&gt;insmod /boot/grub/i386-pc/normal.mod</div><div class="line">grub resuce&gt; normal</div></pre></td></tr></table></figure>
</li>
</ol>
<p>其中<code>/boot/grub/i386-pc/normal.mod</code>路径是在Ubuntu 17.04的系统下的。</p>
<ol>
<li>如果/boot/grub没有损坏，就能进入Ubuntu系统正常启动界面。If not， 需要手动引导：<br>进入grub命令行：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">grub&gt; root (hd0,4) <span class="comment">## 指定包含vmlinuz-2.6.18-274.7.1.el5和initrd-2.6.18-274.7.1.el5.img的partition</span></div><div class="line">grub&gt; kernel /boot/vmlinuz-2.6.18-274.7.1.el5 ro root=/dev/sda8 <span class="comment">## root= 是指定包含/sbin/init的partition，即挂载/的partition（以Linux的角度）</span></div><div class="line">grub&gt; initrd /boot/initrd-2.6.18-274.7.1.el5.img <span class="comment">## 据说这项可以省略</span></div><div class="line">grub&gt; boot</div></pre></td></tr></table></figure>
</li>
</ol>
<p>在正确进入了ubuntu之后，需要更新MBR的grub部分来适应新的分区情况：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo update-grub2 <span class="comment"># update /boot/grub/grub.cfg</span></div><div class="line">sudo grub-install /dev/sda <span class="comment"># install grub into MBR of Mater Disk</span></div></pre></td></tr></table></figure></p>
<h1 id="livecd-修复方法"><a href="#livecd-修复方法" class="header-anchor"></a>3. <a href="#liveCD-修复方法" class="headerlink" title="liveCD 修复方法"></a>liveCD 修复方法</h1><p>用启动盘进入try ubuntu界面，手动更新grub<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo update-grub2</div><div class="line">sudo grub-install /dev/sda8</div></pre></td></tr></table></figure></p>
<p>参考：</p>
<ol>
<li><a href="http://blog.csdn.net/jscese/article/details/36865449" target="_blank" rel="external">csdn-jscese</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> grub </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Shadowsocks 的搭建]]></title>
      <url>/2017-07-day/Shadowsocks_Configuration/</url>
      <content type="html"><![CDATA[<p>对于做科研、写代码的同学来说，翻<a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" target="_blank" rel="external">GFW</a>是必不可少的，对于专业的资料来说，google/sholar搜索的丰富程度可以秒某度的。梯子有很多种，例如改hosts、vpn(SoftEther)、浏览器翻墙的插件(谷歌上网助手)、自由门、GoAgent、cow、Lantern等等。今天我们来介绍一下在国外<a href="https://en.wikipedia.org/wiki/Virtual_private_server" target="_blank" rel="external">VPS</a>(Virtual private server)的搭建，不只是可以用来上google，scholar等，可以说相当于拥有了国外的网络环境，没有限制的浏览国外网站。<br><a id="more"></a></p>
<h1 id="shadowsocks-简介"><a href="#shadowsocks-简介" class="header-anchor"></a>1. <a href="#Shadowsocks-简介" class="headerlink" title="Shadowsocks 简介"></a>Shadowsocks 简介</h1><p>维基百科搬运：</p>
<blockquote>
<blockquote>
<p>Shadowsocks (以下简称“ss”) 是一种基于Sock5代理方式的网络资料加密传输工具，分为服务器端和客户端。使用之前，需先将服务器端部署到服务器上面，然后通过客户端连接并建立本地代理。<br>ss的运行原理与其他代理工具基本相同，使用特定的中转服务器完成数据传输。在服务器端部署完成后，用户需要按照指定的密码、加密方式和端口使用客户端软件与其连接。在成功连接到服务器后，客户端会在用户的电脑上构建一个本地Socks5代理。浏览网络时，网络流量会被分到本地socks5代理，客户端将其加密之后发送到服务器，服务器以同样的加密方式将流量回传给客户端，以此实现代理上网。ss的创建者<a href="http://github.com/clowwindy" target="_blank" rel="external">clowwindy</a>是中国人，15年8月22日受到一些外部压力，宣布停止维护此计划（项目）并移除其个人页面所存储的源代码，</p>
</blockquote>
</blockquote>
<p>详细News请移步<a href="https://zh.wikipedia.org/wiki/Shadowsocks" target="_blank" rel="external">维基百科</a>。</p>
<h1 id="ss-搭建"><a href="#ss-搭建" class="header-anchor"></a>2. <a href="#ss-搭建" class="headerlink" title="ss 搭建"></a>ss 搭建</h1><p>详细的搭建步骤有点琐碎，故分列几条。</p>
<ol>
<li>安装 Shadowsocks</li>
<li>server端配置</li>
<li>Windows客户端配置</li>
<li>Android客户端配置</li>
</ol>
<h2 id="安装-ss"><a href="#安装-ss" class="header-anchor"></a>2.1. <a href="#安装-ss" class="headerlink" title="安装 ss"></a>安装 ss</h2><p>以Ubuntu 17.04为例。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install python-pip</div><div class="line">sudo pip install shadowsocks</div><div class="line">sudo apt-get install python-m2crypto <span class="comment"># encrypt method</span></div></pre></td></tr></table></figure></p>
<h2 id="server端配置-ss"><a href="#server端配置-ss" class="header-anchor"></a>2.2. <a href="#server端配置-ss" class="headerlink" title="server端配置 ss"></a>server端配置 ss</h2><h3 id="即时启动"><a href="#即时启动" class="header-anchor"></a>2.2.1. <a href="#即时启动：" class="headerlink" title="即时启动："></a>即时启动：</h3><p><code>sudo ssserver -p 8388 -k password -m rc4-md5 -d start</code></p>
<h3 id="使用配置文件启动"><a href="#使用配置文件启动" class="header-anchor"></a>2.2.2. <a href="#使用配置文件启动：" class="headerlink" title="使用配置文件启动："></a>使用配置文件启动：</h3><p>编辑/etc/shadowsocks/config.json文件（如果没有可以创建此文件）<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line"><span class="attr">"server"</span>:<span class="string">"my_server_ip"</span>,</div><div class="line"><span class="attr">"server_port"</span>:<span class="number">8388</span>,</div><div class="line"><span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</div><div class="line"><span class="attr">"local_port"</span>:<span class="number">1080</span>,</div><div class="line"><span class="attr">"password"</span>:<span class="string">"mypassword"</span>,</div><div class="line"><span class="attr">"timeout"</span>:<span class="number">300</span>,</div><div class="line"><span class="attr">"method"</span>:<span class="string">"rc4-md5"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>字段含义：</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>含义  </th>
</tr>
</thead>
<tbody>
<tr>
<td>server</td>
<td>服务器 IP (IPv4/IPv6)</td>
</tr>
<tr>
<td>server_port</td>
<td>服务器端口</td>
</tr>
<tr>
<td>local_port</td>
<td>本地端端口</td>
</tr>
<tr>
<td>password</td>
<td>密码</td>
</tr>
<tr>
<td>timeout</td>
<td>超时时间(s)</td>
</tr>
<tr>
<td>method</td>
<td>加密方法， 可选“bf-cfb”, “aes-256-cfb”, “rc4-md5”,等</td>
</tr>
</tbody>
</table>
<blockquote>
<p>加密方式推荐使用rc4-md5，因为 RC4 比 AES 速度快好几倍，如果用在路由器上会带来显著性能提升。旧的 RC4 加密之所以不安全是因为 Shadowsocks 在每个连接上重复使用 key，没有使用 IV。现在已经重新正确实现，可以放心使用。</p>
</blockquote>
<p>config.json文件创建完毕后，赋予755权限<br><code>sudo chmod 755 /etc/shadowsocks/config.json</code><br>使用配置文件，后台运行：<br><code>sudo ssserver -c /etc/shadowsocks/config.json -d start</code></p>
<h3 id="开机启动"><a href="#开机启动" class="header-anchor"></a>2.2.3. <a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h3><p>上述两种方法都是在机器没有重启的情况下用的，每次重启后都手动去开启ss服务有点麻烦，所以设置开机启动可以省点事。<br>创建 /etc/init.d/shadowsocks 文件 <code>sudo vim /etc/init.d/shadowsocks</code><br>添加以下内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="comment">### BEGIN INIT INFO</span></div><div class="line"><span class="comment"># Provides:          shadowsocks</span></div><div class="line"><span class="comment"># Required-Start:    $remote_fs $syslog</span></div><div class="line"><span class="comment"># Required-Stop:     $remote_fs $syslog</span></div><div class="line"><span class="comment"># Default-Start:     2 3 4 5</span></div><div class="line"><span class="comment"># Default-Stop:      0 1 6</span></div><div class="line"><span class="comment"># Short-Description: start shadowsocks</span></div><div class="line"><span class="comment"># Description:       start shadowsocks</span></div><div class="line"><span class="comment">### END INIT INFO</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">start</span></span>()&#123;</div><div class="line">    ssserver -c /etc/shadowsocks/config.json -d start</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">stop</span></span>()&#123;</div><div class="line">    ssserver -c /etc/shadowsocks/config.json -d stop</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></div><div class="line">start)</div><div class="line">    start</div><div class="line">    ;;</div><div class="line">stop)</div><div class="line">    stop</div><div class="line">    ;;</div><div class="line">reload)</div><div class="line">     stop</div><div class="line">     start</div><div class="line">     ;;</div><div class="line">*)</div><div class="line">    <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|reload|stop&#125;"</span></div><div class="line">    <span class="built_in">exit</span> 1</div><div class="line">    ;;</div><div class="line"><span class="keyword">esac</span></div></pre></td></tr></table></figure></p>
<p>增加这个文件的可执行权限 <code>sudo chmod +x /etc/init.d/shadowsocks</code><br>在rc.d中新增<code>sudo update-rc.d shadowsocks defaults</code>，添加到开机启动中<br>以后就可以通过<code>sudo service shadowsocks {start|reload|stop}</code>来管理了。</p>
<h3 id="ss多用户配置"><a href="#ss多用户配置" class="header-anchor"></a>2.2.4. <a href="#ss多用户配置" class="headerlink" title="ss多用户配置"></a>ss多用户配置</h3><p>只开一个端口，用的人多了会相互挤占流量，所以多开几个为妥。配置很简单，只需要修改上述config.json文件：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line"><span class="string">"server"</span>:<span class="string">"my_server_ip"</span>,</div><div class="line"><span class="string">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</div><div class="line"><span class="string">"local_port"</span>:<span class="number">1080</span>,</div><div class="line"><span class="string">"port_password"</span>:&#123;</div><div class="line">  <span class="string">"8381"</span>: <span class="string">"12345678"</span>,</div><div class="line">  <span class="string">"8382"</span>: <span class="string">"12345678"</span>,</div><div class="line">  <span class="string">"8383"</span>: <span class="string">"12345678"</span></div><div class="line">&#125;,</div><div class="line"><span class="string">"timeout"</span>:<span class="number">300</span>,</div><div class="line"><span class="string">"method"</span>:<span class="string">"rc4-md5"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果是ubuntu/debian用户，ss多用户多端口的配置就到此结束了。但是对于centos用户仍会存在问题——centos默认的防火墙机制，会阻隔掉多端口配置。解决方法是，将这个端口打开tcp和udp通信。具体操作如下，参考<a href="http://blog.csdn.net/helinlin007/article/details/51469656" target="_blank" rel="external">这里</a>：</p>
<ol>
<li>打开<code>etc/firewalled/zones/public.xml</code>进行端口编辑，如<code>&lt;port protocol=&quot;tcp&quot; port=&quot;443&quot;/&gt;   &lt;portprotocol=&quot;udp&quot; port=&quot;443&quot;/&gt;</code>，即可添加tcp和udp的权限。</li>
<li><code>systemctl firewall restart</code>重启防火墙</li>
</ol>
<h3 id="ss-速度优化"><a href="#ss-速度优化" class="header-anchor"></a>2.2.5. <a href="#ss-速度优化" class="headerlink" title="ss 速度优化"></a>ss 速度优化</h3><p>基于kvm架构vps的优化<br>这方面SS给出了非常详尽的优化指南，主要有：优化内核参数，开启TCP Fast Open<br>这里只给出优化内核参数/优化加密方式的方法。更多、更详细的策略方法请参考<a href="https://github.com/iMeiji/shadowsocks_install/wiki/shadowsocks-optimize" target="_blank" rel="external">shadowsocks optimize</a></p>
<h4 id="内核参数优化"><a href="#内核参数优化" class="header-anchor"></a>2.2.5.1. <a href="#内核参数优化" class="headerlink" title="内核参数优化"></a>内核参数优化</h4><p>创建<code>/etc/sysctl.d/local.conf</code>并写入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># max open files</span></div><div class="line">fs.file-max = 1024000</div><div class="line"><span class="comment"># max read buffer</span></div><div class="line">net.core.rmem_max = 67108864</div><div class="line"><span class="comment"># max write buffer</span></div><div class="line">net.core.wmem_max = 67108864</div><div class="line"><span class="comment"># default read buffer</span></div><div class="line">net.core.rmem_default = 65536</div><div class="line"><span class="comment"># default write buffer</span></div><div class="line">net.core.wmem_default = 65536</div><div class="line"><span class="comment"># max processor input queue</span></div><div class="line">net.core.netdev_max_backlog = 4096</div><div class="line"><span class="comment"># max backlog</span></div><div class="line">net.core.somaxconn = 4096</div><div class="line"></div><div class="line"><span class="comment"># resist SYN flood attacks</span></div><div class="line">net.ipv4.tcp_syncookies = 1</div><div class="line"><span class="comment"># reuse timewait sockets when safe</span></div><div class="line">net.ipv4.tcp_tw_reuse = 1</div><div class="line"><span class="comment"># turn off fast timewait sockets recycling</span></div><div class="line">net.ipv4.tcp_tw_recycle = 0</div><div class="line"><span class="comment"># short FIN timeout</span></div><div class="line">net.ipv4.tcp_fin_timeout = 30</div><div class="line"><span class="comment"># short keepalive time</span></div><div class="line">net.ipv4.tcp_keepalive_time = 1200</div><div class="line"><span class="comment"># outbound port range</span></div><div class="line">net.ipv4.ip_local_port_range = 10000 65000</div><div class="line"><span class="comment"># max SYN backlog</span></div><div class="line">net.ipv4.tcp_max_syn_backlog = 4096</div><div class="line"><span class="comment"># max timewait sockets held by system simultaneously</span></div><div class="line">net.ipv4.tcp_max_tw_buckets = 5000</div><div class="line"><span class="comment"># TCP receive buffer</span></div><div class="line">net.ipv4.tcp_rmem = 4096 87380 67108864</div><div class="line"><span class="comment"># TCP write buffer</span></div><div class="line">net.ipv4.tcp_wmem = 4096 65536 67108864</div><div class="line"><span class="comment"># turn on path MTU discovery</span></div><div class="line">net.ipv4.tcp_mtu_probing = 1</div><div class="line"></div><div class="line"><span class="comment"># for high-latency network</span></div><div class="line">net.ipv4.tcp_congestion_control = htcp</div><div class="line"><span class="comment"># forward ipv4</span></div><div class="line">net.ipv4.ip_forward = 1</div></pre></td></tr></table></figure></p>
<p>其中最后的<code>hybla</code>是为高延迟网络（如美国，欧洲）准备的算法，需要内核支持，测试内核是否支持，在终端输入：<code>sysctl net.ipv4.tcp_available_congestion_control</code><br>如果结果中有<code>hybla</code>，则证明你的内核已开启<code>hybla</code>，如果没有<code>hybla</code>，可以用命令<code>modprobe tcp_hybla</code>开启。</p>
<p>对于低延迟的网络（如日本，香港等），可以使用<code>htcp</code>，可以非常显著的提高速度，首先使用<code>modprobe tcp_htcp</code>开启，再将<code>net.ipv4.tcp_congestion_control = hybla改为net.ipv4.tcp_congestion_control = htcp</code>，建议EC2日本用户使用这个算法。</p>
<p>使配置生效：sysctl –system<br>note: 经过手机Andoid客户端测试, 速度确实有提升（之前手机端速度感觉已经很快了！），YouTube上1080p的高清视频一点不卡，甚至于还没有缓冲到的时间点直接点击在3秒之内都可以缓冲出来（这个时候的即时速度可以到3M/s）。<img src="/images/scenery.jpg"><br>YouTube 1080p高清测试视频，<a href="https://youtu.be/6v2L2UGZJAM" target="_blank" rel="external">Planet Earth: Amazing nature scenery</a></p>
<h4 id="tcp优化"><a href="#tcp优化" class="header-anchor"></a>2.2.5.2. <a href="#TCP优化" class="headerlink" title="TCP优化"></a>TCP优化</h4><p>1.修改文件句柄数限制<br>如果是ubuntu/centos均可修改/etc/sysctl.d/local.conf<br>找到fs.file-max这一行，修改其值为1024000，并保存退出。然后执行<code>sysctl -p</code>使其生效<br>修改vi /etc/security/limits.conf文件，加入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">*               soft    nofile           512000</div><div class="line">*               hard    nofile          1024000</div></pre></td></tr></table></figure></p>
<p>2.修改vi /etc/profile文件，加入<br><code>ulimit -SHn 1024000</code><br>然后重启服务器执行<code>ulimit -n</code>，查询返回1024000即可。</p>
<h3 id="ss-加密优化"><a href="#ss-加密优化" class="header-anchor"></a>2.2.6. <a href="#ss-加密优化" class="headerlink" title="ss 加密优化"></a>ss 加密优化</h3><ol>
<li>装M2Crypto 这个可以提高SS的加密速度，安装办法：<br>Debian/Ubuntu<br><code>apt-get install python-m2crypto</code><br>安装之后重启SS，速度将会有一定的提升</li>
<li>装 gevent 安装 gevent可以提高 Shadowsocks 的性能。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install python-dev libevent-dev python-setuptools python-gevent easy_install greenlet gevent</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> VPS </tag>
            
            <tag> Shadowsocks </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo Configuration]]></title>
      <url>/2017-07-day/Hexo/</url>
      <content type="html"><![CDATA[<p><meta content="text/html; charset=UTF-8" http-equiv="content-type"><br>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文为Hexo相关的东西，大部分与特性配置有关。<br><a id="more"></a></p>
<h1 id="特性配置"><a href="#特性配置" class="header-anchor"></a>1. <a href="#特性配置" class="headerlink" title="特性配置"></a>特性配置</h1><h2 id="添加邮箱链接控制"><a href="#添加邮箱链接控制" class="header-anchor"></a>1.1. <a href="#添加邮箱链接控制" class="headerlink" title="添加邮箱链接控制"></a>添加邮箱链接控制</h2><p>安装插件<code>hexo-email-obfuscate</code>，参考<a href="https://www.npmjs.com/package/hexo-email-obfuscate" target="_blank" rel="external">这里</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-email-obfuscate --save</div></pre></td></tr></table></figure></p>
<p>在站点配置文件<code>_config.yml</code>中加入：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">plugins</span>:</div><div class="line">  <span class="selector-tag">-</span> <span class="selector-tag">hexo-email-obfuscate</span></div></pre></td></tr></table></figure></p>
<p>使用语法：<br>Markdown<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[Contact Me](mailto:foo@bar.com)</div></pre></td></tr></table></figure></p>
<h2 id="文章中添加居中模块"><a href="#文章中添加居中模块" class="header-anchor"></a>1.2. <a href="#文章中添加居中模块" class="headerlink" title="文章中添加居中模块"></a>文章中添加居中模块</h2><p>文章Markdown中填写如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;blockquote class="blockquote-center"&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote&gt;</div></pre></td></tr></table></figure></p>
<h2 id="隐藏网页底部powered-by-hexo-强力驱动"><a href="#隐藏网页底部powered-by-hexo-强力驱动" class="header-anchor"></a>1.3. <a href="#隐藏网页底部powered-By-Hexo-强力驱动" class="headerlink" title="隐藏网页底部powered By Hexo / 强力驱动"></a>隐藏网页底部powered By Hexo / 强力驱动</h2><p>打开themes/next/layout/_partials/footer.swig,使用””隐藏之间的代码即可，或者直接删除。</p>
<h2 id="友情链接设置"><a href="#友情链接设置" class="header-anchor"></a>1.4. <a href="#友情链接设置" class="headerlink" title="友情链接设置"></a>友情链接设置</h2><p>编辑站点的 _config.yml 添加：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># title, chinese available</span></div><div class="line"><span class="attr">links_title:</span> <span class="string">Links</span></div><div class="line"><span class="comment"># links</span></div><div class="line"><span class="attr">links:</span></div><div class="line"><span class="attr">  MacTalk:</span> <span class="attr">http://macshuo.com/</span></div></pre></td></tr></table></figure></p>
<h2 id="代码高亮问题"><a href="#代码高亮问题" class="header-anchor"></a>1.5. <a href="#代码高亮问题" class="headerlink" title="代码高亮问题"></a>代码高亮问题</h2><p>Hexo自带的highlight.js代码高亮并不好用，当在博客配置中将highlight的选项auto_detect设为true时，hexo g生成博客时报错<br>但是如果你不去设置这一项，代码高亮永远是<code>normal</code>主题。解决这个问题很简单，就是手动设置<code>auto_detect = false</code>:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">highlight:</div><div class="line">  enable: <span class="literal">false</span></div><div class="line">  line_number: <span class="literal">false</span></div><div class="line">  auto_detect: <span class="literal">false</span></div><div class="line">  tab_replace:</div></pre></td></tr></table></figure></p>
<h2 id="代码高亮prism"><a href="#代码高亮prism" class="header-anchor"></a>1.6. <a href="#代码高亮prism" class="headerlink" title="代码高亮prism"></a>代码高亮prism</h2><p>由<a href="https://github.com/wayou/hexo-prism" target="_blank" rel="external">wayou</a>开发，代替hexo原生代码高亮。</p>
<h3 id="install"><a href="#install" class="header-anchor"></a>1.6.1. <a href="#Install" class="headerlink" title="Install:"></a>Install:</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -S hexo-prism-plugin</div></pre></td></tr></table></figure>
<h3 id="usage"><a href="#usage" class="header-anchor"></a>1.6.2. <a href="#Usage" class="headerlink" title="Usage:"></a>Usage:</h3><p>编辑站点配置文件<code>_config.yml</code>，加入<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">### prism_plugin</span></div><div class="line"><span class="attr">prism_plugin:</span></div><div class="line"><span class="attr">  mode:</span> <span class="string">'preprocess'</span>    <span class="comment"># realtime or preprocess</span></div><div class="line"><span class="attr">  theme:</span> <span class="string">'default'</span></div><div class="line">  <span class="comment">#theme: 'coy'</span></div><div class="line">  <span class="comment">#theme: 'dark'</span></div><div class="line">  <span class="comment">#theme: 'funky'</span></div><div class="line">  <span class="comment">#theme: 'okaidia'</span></div><div class="line">  <span class="comment">#theme: 'solarizedlight'</span></div><div class="line">  <span class="comment">#theme: 'tomorrow'</span></div><div class="line">  <span class="comment">#theme: 'twilight'</span></div><div class="line"><span class="attr">  line_number:</span> <span class="literal">true</span>   <span class="comment"># default false</span></div><div class="line"><span class="attr">  auto_import_assets:</span> <span class="literal">true</span>   <span class="comment"># default true</span></div></pre></td></tr></table></figure></p>
<h3 id="代码高亮主题测试"><a href="#代码高亮主题测试" class="header-anchor"></a>1.6.3. <a href="#代码高亮主题测试" class="headerlink" title="代码高亮主题测试"></a>代码高亮主题测试</h3><p>default:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807063/default_kglgrh.jpg" alt=""><br>coy:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807063/coy_vjozcy.jpg" alt=""><br>dark:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807063/dark_lxldep.jpg" alt=""><br>funky:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/funky_bvxgwk.jpg" alt=""><br>okaidia:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/okaidia_jtwjxz.jpg" alt=""><br>solarizedlight:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/Solariedlight_d6h4xb.jpg" alt=""><br>tomorrow:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/tomorrow_liekgg.jpg" alt=""><br>twilight:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/twilight_wlpsfk.jpg" alt=""><br>note:感觉有些主题怪怪的~~~</p>
<h2 id="文章内插入图片"><a href="#文章内插入图片" class="header-anchor"></a>1.7. <a href="#文章内插入图片" class="headerlink" title="文章内插入图片"></a>文章内插入图片</h2><p>在文章中写入:<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![](/upload_image/1.jpg)</div></pre></td></tr></table></figure></p>
<p>然后进入themes-主题名-source-upload_image目录下(自己创建)，将图片放到这个目录下，就可以了。</p>
<blockquote>
<p>说明：当执行hexo g命令时，会自动把图片复制到 public文件的upload_image目录下。</p>
</blockquote>
<h2 id="鼠标点击小红心的设置"><a href="#鼠标点击小红心的设置" class="header-anchor"></a>1.8. <a href="#鼠标点击小红心的设置" class="headerlink" title="鼠标点击小红心的设置"></a>鼠标点击小红心的设置</h2><p>将 <a href="https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/love.js" target="_blank" rel="external">love.js</a> 文件添加到 \themes\next\source\js\src 文件目录下。<br>找到 \themes\next\layout_layout.swing 文件， 在文件的后面， 标签之前 添加以下代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 页面点击小红心 --&gt;</div><div class="line">&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<h2 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="header-anchor"></a>1.9. <a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h2><p>将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。<br>找到文件 themes\next\source\css_custom\custom.styl ，添加如下 css 样式：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.post-body p a &#123;</div><div class="line">  color: #0593d3;</div><div class="line">  border-bottom: none;</div><div class="line">  &amp;:hover &#123;</div><div class="line">    color: #0477ab;</div><div class="line">    text-decoration: underline;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="设置字体"><a href="#设置字体" class="header-anchor"></a>1.10. <a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h2><blockquote>
<p>note: 此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后</p>
</blockquote>
<p>为了解决 Google Fonts API 不稳定的问题，NexT 在 5.0.1 中引入此特性。 通过此特性，你可以指定所使用的字体库外链地址；与此同时，NexT 开放了 5 个特定范围的字体设定，他们是：</p>
<ul>
<li>全局字体：定义的字体将在全站范围使用</li>
<li>标题字体：文章内标题的字体（h1, h2, h3, h4, h5, h6）</li>
<li>文章字体：文章所使用的字体</li>
<li>Logo字体：Logo 所使用的字体</li>
<li>代码字体： 代码块所使用的字体</li>
</ul>
<p>注意，各项所指定的字体将作为首选字体，当他们不可用时会自动 Fallback 到 NexT 设定的基础字体组：<br>非代码类字体：Fallback 到 “PingFang SC”, “Microsoft YaHei”, sans-serif<br>代码类字体： Fallback 到 consolas, Menlo, “PingFang SC”, “Microsoft YaHei”, monospace<br>另外，每一项都有一个额外的 external 属性，此属性用来控制是否使用外链字体库。 开放此属性方便你设定那些已经安装在系统中的字体，减少不必要的请求（请求大小）。<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="attr">font:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"></div><div class="line">  <span class="comment"># 外链字体库地址，例如 //fonts.googleapis.com (默认值)</span></div><div class="line"><span class="attr">  host:</span> <span class="string">//fonts.googleapis.com</span></div><div class="line"></div><div class="line">  <span class="comment"># 全局字体，应用在 body 元素上</span></div><div class="line"><span class="attr">  global:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span> <span class="string">Lato</span></div><div class="line"></div><div class="line">  <span class="comment"># 标题字体 (h1, h2, h3, h4, h5, h6)</span></div><div class="line"><span class="attr">  headings:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span> <span class="string">Playball</span></div><div class="line"><span class="attr">    size:</span> <span class="number">30</span></div><div class="line"></div><div class="line">  <span class="comment"># 文章字体</span></div><div class="line"><span class="attr">  posts:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span></div><div class="line"></div><div class="line">  <span class="comment"># Logo 字体</span></div><div class="line"><span class="attr">  logo:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span> <span class="string">Playball</span></div><div class="line"><span class="attr">    size:</span> <span class="number">40</span></div><div class="line"></div><div class="line">  <span class="comment"># 代码字体，应用于 code 以及代码块</span></div><div class="line"><span class="attr">  codes:</span></div><div class="line"><span class="attr">    external:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    family:</span> <span class="string">Droid</span> <span class="string">Sans</span> <span class="string">Mono</span></div><div class="line"><span class="attr">    size:</span> <span class="number">25</span></div></pre></td></tr></table></figure></p>
<h2 id="设置菜单"><a href="#设置菜单" class="header-anchor"></a>1.11. <a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h2><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 <a href="http://fontawesome.io/" target="_blank" rel="external">Font Awesome</a> 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景。参考<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">官方设置菜单配置</a><br>如添加一个新的页面“链接”：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page Links</div></pre></td></tr></table></figure></p>
<p>即在<code>hexo/source/</code>目录下新建了<code>Links</code>目录，目录中包含<code>index.md</code>文件，文件内容：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">---</span></div><div class="line"><span class="selector-tag">title</span>: <span class="selector-tag">Links</span></div><div class="line"><span class="selector-tag">date</span>: 2017<span class="selector-tag">-07-20</span> 10<span class="selector-pseudo">:34</span><span class="selector-pseudo">:38</span></div><div class="line"><span class="selector-tag">---</span></div></pre></td></tr></table></figure></p>
<p>然后再NexT主题配置文件中的menu项和menu_ico项中加入 Links</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attr">menu:</span></div><div class="line"><span class="attr">  home:</span> <span class="string">/</span></div><div class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span></div><div class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span></div><div class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span></div><div class="line"><span class="attr">  about:</span> <span class="string">/about/</span></div><div class="line"><span class="attr">  links:</span> <span class="string">/Links/</span> <span class="comment"># <span class="doctag">note:</span> links尝试用过Links: /Links发现会有问题——即使hexo g产生的/hexo/public目录中确实有/links，但是在推送到VPS的时候莫名其妙变成/Links，造成无法访问。</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">menu_icons</span>:</div><div class="line">  <span class="selector-tag">enable</span>: <span class="selector-tag">true</span></div><div class="line">  <span class="selector-id">#KeyMapsToMenuItemKey</span>: <span class="selector-tag">NameOfTheIconFromFontAwesome</span></div><div class="line">  <span class="selector-tag">home</span>: <span class="selector-tag">home</span></div><div class="line">  <span class="selector-tag">about</span>: <span class="selector-tag">user</span></div><div class="line">  <span class="selector-tag">categories</span>: <span class="selector-tag">th</span></div><div class="line">  <span class="selector-tag">schedule</span>: <span class="selector-tag">calendar</span></div><div class="line">  <span class="selector-tag">tags</span>: <span class="selector-tag">heart</span></div><div class="line">  <span class="selector-tag">archives</span>: <span class="selector-tag">archive</span></div><div class="line">  <span class="selector-tag">links</span>: <span class="selector-tag">heart</span></div></pre></td></tr></table></figure>
<p>最后要修改<code>/themes/next/languages/</code>中对应的语言文件<code>zh-Hans.yml</code>的中links项<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="attr">menu:</span></div><div class="line"><span class="attr">  home:</span> <span class="string">首页</span></div><div class="line"><span class="attr">  archives:</span> <span class="string">归档</span></div><div class="line"><span class="attr">  categories:</span> <span class="string">分类</span></div><div class="line"><span class="attr">  tags:</span> <span class="string">标签</span></div><div class="line"><span class="attr">  about:</span> <span class="string">关于</span></div><div class="line"><span class="attr">  search:</span> <span class="string">搜索</span></div><div class="line"><span class="attr">  schedule:</span> <span class="string">日程表</span></div><div class="line"><span class="attr">  sitemap:</span> <span class="string">站点地图</span></div><div class="line"><span class="attr">  commonweal:</span> <span class="string">公益404</span></div><div class="line"><span class="attr">  links:</span> <span class="string">链接</span></div></pre></td></tr></table></figure></p>
<h2 id="添加并美化本地搜索"><a href="#添加并美化本地搜索" class="header-anchor"></a>1.12. <a href="#添加并美化本地搜索" class="headerlink" title="添加并美化本地搜索"></a>添加并美化本地搜索</h2><p>NexT 主题内置了本地站内搜索，很方便添加。</p>
<ol>
<li><p>首先安装<code>hexo-generator-search</code>插件，用于生成博客索引数据<br>在站点的根目录下执行以下命令进行安装：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-search --save</div></pre></td></tr></table></figure>
</li>
<li><p>编辑 站点配置文件<code>_config.yml</code>，新增以下内容到任意位置：</p>
</li>
</ol>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">search</span>:</div><div class="line">  <span class="selector-tag">path</span>: <span class="selector-tag">search</span><span class="selector-class">.xml</span></div><div class="line">  <span class="selector-tag">field</span>: <span class="selector-tag">post</span></div></pre></td></tr></table></figure>
<ol>
<li>编辑NexT主题配置文件<code>_config.yml</code>，解注释local search:<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Local search</span></div><div class="line"><span class="attr">local_search:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line">  <span class="comment"># if auto, trigger search by changing input</span></div><div class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></div><div class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></div><div class="line"><span class="attr">  fielf:</span> <span class="string">post</span></div><div class="line"><span class="attr">  format:</span> <span class="string">html</span></div><div class="line"><span class="attr">  limit:</span> <span class="number">10000</span></div><div class="line"><span class="attr">  trigger:</span> <span class="string">auto</span></div><div class="line">  <span class="comment"># 注意把trigger: auto打开，可以在输入的同时即时显示搜索结果</span></div><div class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></div><div class="line">  <span class="comment">#top_n_per_article: 1</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="侧边栏头像修饰"><a href="#侧边栏头像修饰" class="header-anchor"></a>1.13. <a href="#侧边栏头像修饰" class="headerlink" title="侧边栏头像修饰"></a>侧边栏头像修饰</h2><p>把侧边栏头像变成圆形，并且鼠标停留在上面发生旋转效果，参考<a href="odepub.cn/2016/03/20/Hexo-blog-theme-switching-from-Jacman-to-NexT-Mist/">这里</a>，具体修改文件的位置是<code>hexo\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>中的内容如下:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.site-author-image</span> &#123;</div><div class="line">  <span class="attribute">display</span>: block;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">  <span class="attribute">max-width</span>: <span class="number">96px</span>;</div><div class="line">  <span class="attribute">height</span>: auto;</div><div class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#333</span>;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">2px</span>;</div><div class="line">  <span class="comment">/* start*/</span></div><div class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span></div><div class="line">  webkit-transition: <span class="number">1.4s</span> all;</div><div class="line">  <span class="attribute">moz-transition</span>: <span class="number">1.4s</span> all;</div><div class="line">  <span class="attribute">ms-transition</span>: <span class="number">1.4s</span> all;</div><div class="line">  <span class="attribute">transition</span>: <span class="number">1.4s</span> all;</div><div class="line">  <span class="comment">/* end */</span></div><div class="line">&#125;</div><div class="line"><span class="comment">/* start */</span></div><div class="line"><span class="selector-class">.site-author-image</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: <span class="number">#55DAE1</span>;</div><div class="line">  <span class="attribute">webkit-transform</span>: <span class="built_in">rotate</span>(360deg) <span class="built_in">scale</span>(1.1);</div><div class="line">  <span class="attribute">moz-transform</span>: <span class="built_in">rotate</span>(360deg) <span class="built_in">scale</span>(1.1);</div><div class="line">  <span class="attribute">ms-transform</span>: <span class="built_in">rotate</span>(360deg) <span class="built_in">scale</span>(1.1);</div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(360deg) <span class="built_in">scale</span>(1.1);</div><div class="line">&#125;</div><div class="line"><span class="comment">/* end */</span></div></pre></td></tr></table></figure></p>
<h2 id="cloudinary-在线图片服务"><a href="#cloudinary-在线图片服务" class="header-anchor"></a>1.14. <a href="#Cloudinary-在线图片服务" class="headerlink" title="Cloudinary 在线图片服务"></a>Cloudinary 在线图片服务</h2><p>除了在本地存储图片，还可以将图片上传到一些免费的CDN服务中。比如Cloudinary提供的图片CDN服务，在Cloudinary中上传图片后，会生成对应的url地址，将地址直接拿来引用即可。<br>在<a href="https://cloudinary.com" target="_blank" rel="external">Cloudinary</a>申请账号，上传图片(注意把upload选项中的unsigned signature选上)</p>
<h2 id="设置文章置顶"><a href="#设置文章置顶" class="header-anchor"></a>1.15. <a href="#设置文章置顶" class="headerlink" title="设置文章置顶"></a>设置文章置顶</h2><blockquote>
<p>note: 参考<a href="http://www.netcan666.com/2015/11/22/%E8%A7%A3%E5%86%B3Hexo%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/" target="_blank" rel="external">解决文章置顶</a></p>
</blockquote>
<ol>
<li><p>安装 hexo-generator-index</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i --save hexo-generator-index</div></pre></td></tr></table></figure>
</li>
<li><p>将如下的代码加入<code>node_modules/hexo-generator-index/lib/generator.js</code></p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></div><div class="line">        <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></div><div class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>最终的 <code>node_modules/hexo-generator-index/lib/generator.js</code> 代码:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="string">'use strict'</span>;</div><div class="line">var pagination = require(<span class="string">'hexo-pagination'</span>);</div><div class="line"><span class="keyword">module</span>.<span class="keyword">exports</span> = function(locals) &#123;</div><div class="line">    var config = <span class="keyword">this</span>.config;</div><div class="line">    var posts = locals.posts.sort(config.index_generator.order_by);</div><div class="line">    var paginationDir = config.pagination_dir || <span class="string">'page'</span>;</div><div class="line">    posts.data = posts.data.sort(function(a, b) &#123;</div><div class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></div><div class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></div><div class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></div><div class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</div><div class="line">        perPage: config.index_generator.per_page,</div><div class="line">        layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</div><div class="line">        format: paginationDir + <span class="string">'/%d/'</span>,</div><div class="line">        data: &#123;</div><div class="line">          __index: <span class="keyword">true</span></div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>在文章 <code>Front-matter</code> 中添加 <code>top</code> 值，数值越大文章越靠前，如：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">title</span>: <span class="selector-tag">Hexo</span></div><div class="line"><span class="selector-tag">date</span>: 2017<span class="selector-tag">-07-21</span></div><div class="line"><span class="selector-tag">tags</span>: <span class="selector-tag">vps</span></div><div class="line"><span class="selector-tag">categories</span>: <span class="selector-tag">vps</span></div><div class="line"><span class="selector-tag">top</span>: 3</div></pre></td></tr></table></figure></p>
<h2 id="next主题宽度调整"><a href="#next主题宽度调整" class="header-anchor"></a>1.16. <a href="#next主题宽度调整" class="headerlink" title="next主题宽度调整"></a>next主题宽度调整</h2><p>编辑 <code>themes/next/source/css/_variables/custom.styl</code> 文件，新增变量：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 修改成你期望的宽度</span></div><div class="line">$content-desktop = <span class="number">700</span>px</div><div class="line"><span class="comment">// 当视窗超过 1600px 后的宽度</span></div><div class="line">$content-desktop-large = <span class="number">900</span>px</div></pre></td></tr></table></figure></p>
<p>以上方法不适用与next.Picses scheme<br><code>Pisces Scheme</code> 编辑<code>themes/next/source/css/_schemes/Picses/_layout.styl</code>文件，更改以下 css 选项定义值：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.header</span>&#123; <span class="attribute">width</span>: <span class="number">1150px</span>; &#125;</div><div class="line"><span class="selector-class">.container</span> <span class="selector-class">.main-inner</span> &#123; <span class="attribute">width</span>: <span class="number">1150px</span>; &#125;</div><div class="line"><span class="selector-class">.content-wrap</span> &#123; <span class="attribute">width</span>: <span class="built_in">calc</span>(100% - 260px); &#125;</div></pre></td></tr></table></figure></p>
<h2 id="设置disqus"><a href="#设置disqus" class="header-anchor"></a>1.17. <a href="#设置disqus" class="headerlink" title="设置disqus"></a>设置disqus</h2><blockquote>
<p>note: “多说”评论功能应用广泛，但是据其公司的<a href="http://dev.duoshuo.com/threads/58d1169ae293b89a20c57241" target="_blank" rel="external">声明</a>，多说网已经关闭。</p>
</blockquote>
<p>hexo已经内置了对disqus的支持，配置也很简单</p>
<ol>
<li>首先注册disques账号<br><a href="https://disqus.com" target="_blank" rel="external">https://disqus.com</a> 获取shortname</li>
<li>next主题内置了对disqus的支持，在next主题的_config_xml中搜索disqus，并做如下配置：<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># <span class="selector-tag">disqus</span></div><div class="line"><span class="selector-tag">disqus</span>:</div><div class="line">  <span class="selector-tag">enable</span>: <span class="selector-tag">True</span></div><div class="line">  <span class="selector-tag">shortname</span>: <span class="selector-tag">jiaxm-me</span></div><div class="line">  <span class="selector-tag">count</span>: <span class="selector-tag">true</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="给github添加readme"><a href="#给github添加readme" class="header-anchor"></a>1.18. <a href="#给github添加README" class="headerlink" title="给github添加README"></a>给github添加README</h2><p>hexo会把md文件都解析成html，但是github的readme只支持MD格式，最简单的方法是让hexo不对README.md做转换。<br>站点配置文件_config_xml中的<code>skip_render:</code>改为<code>skip_render: README.md</code><br>note: README.md放在 hexo/source/目录中即可</p>
<h2 id="markdown里-table-的语法"><a href="#markdown里-table-的语法" class="header-anchor"></a>1.19. <a href="#MarkDown里-table-的语法" class="headerlink" title="MarkDown里 table 的语法"></a>MarkDown里 table 的语法</h2><p>MD的写法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">| I | am | table |</div><div class="line">|:-----|:---:|----------:|</div><div class="line">|文本内容| **`是`** |table|</div><div class="line">|文本内容| **`是`** |table|</div><div class="line">|文本内容| **`是`** |table|</div></pre></td></tr></table></figure></p>
<ol>
<li>表格与上面的文本内容之间<strong>空一行</strong>。否则解析不出来</li>
<li>最上面一行是表格第一列的值。第二行的冒号位置决定表格内文本的对齐方式。有水平居中、水平靠左对齐、水平靠右对齐三种</li>
<li>每列的宽度是根据对应列里最长的文本来决定的</li>
</ol>
<p>输出结果：</p>
<table>
<thead>
<tr>
<th style="text-align:left">我</th>
<th style="text-align:center">是</th>
<th style="text-align:right">展示表格</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">文本内容</td>
<td style="text-align:center"><strong><code>是</code></strong></td>
<td style="text-align:right">table</td>
</tr>
<tr>
<td style="text-align:left">文本内容</td>
<td style="text-align:center"><strong><code>是</code></strong></td>
<td style="text-align:right">table</td>
</tr>
<tr>
<td style="text-align:left">文本内容</td>
<td style="text-align:center"><strong><code>是</code></strong></td>
<td style="text-align:right">table</td>
</tr>
</tbody>
</table>
<h2 id="去除b2t-sidebar"><a href="#去除b2t-sidebar" class="header-anchor"></a>1.20. <a href="#去除b2t-sidebar" class="headerlink" title="去除b2t sidebar"></a>去除b2t sidebar</h2><p>找到<code>Hexo/themes/next/layout/_macro/sidebar.swig</code>文件，去掉其中关于b2t的部分：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.sidebar.b2t %&#125;</div><div class="line">  &lt;div class="back-to-top"&gt;</div><div class="line">    &lt;i class="fa fa-arrow-up"&gt;&lt;/i&gt;</div><div class="line">    &#123;% if theme.sidebar.scrollpercent %&#125;</div><div class="line">      &lt;span id="scrollpercent"&gt;&lt;span&gt;0&lt;/span&gt;%&lt;/span&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line">  &lt;/div&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure></p>
<h2 id="调整b2t样式"><a href="#调整b2t样式" class="header-anchor"></a>1.21. <a href="#调整b2t样式" class="headerlink" title="调整b2t样式"></a>调整b2t样式</h2><p><code>back-to-top</code>的控制文件为<code>/home/jxm/Hexo/themes/next/source/css/_common/components/back-to-top.styl</code><br>在文件中可以修改b2t bar的格式，如颜色，位置，大小等。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">.back-to-top &#123;</div><div class="line">  box-sizing: border-box;</div><div class="line">  position: fixed;</div><div class="line">  bottom: $b2t-position-bottom;</div><div class="line">  right: $b2t-position-right;</div><div class="line">  z-index: $zindex-5;</div><div class="line">  padding: 0 6px;</div><div class="line">  width: hexo-config('sidebar.scrollpercent') ? initial : 24px;</div><div class="line">  background: white;</div><div class="line">  font-size: $b2t-font-size;</div><div class="line">  opacity: $b2t-opacity;</div><div class="line">  color: green</div><div class="line">  cursor: pointer;</div><div class="line">  text-align: center;</div><div class="line">  -webkit-transform: translateZ(0);</div><div class="line">  transition-property: bottom;</div><div class="line">  the-transition();</div><div class="line"></div><div class="line">  +mobile() &#123;</div><div class="line">    display: none;</div><div class="line">  &#125;</div><div class="line">  +tablet() &#123;</div><div class="line">    display: none;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  &amp;.back-to-top-on &#123;</div><div class="line">    bottom: $b2t-position-bottom-on;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="设置网站图标logo"><a href="#设置网站图标logo" class="header-anchor"></a>1.22. <a href="#设置网站图标Logo" class="headerlink" title="设置网站图标Logo"></a>设置网站图标Logo</h2><ol>
<li>通过网站<a href="http://tool.lu/favicon/" target="_blank" rel="external">favicon在线制作制作</a>favicon图片，logo最好设置32*32。</li>
<li>next主题：将图片放在next主题source/images目录下</li>
<li>在next主题配置文件中添加：<code>favicon: images/favicon.ico</code>;或者直接把<code>favicon.ico</code>放到站点source文件夹</li>
</ol>
<h2 id="设置emoji"><a href="#设置emoji" class="header-anchor"></a>1.23. <a href="#设置emoji" class="headerlink" title="设置emoji"></a>设置emoji</h2><p>to test this plugin! :simple_smile:</p>
<h1 id="主题配置参考"><a href="#主题配置参考" class="header-anchor"></a>2. <a href="#主题配置参考" class="headerlink" title="主题配置参考"></a>主题配置参考</h1><ol>
<li><a href="http://chitanda.me/2015/06/11/tips-for-setup-hexo/" target="_blank" rel="external">markdown table</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> next </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux命令行快捷键]]></title>
      <url>/2017-07-day/Linux_Terminal_Shortcuts/</url>
      <content type="html"><![CDATA[<p>note: 这些快捷键在xshell5环境下适用<br>在shell命令终端中，Ctrl+n相当于方向向下的方向键，Ctrl+p相当于方向向上的方向键。<br>在命令终端中通过它们或者方向键可以实现对历史命令的快速查找。这也是快速输入命令的技巧。<br>在命令终端中可以通过Ctrl+r 实现快速检索使用过的历史命令。Ctrl+r中r是retrieve中r。</p>
<a id="more"></a>
<p>Ctrl+a：光标回到命令行首。 （a：ahead）<br>Ctrl+e：光标回到命令行尾。 （e：end）<br>Ctrl+b：光标向行首移动一个字符。 （b：backwards）<br>Ctrl+ f：光标向行尾移动一个字符。 （f：forwards）<br>Ctrl+w: 删除光标处到行首的字符。<br>Ctrl+k：删除光标处到行尾的字符。<br>Ctrl+u：删除整个命令行文本字符。<br>Ctrl+h：向行首删除一个字符。<br>Ctrl+d：向行尾删除一个字符。<br>Ctrl+y:：粘贴Ctrl+u，Ctrl+k，Ctrl+w删除的文本。<br>Ctrl+p: 上一个使用的历史命令。 （p：previous）<br>Ctrl+n： 下一个使用的历史命令。（n：next ）<br>Ctrl+r：快速检索历史命令。（r：retrieve）。<br>Ctrl+t： 交换光标所在字符和其前的字符。<br>Ctrl+i：相当于Tab键。<br>Ctrl+o：相当于Ctrl+m.<br>Ctrl+m：相当Enter键。<br>其他控制键：<br>Ctrl+s:使终端发呆，静止，可以使快速输出的终端屏幕停下来。<br>Ctrl+q：退出Ctrl+s引起的发呆。<br>Ctrl+z：使正在运行在终端的任务，运行于后台。 （可用fg恢复）<br>Ctrl+c：中断终端中正在执行的任务。<br>Ctrl+d: 在空命令行的情况下可以退出终端。<br>Ctrl+[ ：相当于Esc键。<br>Esc键：连续按3次显示所有的支持的终端命令。<br>Tab键：命令、文件名等自动补全功能。</p>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[VPS Configuration]]></title>
      <url>/2017-07-day/VPS/</url>
      <content type="html"><![CDATA[<p>VPS（Virtual Private Server 虚拟专用服务器）技术，将一台服务器分割成多个虚拟专享服务器的优质服务。简单的说，VPS就是一台拥有公网IP的服务器总结一下VPS搭建的过程，从域名的购买到VPS的设置<br><a id="more"></a></p>
<h1 id="vps的配置"><a href="#vps的配置" class="header-anchor"></a>1. <a href="#VPS的配置" class="headerlink" title="VPS的配置"></a>VPS的配置</h1><h2 id="vps的购买-tbd"><a href="#vps的购买-tbd" class="header-anchor"></a>1.1. <a href="#VPS的购买-TBD" class="headerlink" title="VPS的购买 TBD"></a>VPS的购买 TBD</h2><h2 id="vps在ubuntu-1704下的软件配置"><a href="#vps在ubuntu-1704下的软件配置" class="header-anchor"></a>1.2. <a href="#VPS在ubuntu-17-04下的软件配置" class="headerlink" title="VPS在ubuntu 17.04下的软件配置"></a>VPS在ubuntu 17.04下的软件配置</h2><h3 id="安装git"><a href="#安装git" class="header-anchor"></a>1.2.1. <a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get update &amp;&amp; apt-get upgrade</div><div class="line">apt-get install git git-core</div></pre></td></tr></table></figure>
<p><strong>git-hook 自动部署:</strong><br>在普通用户目录下，如<code>/home/jxm/</code>中新建<code>git</code> 和<code>www</code>目录。<br>在git中新建xmjia.git目录，并进入该目录，执行：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init --bare</div></pre></td></tr></table></figure></p>
<p>创建并编辑<code>hooks/post-receive</code>，加入：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git --work-tree=/home/jxm/www/jiaxm --git-dir=/home/jxm/git/jiaxm.git checkout -f</div></pre></td></tr></table></figure></p>
<p>在<code>www</code>文件夹中新建<code>xmjia</code>目录<br>ok，git的配置完成。<br>解释：TBD</p>
<h3 id="安装并配置nginx"><a href="#安装并配置nginx" class="header-anchor"></a>1.2.2. <a href="#安装并配置nginx" class="headerlink" title="安装并配置nginx"></a>安装并配置nginx</h3><p>安装nginx<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get update</div><div class="line">apt-get install nginx</div></pre></td></tr></table></figure></p>
<blockquote>
<p>note: 如果你提前加载了owncloud/nextcloud会发现无法安装nginx，只有停用apache2才可继续。</p>
</blockquote>
<p>编辑<code>/etc/nginx/conf.d/xmjia.conf</code>文件内容：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">listen 80;</div><div class="line">listen [::]:80;</div><div class="line">## if https is desired, please uncomment the following lines</div><div class="line">#listen 443 ssl http2;</div><div class="line">#listen [::]:443 ssl http2;</div><div class="line"></div><div class="line">server_name ipv6.xmjia.me xmjia.me www.xmjia.me;</div><div class="line"></div><div class="line">## if forcing https, please uncomment the following lines</div><div class="line">#if ($scheme = http) &#123;</div><div class="line"># return 301 https://$server_name$request_uri;</div><div class="line">#&#125;</div><div class="line"></div><div class="line">location / &#123;</div><div class="line">root /home/jxm/www/xmjia;</div><div class="line">index index.html;</div><div class="line">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">proxy_set_header Host $http_host;</div><div class="line">## if https is desired, please uncomment the following lines</div><div class="line">#proxy_set_header X-Forwarded-Proto https;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>重启nginx服务，<code>service restart nginx</code></p>
<h3 id="安装nodejs"><a href="#安装nodejs" class="header-anchor"></a>1.2.3. <a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><p>hexo基于nodejs，所以需要安装。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -</div><div class="line">apt-get install -y nodejs</div></pre></td></tr></table></figure>
<h1 id="第三方服务"><a href="#第三方服务" class="header-anchor"></a>2.2. <a href="#第三方服务" class="headerlink" title="第三方服务"></a>第三方服务</h1><h2 id="vps-vnc远程"><a href="#vps-vnc远程" class="header-anchor"></a>2.3. <a href="#VPS-vnc远程" class="headerlink" title="VPS vnc远程"></a>VPS vnc远程</h2><ol>
<li><p>安装xfce桌面环境</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install xfce4</div></pre></td></tr></table></figure>
</li>
<li><p>安装远程桌面服务</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get -y install vnc4server</div></pre></td></tr></table></figure>
</li>
</ol>
<p>然后先开启服务，然后再终止服务：（这是为了创建一个默认的配置文件）<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">vncserver :1</div><div class="line">vncserver -<span class="built_in">kill</span> :1</div></pre></td></tr></table></figure></p>
<p>打开配置文件<code>vim /root/.vnc/xstartup</code>。note:如果是普通用户创建的上述配置文件要打开自己目录下的<code>xstartup</code>文件，写入：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line">    <span class="comment"># Uncomment the following two lines for normal desktop:</span></div><div class="line">    <span class="comment"># unset SESSION_MANAGER</span></div><div class="line">    <span class="comment"># unset DBUS_SESSION_BUS_ADDRESS </span></div><div class="line">    <span class="comment">#上面这句话如果在xubuntu桌面环境下开启vnc的话最好取消注释</span></div><div class="line">    <span class="comment"># exec /etc/X11/xinit/xinitrc</span></div><div class="line">    [ -x /etc/vnc/xstartup ] &amp;&amp; <span class="built_in">exec</span> /etc/vnc/xstartup</div><div class="line">    [ -r <span class="variable">$HOME</span>/.Xresources ] &amp;&amp; xrdb <span class="variable">$HOME</span>/.Xresources</div><div class="line">    xsetroot -solid grey</div><div class="line">    vncconfig -iconic &amp;</div><div class="line">    x-terminal-emulator -geometry 80x24+10+10 -ls -title <span class="string">"<span class="variable">$VNCDESKTOP</span> Desktop"</span> &amp;</div><div class="line">    <span class="comment"># x-window-manager &amp;</span></div><div class="line">    x-session-manager &amp; </div><div class="line">    xfdesktop &amp; xfce4-panel &amp;     </div><div class="line">    xfce4-menu-plugin &amp;     </div><div class="line">    xfsettingsd &amp;     </div><div class="line">    xfconfd &amp;     </div><div class="line">    xfwm4 &amp;</div></pre></td></tr></table></figure></p>
<p>可以通过一下命令控制vnc窗口的分辨率，注意太高的话会很卡。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vncserver :0 -geometry 1600x1200</div></pre></td></tr></table></figure></p>
<p>or<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vncserver :1 -geometry 1440x900</div></pre></td></tr></table></figure></p>
<blockquote>
<p>note: 1600x1200中间的符号就是英文字母x，不是*。</p>
</blockquote>
<ol>
<li>在<code>real vnc</code>官网下载 <code>vnc viewer</code>, <a href="https://www.realvnc.com/en/download/viewer/" target="_blank" rel="external">https://www.realvnc.com/en/download/viewer/</a><br>配置很简单，填入server_ip:1 连接，输入密码就可以了。<br>不过最好把display编号写全。I mean <code>100.100.100.100:5901</code>.</li>
</ol>
<h2 id="腾讯企业邮箱"><a href="#腾讯企业邮箱" class="header-anchor"></a>2.4. <a href="#腾讯企业邮箱" class="headerlink" title="腾讯企业邮箱"></a>腾讯企业邮箱</h2><ol>
<li>购买域名</li>
<li>注册腾讯企业邮箱</li>
<li>在域名购买处填写MX记录 （注册腾讯企业邮箱过程中会有提示）</li>
<li>SPF 防止发出的邮件被识别为垃圾邮件。SPF是通过域名的TXT记录来进行设置的。<br>为了提升域名邮箱发送外域（@qq.com以外的邮箱）邮件的成功率，可以给自己的域名设置一条TXT记录来避免这种情况。 TXT记录值为：<code>v=spf1 include:spf.mail.qq.com ~all</code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">note: sss # 测试</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="shadowsocks的搭建"><a href="#shadowsocks的搭建" class="header-anchor"></a>2.5. <a href="#Shadowsocks的搭建" class="headerlink" title="Shadowsocks的搭建"></a>Shadowsocks的搭建</h2><p>见<a href="http://www.jiaxm.me/2017-07-day/Shadowsocks_Configuration/#more">站内文章-Shadowsocks搭建</a></p>
]]></content>
      
        <categories>
            
            <category> VPS </category>
            
        </categories>
        
        
        <tags>
            
            <tag> VPS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[python3 学习爬虫遇到的一点编码问题]]></title>
      <url>/2017-07-day/python_code/</url>
      <content type="html"><![CDATA[<p>在windows上默认以gbk编码。保存一个文件到本地，会被改成gbk的编码，即使在输出内容在写入到文件前已经做了utf-8的编码，最后还是会被转成gbk编码。<br>本例中就是从糗百上抓的文本，其本身是utf-8编码的。读取的时候encode用gbk，输出用gbk。既然最后一定要用gbk，那前面就不可以用utf-8来encode，否则会报错，i.e.，有些字符找不到对应的编码。<br><a id="more"></a></p>
<h1 id="python3-学习爬虫遇到的一点编码问题"><a href="#python3-学习爬虫遇到的一点编码问题" class="header-anchor"></a>1. <a href="#python3-学习爬虫遇到的一点编码问题" class="headerlink" title="python3 学习爬虫遇到的一点编码问题"></a>python3 学习爬虫遇到的一点编码问题</h1><h2 id="上解决代码"><a href="#上解决代码" class="header-anchor"></a>1.1. <a href="#上解决代码：" class="headerlink" title="上解决代码："></a>上解决代码：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#coding='utf-8'</span></div><div class="line"><span class="keyword">import</span> chardet</div><div class="line"><span class="keyword">import</span> requests, re, sys</div><div class="line">headers = &#123;</div><div class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_\</span></div><div class="line">4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 S\</div><div class="line">afari/537.36'&#125;</div><div class="line">r = requests.get(<span class="string">"https://www.qiushibaike.com"</span>, headers=headers)</div><div class="line">pattern=re.compile(<span class="string">'&lt;div class="author.*?&lt;h2&gt;(.*?)&lt;/h2&gt;.*?Icon"&gt;(.*?)&lt;/div&gt;.*?&lt;div class="content"&gt;.*?&lt;span&gt;(.*?)&lt;/span&gt;.*?&lt;span.*?stats-vote.*?number"&gt;(.*?)&lt;/i&gt;.*?stats-comments.*?number"&gt;(.*?)&lt;/i&gt;.*?up.*?number hidden"&gt;(.*?)&lt;/span&gt;.*?down.*?number hidden"&gt;(.*?)&lt;/span&gt;'</span>,re.S)</div><div class="line">items = re.findall(pattern, r.text)</div><div class="line">fout = open(<span class="string">"qiubai.txt"</span>, <span class="string">'w'</span>)</div><div class="line"><span class="keyword">for</span> i, item <span class="keyword">in</span> enumerate(items):</div><div class="line">    fout.write(<span class="string">"=========================================\n"</span>)</div><div class="line">    name = item[<span class="number">0</span>]</div><div class="line">    age = int(item[<span class="number">1</span>])</div><div class="line">    up = int(item[<span class="number">3</span>])</div><div class="line">    comment = int(item[<span class="number">4</span>])</div><div class="line">    down = -int(item[<span class="number">-1</span>])</div><div class="line">    tot = int(item[<span class="number">5</span>])</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    s = item[<span class="number">2</span>].split(<span class="string">"&lt;br/&gt;"</span>)</div><div class="line">    print(item)</div><div class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> s:</div><div class="line">        gl = l.encode(<span class="string">'gbk'</span>,<span class="string">'ignore'</span>)</div><div class="line">        fout.write(<span class="string">"%s\n"</span>%(gl.decode(<span class="string">'gbk'</span>)))</div><div class="line">    fout.write(<span class="string">"ID: %s\nAge: %d\n顶: %d\n踩: %d\n评论:%d\n"</span>%(name, age, up, comment, down))</div><div class="line">    fout.write(<span class="string">"\n"</span>)</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> 编码 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
