<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Memories</title>
  
  <subtitle>a corner of the world</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jiaxm.me/"/>
  <updated>2018-03-16T15:42:39.615Z</updated>
  <id>http://www.jiaxm.me/</id>
  
  <author>
    <name>jxm</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Next主题从头调整</title>
    <link href="http://www.jiaxm.me/2018-03-day/NextAdjust/"/>
    <id>http://www.jiaxm.me/2018-03-day/NextAdjust/</id>
    <published>2018-03-16T15:42:39.615Z</published>
    <updated>2018-03-16T15:42:39.615Z</updated>
    
    <content type="html"><![CDATA[<p>基于官方原始next主题包进行如下调整，方便记录修改。<br><a id="more"></a></p><h1 id="基础设定"><a href="#基础设定" class="header-anchor"></a>1. <a href="#基础设定" class="headerlink" title="基础设定"></a>基础设定</h1><h2 id="选择scheme"><a href="#选择scheme" class="header-anchor"></a>1.1. <a href="#选择Scheme" class="headerlink" title="选择Scheme"></a>选择Scheme</h2><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p><ul><li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li><li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li><li>Pisces - 双栏 Scheme，小家碧玉似的清新</li><li>Germini 最新的Scheme（有点不太协调啊~~~）<br>Scheme的切换通过<code>站点配置文件</code></li></ul><h2 id="设置语言"><a href="#设置语言" class="header-anchor"></a>1.2. <a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h2><p>编辑<code>站点配置文件</code>， 将<code>language</code>设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：</p><pre class="line-numbers language-yml"><code class="language-yml">language: zh-hans<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="设置菜单"><a href="#设置菜单" class="header-anchor"></a>1.3. <a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h2><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是<a href="https://fontawesome.com/" target="_blank" rel="external">Font Awesome</a>提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。<br>编辑<code>主题配置文件</code>，修改一下内容：</p><ul><li>设定菜单内容，对应的字段是<code>menu</code>。菜单内容的设置<code>item name: link</code>。其中<code>item name</code>是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。<code>||</code>之后的是<code>awesome</code>图标库中图标的名称（note:这是最新版本hexo的语法格式，与之前不同）<pre class="line-numbers language-yml"><code class="language-yml">menu:home: / || homeabout: /about/ || abouttags: /tags/ || tagscategories: /categories/ || tharchives: /archives/ || archive#schedule: /schedule/ || calendar#sitemap: /sitemap.xml || sitemap#commonweal: /404/ || heartbeat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>附上官方原_config.yml关于<code>Menu setting</code>的说明：</p><pre class="line-numbers language-yml"><code class="language-yml">When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -> archives).# Usage: `Key: /link/ || icon`# Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.# Value before `||` delimeter is the target link.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>另外，如果想改变<code>home</code>, <code>about</code>对应的汉字，可以到<code>language/zh-Hans.yml</code>中修改，比如可以修改<code>关于</code>为<code>关于我</code>等等</p><h1 id="next主题背景个性化diy"><a href="#next主题背景个性化diy" class="header-anchor"></a>2. <a href="#Next主题背景个性化DIY" class="headerlink" title="Next主题背景个性化DIY"></a>Next主题背景个性化DIY</h1><h2 id="介绍一个图片网站"><a href="#介绍一个图片网站" class="header-anchor"></a>2.1. <a href="#介绍一个图片网站" class="headerlink" title="介绍一个图片网站"></a>介绍一个图片网站</h2><p>首先，分享一个非常nice的图片网站，感觉这个国外的图片社区网站真的秒杀一众图片网站啊，不仅图片质量高，免费，而且还提供了随机拉取图片的服务API，太赞，对于想实现动态背景，简直是福音-site链接。</p><h2 id="添加背景图片"><a href="#添加背景图片" class="header-anchor"></a>2.2. <a href="#添加背景图片" class="headerlink" title="添加背景图片"></a>添加背景图片</h2><p>修改<code>themes\next\source\css\ _custom\custom.styl</code>文件，这个是Next故意留给用户自己个性化定制一些样式的文件，添加以下代码：</p><pre class="line-numbers language-json"><code class="language-json">body <span class="token punctuation">{</span>    background<span class="token operator">:</span>url(https<span class="token operator">:</span>//source.unsplash.com/random/1600x900<span class="token punctuation">)</span><span class="token punctuation">;</span>    background-repeat<span class="token operator">:</span> no-repeat<span class="token punctuation">;</span>    background-attachment<span class="token operator">:</span>fixed<span class="token punctuation">;</span>    background-position<span class="token operator">:</span><span class="token number">50</span>% <span class="token number">50</span>%<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改博客主体样式"><a href="#修改博客主体样式" class="header-anchor"></a>2.3. <a href="#修改博客主体样式" class="headerlink" title="修改博客主体样式"></a>修改博客主体样式</h2><p>如果按照上一步添加完图片之后，发现出现了另外一个大问题，整个博客背景都是透明的，只能看见图片，看不清文章文字，这样绝对不行的，办法如下，照例在上面的文件下面继续追加如下代码：</p><pre class="line-numbers language-json"><code class="language-json">.main-inner <span class="token punctuation">{</span>    margin-top<span class="token operator">:</span> 60px<span class="token punctuation">;</span>    padding<span class="token operator">:</span> 60px 60px 60px 60px<span class="token punctuation">;</span>    background<span class="token operator">:</span> #fff<span class="token punctuation">;</span>    min-height<span class="token operator">:</span> 500px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="algolia搜索服务集成"><a href="#algolia搜索服务集成" class="header-anchor"></a>2.4. <a href="#algolia搜索服务集成" class="headerlink" title="algolia搜索服务集成"></a>algolia搜索服务集成</h2><p>有点复杂，放上官网操作<a href="https://theme-next.iissnan.com/third-party-services.html#algolia-search" target="_blank" rel="external">链接</a><br>note:</p><blockquote><p><code>apiKey</code>指的是<code>Search-Only API Key</code></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于官方原始next主题包进行如下调整，方便记录修改。&lt;br&gt;
    
    </summary>
    
      <category term="next" scheme="http://www.jiaxm.me/categories/next/"/>
    
    
      <category term="next" scheme="http://www.jiaxm.me/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令行快捷键</title>
    <link href="http://www.jiaxm.me/2018-03-day/LinuxTerminalCommand/"/>
    <id>http://www.jiaxm.me/2018-03-day/LinuxTerminalCommand/</id>
    <published>2018-03-16T01:00:00.000Z</published>
    <updated>2018-03-16T09:46:57.751Z</updated>
    
    <content type="html"><![CDATA[<p>涉及在Linux命令行下进行快速移动光标、命令编辑、编辑后执行历史命令、Bang(!)命令、控制命令等。让basher更有效率。</p><a id="more"></a><h1 id="常用"><a href="#常用" class="header-anchor"></a>1. <a href="#常用" class="headerlink" title="常用"></a>常用</h1><pre class="line-numbers language-bash"><code class="language-bash">ctrl+左右键:在单词之间跳转ctrl+a:跳到本行的行首ctrl+e:跳到页尾Ctrl+u：删除当前光标前面的文字 （还有剪切功能）ctrl+k：删除当前光标后面的文字<span class="token punctuation">(</span>还有剪切功能<span class="token punctuation">)</span>Ctrl+L：进行清屏操作Ctrl+y:粘贴Ctrl+u或ctrl+k剪切的内容Ctrl+w:删除光标前面的单词的字符Alt – d ：由光标位置开始，往右删除单词。往行尾删<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="移动光标"><a href="#移动光标" class="header-anchor"></a>2. <a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h1><pre class="line-numbers language-bash"><code class="language-bash">Ctrl-a ：移到行首Ctrl-e ：移到行尾Ctrl-b ：往回<span class="token punctuation">(</span>左<span class="token punctuation">)</span>移动一个字符Ctrl-f ：往后<span class="token punctuation">(</span>右<span class="token punctuation">)</span>移动一个字符Alt-b ：往回<span class="token punctuation">(</span>左<span class="token punctuation">)</span>移动一个单词Alt-f ：往后<span class="token punctuation">(</span>右<span class="token punctuation">)</span>移动一个单词Ctrl-xx ：在命令行尾和光标之间移动M-b ：往回<span class="token punctuation">(</span>左<span class="token punctuation">)</span>移动一个单词M-f ：往后<span class="token punctuation">(</span>右<span class="token punctuation">)</span>移动一个单词<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="编辑命令"><a href="#编辑命令" class="header-anchor"></a>3. <a href="#编辑命令" class="headerlink" title="编辑命令"></a>编辑命令</h1><pre class="line-numbers language-bash"><code class="language-bash">Ctrl-h ：向前删除字符 删除光标左方位置的字符Ctrl-d ：向后删除字符 删除光标右方位置的字符（注意：当前命令行没有任何字符时，会注销系统或结束终端）Ctrl-w ：删除到行首Ctrl-u ：删除到行首 同由光标所在位置开始，删除左方所有的字符，直到该行开始。Ctrl-k ：删除到行尾 由光标所在位置开始，删除右方所有的字符，直到该行结束。Ctrl-y ：粘贴之前删除的内容到光标后。Ctrl-t ：交换光标处和之前两个字符的位置。Alt+. ：使用上一条命令的最后一个参数。Ctrl-_ ：回复之前的状态。撤销操作。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="bang命令"><a href="#bang命令" class="header-anchor"></a>4. <a href="#Bang-命令" class="headerlink" title="Bang(!)命令"></a>Bang(!)命令</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">!</span><span class="token operator">!</span> ：执行上一条命令。^foo^bar ：把上一条命令里的foo替换为bar，并执行。<span class="token operator">!</span>wget ：执行最近的以wget开头的命令。<span class="token operator">!</span>wget:p ：仅打印最近的以wget开头的命令，不执行。<span class="token operator">!</span>$ ：上一条命令的最后一个参数， 与 Alt - <span class="token keyword">.</span> 和 <span class="token variable">$_</span> 相同。<span class="token operator">!</span>* ：上一条命令的所有参数<span class="token operator">!</span>*:p ：打印上一条命令是所有参数，也即 <span class="token operator">!</span>*的内容。^abc ：删除上一条命令中的abc。^foo^bar ：将上一条命令中的 foo 替换为 bar^foo^bar^ ：将上一条命令中的 foo 替换为 bar<span class="token operator">!</span>-n ：执行前n条命令，执行上一条命令： <span class="token operator">!</span>-1， 执行前5条命令的格式是： <span class="token operator">!</span>-5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="查找历史命令"><a href="#查找历史命令" class="header-anchor"></a>5. <a href="#查找历史命令" class="headerlink" title="查找历史命令"></a>查找历史命令</h1><pre class="line-numbers language-bash"><code class="language-bash">Ctrl-p ：显示当前命令的上一条历史命令Ctrl-n ：显示当前命令的下一条历史命令Ctrl-r ：搜索历史命令，随着输入会显示历史命令中的一条匹配命令，Enter键执行匹配命令；ESC键在命令行显示而不执行匹配命令。Ctrl-g ：从历史搜索模式（Ctrl – r）退出。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="控制命令"><a href="#控制命令" class="header-anchor"></a>6. <a href="#控制命令" class="headerlink" title="控制命令"></a>控制命令</h1><pre class="line-numbers language-bash"><code class="language-bash">Ctrl-l ：清除屏幕，然后，在最上面重新显示目前光标所在的这一行的内容。Ctrl-o ：执行当前命令，并选择上一条命令。Ctrl-s ：阻止屏幕输出Ctrl-q ：允许屏幕输出Ctrl-c ：终止命令Ctrl-z ：挂起命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="重复执行操作动作"><a href="#重复执行操作动作" class="header-anchor"></a>7. <a href="#重复执行操作动作" class="headerlink" title="重复执行操作动作"></a>重复执行操作动作</h1><pre class="line-numbers language-bash"><code class="language-bash">M – 操作次数 操作动作 ： 指定操作次数，重复执行指定的操作。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;涉及在Linux命令行下进行快速移动光标、命令编辑、编辑后执行历史命令、Bang(!)命令、控制命令等。让basher更有效率。&lt;/p&gt;
    
    </summary>
    
      <category term="xshell" scheme="http://www.jiaxm.me/categories/xshell/"/>
    
    
      <category term="linux" scheme="http://www.jiaxm.me/tags/linux/"/>
    
      <category term="xshell" scheme="http://www.jiaxm.me/tags/xshell/"/>
    
  </entry>
  
  <entry>
    <title>vim使用技巧</title>
    <link href="http://www.jiaxm.me/2018-01-day/vim_familiar/"/>
    <id>http://www.jiaxm.me/2018-01-day/vim_familiar/</id>
    <published>2018-01-30T01:55:00.000Z</published>
    <updated>2018-01-30T10:35:54.656Z</updated>
    
    <content type="html"><![CDATA[<h1 id="不熟悉的vim操作"><a href="#不熟悉的vim操作" class="header-anchor"></a>1. <a href="#不熟悉的vim操作" class="headerlink" title="不熟悉的vim操作"></a>不熟悉的vim操作</h1><h1 id="行内移动"><a href="#行内移动" class="header-anchor"></a>2. <a href="#行内移动" class="headerlink" title="行内移动"></a>行内移动</h1><h2 id="f-t-f-t命令"><a href="#f-t-f-t命令" class="header-anchor"></a>2.1. <a href="#f-t-F-T命令" class="headerlink" title="f, t, F, T命令"></a><code>f, t, F, T</code>命令</h2><p><code>f</code> 行内向后搜索匹配字符 <code>F</code>为反向 （光标停在搜索到的字符上）<br><code>t</code> 行内向后搜索匹配字符 <code>T</code>为反向 （光标停在搜索到的字符前）<br>在<code>f, t, F, T</code>命令前可以加数字表示搜索第几个字符。<br><code>;</code>可以在搜索到的字符上往后跳，<code>,</code>反向跳</p><p> <code>f, t, F, T</code>命令与删除<code>d</code>配合。<code>dfx</code>即从当前字符删除到搜索到的第一个字符，<code>d3fx</code>表示从当前字符删除到搜索到的第三个字符。<br> 其中<code>t</code>,<code>T</code>有一个好用的tip：<br> 比如有下面一句话 <code>init.create_random(N=40000, phi_p=1.57, min_dist=0.1)</code><br> 光标停在i第一个字符上，我们想删除<code>.</code>之前的<code>init</code>，可以通过<code>dt.</code>。</p><p><code>f, t, F, T</code>命令与yank命令<code>y</code>配合。与<code>d</code>的原理完全相同，只不过从删除标成了复制。</p><h2 id="关于esc插入模式到正常模式"><a href="#关于esc插入模式到正常模式" class="header-anchor"></a>2.2. <a href="#关于ESC-插入模式到正常模式" class="headerlink" title="关于ESC[插入模式到正常模式]"></a>关于ESC[插入模式到正常模式]</h2><p>从插入模式进入到正常模式有很多方法的，esc是广为人知的而已，其实最快的是<c-c>，还有其他的<c-o>,<c-[>，这三种使用起来，比Esc快多了，这些还是有一些区别的，C-c这个组合键会取消当前的任何操作，而C-[是比较标准的进入正常模式的按键，比如ACE的vim模式，就是用C-[来进入正常模式的。比如C-v，纵向选择4列文字，然后输入A，在第一行前面插入一个字符”，这时候，使用C-c就进入正常模式，使用C-[也进入正常模式，不过区别是，你输入的”在你前面选中的5行都会这么一个字符。</c-[></c-o></c-c></p><p>官方user文档中提议用 &lt; CTRL-[ &gt; 来取代 &lt; ESC &gt;<br><strong>小结：用C-c代替Esc键</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;不熟悉的vim操作&quot;&gt;&lt;a href=&quot;#不熟悉的vim操作&quot; class=&quot;header-anchor&quot;&gt;&lt;/a&gt;1. &lt;a href=&quot;#不熟悉的vim操作&quot; class=&quot;headerlink&quot; title=&quot;不熟悉的vim操作&quot;&gt;&lt;/a&gt;不熟悉的vim操作
      
    
    </summary>
    
      <category term="vim" scheme="http://www.jiaxm.me/categories/vim/"/>
    
    
      <category term="vim" scheme="http://www.jiaxm.me/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>linux 常用命令</title>
    <link href="http://www.jiaxm.me/2017-11-day/LinuxCommand/"/>
    <id>http://www.jiaxm.me/2017-11-day/LinuxCommand/</id>
    <published>2017-11-16T10:00:04.000Z</published>
    <updated>2017-11-16T13:36:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>linux 常用命令，比较杂<br>PS: 部分fork自<a href="http://timchen314.com/2017/07/31/linux_command/#more" target="_blank" rel="external">大师兄个人网站</a><br><a id="more"></a></p><h1 id="一句一命令系列"><a href="#一句一命令系列" class="header-anchor"></a>1. <a href="#一句一命令系列" class="headerlink" title="一句一命令系列"></a>一句一命令系列</h1><p><code>tac</code>: cat倒过来写，将文件以line为单位反向输出。<br><code>join</code>: 将两个文件里指定栏同样的行拼接起来，即依照两个文件里共有的一列，将相应的行拼起来。<code>join file1 file2</code> 默认两个文件的第一列为匹配域。具体用法可以参考[这里]（<a href="http://www.cnblogs.com/mfryf/p/3402200.html）" target="_blank" rel="external">http://www.cnblogs.com/mfryf/p/3402200.html）</a></p><h1 id="命令"><a href="#命令" class="header-anchor"></a>2. <a href="#！命令" class="headerlink" title="！命令"></a>！命令</h1><p><code>!#</code>，引用当前的命令行，例如：cp filename filename.bak 可以写为 cp filename !#:1.bak note: <code>:1</code> 表示选择当前行命令的第一个参数<br><code>!-n</code> 重复执行倒数第 n 条命令，n 为正整数<br><code>!!</code> 重复执行上一条命令。该命令等价于 !-1<br><code>!^</code> 重用上一条命令的第一个参数 <code>ls /usr/share/doc /usr/share/man; cd !^# 即 cd /usr/share/doc</code><br><code>!$</code> 重用上一条命令的最后一个参数<br><code>!*</code> 重用上一条命令的所有参数 <code>touch t1 t2 t3</code>， <code>rm !*</code>即<code>rm t1 t2 t3</code><br><code>!!:n</code> 重用上一条命令中的第n个参数，n为正整数。<code>touch t1 t2 t3</code>，<code>rm !!:2</code>即<code>touch t2</code><br><code>!str:x-y</code> 重用上一条以str开头的命令的第x到第y个参数。<code>touch t1 t2 t3</code>，<code>rm !touch:2:3</code>即<code>rm t2 t3</code><br><code>!?str:n*</code> 重用上一条包含 str 的命令的从第 n 个到最后一个参数</p><p>&lt;持续更新……&gt;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux 常用命令，比较杂&lt;br&gt;PS: 部分fork自&lt;a href=&quot;http://timchen314.com/2017/07/31/linux_command/#more&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;大师兄个人网站&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.jiaxm.me/categories/linux/"/>
    
    
      <category term="linux" scheme="http://www.jiaxm.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>vim 8.0的编译安装</title>
    <link href="http://www.jiaxm.me/2017-11-day/vim/"/>
    <id>http://www.jiaxm.me/2017-11-day/vim/</id>
    <published>2017-11-16T08:00:04.000Z</published>
    <updated>2018-01-30T10:43:58.804Z</updated>
    
    <content type="html"><![CDATA[<p>vim 相关~<br><a id="more"></a></p><h1 id="vim-80的安装和配置"><a href="#vim-80的安装和配置" class="header-anchor"></a>1. <a href="#vim-8-0的安装和配置" class="headerlink" title="vim-8.0的安装和配置"></a>vim-8.0的安装和配置</h1><h2 id="编译-vim-80"><a href="#编译-vim-80" class="header-anchor"></a>1.1. <a href="#编译-vim-8-0" class="headerlink" title="编译 vim-8.0"></a>编译 vim-8.0</h2><pre class="line-numbers language-sh"><code class="language-sh">    1. ./configure --with-features=huge --enable-multibyte  --enable-rubyinterp=yes --enable-pythoninterp=yes  --with-python-config-dir=/usr/lib/python2.7/config   --enable-python3interp=yes --with-python3-config-dir=$HOME/.local/software/anaconda3/lib/python3.5/config   --enable-perlinterp=yes  --enable-luainterp=yes --enable-gui=gtk2 --enable-cscope --prefix=$HOME/.local/software/vim-8.0    2. make install -j 48    3. 加一下vim-8.0的环境变量 （如果已经把自己的~/.local/bin目录加了环境变量的目录，直接ln -s Installpath/vim-8.0/bin/vim . 就可以）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="编译-youcompelteme"><a href="#编译-youcompelteme" class="header-anchor"></a>1.2. <a href="#编译-YouCompelteMe" class="headerlink" title="编译 YouCompelteMe"></a>编译 YouCompelteMe</h2><p><code>~/.vim/bundle 下的Youcompelte要进行编译  ./install.py --clang-completer</code></p><h2 id="格式化代码工具安装"><a href="#格式化代码工具安装" class="header-anchor"></a>1.3. <a href="#格式化代码工具安装" class="headerlink" title="格式化代码工具安装"></a>格式化代码工具安装</h2><p>首先vim支持一键格式化是这样实现的，vim安装插件<code>vim-autoformat</code>，可以调用相应的格式化代码软件读文件进行操作。<br><a href="https://github.com/Chiel92/vim-autoformat" target="_blank" rel="external">https://github.com/Chiel92/vim-autoformat</a> 这里是vim-autoformat的框架，然后各个programming language的autoformat工具是通过这个框架去实现在vim中自动格式化的，链接中有推荐的populate autoformat tools</p><ol><li>python代码格式化 - yapf:  ~/.vim/下有yapf的源文件目录，python setup.py install –user。然后yapf命令被自动copy到~/.local/bin</li><li>fortran代码格式化 - frettify: python setup.py install –user。note: 需要conda已经安装了future</li><li>c++代码格式化 - clang    -clang-format:<br>下载llvm-libs llvm clang包from www.rpmfind.net/   下载的时候看好系统版本，要一样。<pre class="line-numbers language-sh"><code class="language-sh">yum localinstall llvm-libs-3.4.2-7.el7.x86_64.rpmyum localinstall  llvm-3.4.2-7.el7.x86_64.rpmyum localinstall  clang-3.4.2-7.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>note: (or rpm -ivh filename.rpm)</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vim 相关~&lt;br&gt;
    
    </summary>
    
      <category term="技术学习" scheme="http://www.jiaxm.me/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="vim" scheme="http://www.jiaxm.me/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>一些软件的安装步骤(hoomd, gromacs, cuda，etc.)</title>
    <link href="http://www.jiaxm.me/2017-11-day/InstallationManual/"/>
    <id>http://www.jiaxm.me/2017-11-day/InstallationManual/</id>
    <published>2017-11-16T06:00:00.000Z</published>
    <updated>2017-11-16T16:35:09.404Z</updated>
    
    <content type="html"><![CDATA[<p>一些软件的安装步骤，以及此过程中遇到的问题的解决办法。<br><a id="more"></a></p><h1 id="服务器软件的安装"><a href="#服务器软件的安装" class="header-anchor"></a>1. <a href="#服务器软件的安装" class="headerlink" title="服务器软件的安装"></a>服务器软件的安装</h1><h2 id="安装cuda"><a href="#安装cuda" class="header-anchor"></a>1.1. <a href="#安装cuda" class="headerlink" title="安装cuda"></a>安装cuda</h2><ol><li>安装cuda经常会遇到问题，但大部分都与如何禁用nouveau驱动相关，所以step-1，需要禁用nouveau驱动。<br>```sh</li><li>在配置文件中禁用nouveau<br>vi /etc/modprobe.d/blacklist.conf  添加：blacklist nouveau<br> CentOS 7:<br>  vim /usr/lib/modprobe.d/dist-blacklist.conf$<br> 或<br>  vim /lib/modprobe.d/dist-blacklist.conf<br> 并且在加上blacklist nouveau之后还要加上一行options nouveau modeset=0</li><li>备份原来的 initramfs nouveau image镜像<br>mv /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r)-nouveau.img  </li><li>创建新的 initramfs image镜像<br>dracut /boot/initramfs-$(uname -r).img $(uname -r)<br>注：重启后会发现终端界面字体变大了，不清晰了，表示nouveau禁用成功。</li><li>所有安装已经完成，重新启动机器。<br>```</li><li>单独安装nvidia驱动 <code>./NVIDIA-Linux-x86_64-384.90-1080ti.run</code><br>需要注意几点：<br>（1）cuda安装包本身包含两个部分：cuda-toolkit和nvidia driver，再安装cuda的时候是可以选择只安装cuda-toolkit，而省略nvidia driver的（甚至可以从cuda中抽出单独的部分作为一个安装包）<br>（2）1080Ti的显卡需要较新的驱动384.90来支持<br>（3）安装完成后一定要用命令查看一下显卡状态<code>nvidia-smi</code>，如果有错误提示，则安装有问题。</li><li>安装cuda <code>./cuda_9.0.176_384.81_linux-run</code> 不需要装driver</li></ol><h2 id="hoomd"><a href="#hoomd" class="header-anchor"></a>1.2. <a href="#hoomd" class="headerlink" title="hoomd"></a>hoomd</h2><h3 id="本地编译hoomd-133及以下版本"><a href="#本地编译hoomd-133及以下版本" class="header-anchor"></a>1.2.1. <a href="#本地编译hoomd-1-3-3及以下版本" class="headerlink" title="本地编译hoomd-1.3.3及以下版本"></a>本地编译hoomd-1.3.3及以下版本</h3><pre class="line-numbers language-sh"><code class="language-sh">(1) mkdir build 然后进入build(2) cmake -Wno-dev ../ -DCMAKE_INSTALL_PREFIX=$HOME/.local/hoomd -DCMAKE_BUILD_TYPE=Release -DENABLE_CUDA=On -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda -DENABLE_MPI_CUDA=On -DENABLE_MPI=On -DPYTHON_EXECUTABLE=`which python2`(3) make install -j8注意事项：1. 确保默认python的是用系统自带的python22. 如果编译并行版本的话，需要安装openmpi，并且做好环境变量<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="anaconda安装hoomd"><a href="#anaconda安装hoomd" class="header-anchor"></a>1.2.2. <a href="#anaconda安装hoomd" class="headerlink" title="anaconda安装hoomd"></a>anaconda安装hoomd</h3><p>anaconda安装的hoomd实际上是anaconda云端已经编译好的hoomd，任何相关包都是依赖于anaconda，如cuda、并行库等。<br><code>conda install hoomd=1.3.3</code> 可以将hoomd以一个子包的形式安装到anaconda的软件相关目录下，如果<code>hoomd=1.3.3</code>的版本号不加，则安装最新版（最新版与2.0之前的版本差别较大，新版本的发展已经失去了控制。。。，比如没有xml支持，这简直不能忍！）<br>当然有时候我们联网并不方便，因为服务器一般与外网是隔绝的，大概为了安全（这时候可以用proxychains联网）。这时候可以将hoomd相关包下载下来本地conda安装。<br>需要四个包<code>boost-1.59.0-glotzer_py35_6.tar.gz, hoomd-1.3.3-py35_1.tar.gz, mpich2-1.4.1p1-0.tar.gz, mpich-3.2-5.tar.gz</code><br>然后按顺序</p><pre class="line-numbers language-python"><code class="language-python">conda install boost<span class="token number">-1.59</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">-</span>glotzer_py35_6<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gzconda install mpich2<span class="token number">-1.4</span><span class="token punctuation">.</span>1p1<span class="token number">-0.</span>tar<span class="token punctuation">.</span>gzconda install mpich<span class="token number">-3.2</span><span class="token operator">-</span><span class="token number">5.</span>tar<span class="token punctuation">.</span>gzconda install hoomd<span class="token number">-1.3</span><span class="token punctuation">.</span><span class="token number">3</span><span class="token operator">-</span>py35_1<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="gromacs安装"><a href="#gromacs安装" class="header-anchor"></a>1.3. <a href="#gromacs安装" class="headerlink" title="gromacs安装"></a>gromacs安装</h2><pre><code>$ ../configure --prefix=$HOME/.local/openmpi/ --enable-mpi-thread-multiple --with-cuda=/usr/local/cuda$ make -j24$ make install$  ../configure --enable-shared --enable-float --enable-mpi --enable-threads --enable-openmp --enable-sse2 --enable-avx --prefix=$HOME/.local/fftw$ gmake -j24$ gmake install$  cmake .. -DCMAKE_INSTALL_PREFIX=$HOME/.local/gromacs -DGMX_GPU=on -DGMX_MPI=on -DGMX_SIMD=AVX2_256 -DGMX_FFT_LIBRARY=fftw3 -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda -DCMAKE_PREFIX_PATH=$HOME/.local/fftw$ make -j24$ make install</code></pre><p>note: 环境变量的设置</p><pre class="line-numbers language-sh"><code class="language-sh">export CPPFLAGS=-I/home/jxm/.local/fftw/includeexport LDFLAGS=-I/home/jxm/.local/fftw/libexport PATH=$HOME/.local/openmpi/bin:/usr/local/cuda/bin/:$PATHexport LD_LIBRARY_PATH=$HOME/.local/openmpi/lib:$LD_LIBRARY_PATHexport PATH=$HOME/.local/gromacs/bin/:$PATH<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一些软件的安装步骤，以及此过程中遇到的问题的解决办法。&lt;br&gt;
    
    </summary>
    
      <category term="技术学习" scheme="http://www.jiaxm.me/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="hoomd" scheme="http://www.jiaxm.me/tags/hoomd/"/>
    
      <category term="gromacs" scheme="http://www.jiaxm.me/tags/gromacs/"/>
    
      <category term="cuda" scheme="http://www.jiaxm.me/tags/cuda/"/>
    
  </entry>
  
  <entry>
    <title>Xshell 相关</title>
    <link href="http://www.jiaxm.me/2017-11-day/Xshell/"/>
    <id>http://www.jiaxm.me/2017-11-day/Xshell/</id>
    <published>2017-11-16T04:00:00.000Z</published>
    <updated>2018-03-16T09:29:19.828Z</updated>
    
    <content type="html"><![CDATA[<p>关于Xshell的设置技巧、使用中遇到的问题~<br><a id="more"></a></p><h1 id="xshell设置技巧"><a href="#xshell设置技巧" class="header-anchor"></a>1. <a href="#Xshell设置技巧" class="headerlink" title="Xshell设置技巧"></a>Xshell设置技巧</h1><h2 id="little-tips"><a href="#little-tips" class="header-anchor"></a>1.1. <a href="#Little-Tips" class="headerlink" title="Little Tips"></a>Little Tips</h2><ol><li>透明度设置</li><li>属性-外观-字体 Dejavu San Mono 配色方案 xterm</li><li>鼠标右键复制-粘贴</li><li>隧道转发X11</li><li>启动默认连接some servers</li></ol><h1 id="内置上传下载的工具xmodem-ymodem-zmodemsxrx-sbrb-szrz"><a href="#内置上传下载的工具xmodem-ymodem-zmodemsxrx-sbrb-szrz" class="header-anchor"></a>2. <a href="#内置上传下载的工具XMODEM、YMODEM、ZMODEM（sx-rx-sb-rb-sz-rz）" class="headerlink" title="内置上传下载的工具XMODEM、YMODEM、ZMODEM（sx/rx, sb/rb, sz/rz）"></a>内置上传下载的工具XMODEM、YMODEM、ZMODEM（sx/rx, sb/rb, sz/rz）</h1><p>note: ‘lrzsz’这个包对应ZMODEM，centos7自带。<br>以sz/rz为例：<br>sz表示send a file ， 后面加文件名字<br>‘sz filename.dat’ 会出现选择传输到本地目录的界面<br>rz表示receive a file<br>‘rz’ 会出现本地目录以选择需要上传的文件<br>ps: 在Xshell里面可以设置默认的下载目录，所以在终端sz filename可以直接下载到本地，比如桌面，非常方便。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于Xshell的设置技巧、使用中遇到的问题~&lt;br&gt;
    
    </summary>
    
      <category term="xshell" scheme="http://www.jiaxm.me/categories/xshell/"/>
    
    
      <category term="xshell" scheme="http://www.jiaxm.me/tags/xshell/"/>
    
  </entry>
  
  <entry>
    <title>Fortran命令</title>
    <link href="http://www.jiaxm.me/2017-09-day/fortran/"/>
    <id>http://www.jiaxm.me/2017-09-day/fortran/</id>
    <published>2017-09-25T04:00:00.000Z</published>
    <updated>2017-11-16T16:35:09.301Z</updated>
    
    <content type="html"><![CDATA[<p>保存fortran的一些常用命令，以作备忘。<br><a id="more"></a></p><p>#有关fortran编程本身</p><h2 id="rewind和backspace的用法"><a href="#rewind和backspace的用法" class="header-anchor"></a>1. <a href="#rewind和backspace的用法" class="headerlink" title="rewind和backspace的用法"></a>rewind和backspace的用法</h2><p>在早期的FORTRAN规范和编译器中，BACKSPACE和REWIND的确与顺序存贮设备–比如磁带机–有关。后来，变成设备无关的语句。但是，可能与文件模式有关。<br>REWIND现在仍然很常用。假如您的程序需要两遍读入同一个文本格式数据文件，当您读完第一遍后，用REWIND回到文件头部。BACKSPACE用于回退一个记录。后面通常加上文件号，这里的记录可以理解为一个回车符号。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;保存fortran的一些常用命令，以作备忘。&lt;br&gt;
    
    </summary>
    
      <category term="fortran" scheme="http://www.jiaxm.me/categories/fortran/"/>
    
    
      <category term="fortran" scheme="http://www.jiaxm.me/tags/fortran/"/>
    
  </entry>
  
  <entry>
    <title>win10系统重装相关</title>
    <link href="http://www.jiaxm.me/2017-08-day/ReinstallSystemBackup/"/>
    <id>http://www.jiaxm.me/2017-08-day/ReinstallSystemBackup/</id>
    <published>2017-08-30T05:57:00.000Z</published>
    <updated>2017-11-16T16:35:09.658Z</updated>
    
    <content type="html"><![CDATA[<p>windows系统用过一段时间后会产生一些系统垃圾，运行变慢，应运而生的“系统瘦身”软件也层出不穷。不过，最好的方法仍是——重装。备份好重要数据，一个win的安装USB就可以在一个下午的时间翻新系统。本文即重装注意事项和数据清单。<br><a id="more"></a></p><h1 id="备份数据"><a href="#备份数据" class="header-anchor"></a>1. <a href="#备份数据" class="headerlink" title="备份数据"></a>备份数据</h1><p>一般我们都将系统分为C盘+D盘（或者还有其他盘）。其中C盘是系统盘，个人重要的数据和软件安装一般放在D盘（or others）中。那么重装的时候清空C盘分区，其他的分区不动即可保存数据。不过，个人安装的软件，除了绿色软件外，基本都无法继续使用。我们正好也借此机会，通过重装软件清空一下软件带来的冗余。</p><h1 id="软件list和相关操作"><a href="#软件list和相关操作" class="header-anchor"></a>2. <a href="#软件list和相关操作" class="headerlink" title="软件list和相关操作"></a>软件list和相关操作</h1><ol><li>Endnote。一是，整个文献库通过compress为一个enl文件备份（其中包含这个lib的所有数据）；二是，Endnote里面的style文件比如，比如Jilin-thesis这种style文件，lib压缩的时候不包括。三是，Endnote x8的安装软件msi+license.dat（from byr）。note:安装完Endnote软件后，拷贝compressed lib到Endnote新建Libs目录，打开即可加载。style文件点击加载，保存即可。[Endnote 8.0已备份移动硬盘]</li><li>xshell+xftp+xmanager。注册码百度即可。xshell，文件-导出-下一步 可以得到包含所有会话的配置（server-user-passwd）。点击加载即可重新使用。[已备份移动硬盘]</li><li>Office。没什么可备份的，有2013版本的软件安装即可。但是要注意之后安装mathtype公式编辑工具。[office2013+mathtype已备份移动硬盘]</li><li>CTEX</li><li>Diskgenius 4.6.2.1 破解版</li><li>FastStone Capture</li><li>Shadowsocks-4.0.5。one of the most important softwares.</li><li>origin</li><li>evernote</li><li>Photoshop CS4直接安装无需破解版本</li><li>uTorrentPortable：uTorrent移动版本的自然是更好操作一些。备份torrents数据，之后拷贝到新系统的uTorrent的data/torrents目录下（其他也可以）。在uTorrent中设置下载的默认路径，指向原来byr的目录。如果下载一个文件到一个文件夹，uTorrent会检查是否有这么一个文件的，如果有会检查文件的完整性然后自动关联上传做种。</li><li>WinRAR</li><li>PotPlayer: windows上强大的播放器。在andorid上推荐xplayer，流畅的飞起。</li><li>Bitvise client/server:用作远程工具</li><li>Adobe reader</li><li>大白菜装机</li><li>百度云</li><li>SoftEther VPN Client</li><li>Chrome</li><li>SougouInput</li><li>Material Studio (it depends.)</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;windows系统用过一段时间后会产生一些系统垃圾，运行变慢，应运而生的“系统瘦身”软件也层出不穷。不过，最好的方法仍是——重装。备份好重要数据，一个win的安装USB就可以在一个下午的时间翻新系统。本文即重装注意事项和数据清单。&lt;br&gt;
    
    </summary>
    
    
      <category term="windows" scheme="http://www.jiaxm.me/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Markdown Writing</title>
    <link href="http://www.jiaxm.me/2017-07-day/Markdown_Writing/"/>
    <id>http://www.jiaxm.me/2017-07-day/Markdown_Writing/</id>
    <published>2017-07-24T13:21:00.000Z</published>
    <updated>2017-11-16T16:35:09.530Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown语法测试<br><a id="more"></a></p><h1 id="任务列表"><a href="#任务列表" class="header-anchor"></a>1. <a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h1><p>在任务项目前面加[]。用[x]表示此项已完成。</p><pre><code>- [x] Finish my changes- [ ] Push my commits to GitHub- [ ] Open a pull request</code></pre><ul><li style="list-style: none"><input type="checkbox" checked> Finish my changes</li><li style="list-style: none"><input type="checkbox"> Push my commits to GitHub</li><li style="list-style: none"><input type="checkbox"> Open a pull request</li></ul><p>注意如果项目内容以（）开始要对（加转义字符\</p><pre><code>- [ ] \(Optional) Open a followup issue</code></pre><ul><li style="list-style: none"><input type="checkbox"> (Optional) Open a followup issue</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Markdown语法测试&lt;br&gt;
    
    </summary>
    
      <category term="markdown" scheme="http://www.jiaxm.me/categories/markdown/"/>
    
    
      <category term="markdown" scheme="http://www.jiaxm.me/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Learn Numpy The Hard Way</title>
    <link href="http://www.jiaxm.me/2017-07-day/LearnNumpy/"/>
    <id>http://www.jiaxm.me/2017-07-day/LearnNumpy/</id>
    <published>2017-07-19T01:55:00.000Z</published>
    <updated>2017-11-16T16:35:09.417Z</updated>
    
    <content type="html"><![CDATA[<p>NumPy, which stands for Numerical Python, is a library consisting of multidimensional array objects and a collection of routines for processing those arrays. Using NumPy, mathematical and logical operations on arrays can be performed<br>一些参考资料：<br><a href="http://scipy-lectures.github.io/intro/numpy/index.html" target="_blank" rel="external">Basics of numpy</a><br><a href="http://scipy-lectures.github.io/intro/numpy/exercises.html" target="_blank" rel="external">Some numpy exercises</a><br><a href="http://scipy-lectures.github.io/advanced/advanced_numpy/" target="_blank" rel="external">Advanced numpy</a><br><a href="http://docs.scipy.org/doc/numpy/reference/" target="_blank" rel="external">Numpy reference</a></p><a id="more"></a><h1 id="numpy的前世今生"><a href="#numpy的前世今生" class="header-anchor"></a>1. <a href="#Numpy的前世今生" class="headerlink" title="Numpy的前世今生"></a>Numpy的前世今生</h1><p><strong>Numeric</strong>, the ancestor of NumPy, was developed by Jim Hugunin. Another package Numarray was also developed, having some additional functionalities. In 2005, Travis Oliphant created NumPy package by incorporating the features of Numarray into Numeric package. There are many contributors to this open source project.</p><h1 id="numpy数值类型"><a href="#numpy数值类型" class="header-anchor"></a>2. <a href="#Numpy数值类型" class="headerlink" title="Numpy数值类型"></a>Numpy数值类型</h1><p>NumPy中的基本数据类型</p><table><thead><tr><th style="text-align:left">名称</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">bool</td><td style="text-align:left">用一个字节存储的布尔类型（True或False）</td></tr><tr><td style="text-align:left">inti</td><td style="text-align:left">由所在平台决定其大小的整数（一般为int32或int64）</td></tr><tr><td style="text-align:left">int8</td><td style="text-align:left">一个字节大小，-128 至 127</td></tr><tr><td style="text-align:left">int16</td><td style="text-align:left">整数，-32768 至 32767</td></tr><tr><td style="text-align:left">int32</td><td style="text-align:left">整数，-2 <strong> 31 至 2 </strong> 32 -1</td></tr><tr><td style="text-align:left">int64</td><td style="text-align:left">整数，-2 <strong> 63 至 2 </strong> 63 - 1</td></tr><tr><td style="text-align:left">uint8</td><td style="text-align:left">无符号整数，0 至 255</td></tr><tr><td style="text-align:left">uint16</td><td style="text-align:left">无符号整数，0 至 65535</td></tr><tr><td style="text-align:left">uint32</td><td style="text-align:left">无符号整数，0 至 2 ** 32 - 1</td></tr><tr><td style="text-align:left">uint64</td><td style="text-align:left">无符号整数，0 至 2 ** 64 - 1</td></tr><tr><td style="text-align:left">float16</td><td style="text-align:left">半精度浮点数：16位，正负号1位，指数5位，精度10位</td></tr><tr><td style="text-align:left">float32</td><td style="text-align:left">单精度浮点数：32位，正负号1位，指数8位，精度23位</td></tr><tr><td style="text-align:left">float64或float</td><td style="text-align:left">双精度浮点数：64位，正负号1位，指数11位，精度52位</td></tr><tr><td style="text-align:left">complex64</td><td style="text-align:left">复数，分别用两个32位浮点数表示实部和虚部</td></tr><tr><td style="text-align:left">complex128或complex</td><td style="text-align:left">复数，分别用两个64位浮点数表示实部和虚部</td></tr></tbody></table><h1 id="numpy数组的初始化"><a href="#numpy数组的初始化" class="header-anchor"></a>3. <a href="#Numpy数组的初始化" class="headerlink" title="Numpy数组的初始化"></a>Numpy数组的初始化</h1><p>Numpy的主要数据类型是ndarray，即多维数组。它有以下几个属性：<br>ndarray.ndim：数组的维数<br>ndarray.shape：数组每一维的大小<br>ndarray.size：数组中全部元素的数量<br>ndarray.dtype：数组中元素的类型（numpy.int32, numpy.int16, and numpy.float64等）<br>ndarray.itemsize：每个元素占几个字节</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npnp<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># np.arange初始化数组并reshape</span><span class="token comment" spellcheck="true">#生成数组赋特殊值：</span>np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 由于numpy可以按index取值，所以zeros/ones方法可以用来创建bool数组用于取值</span><span class="token operator">>></span><span class="token operator">></span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>bool<span class="token punctuation">)</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>        <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>        <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>bool<span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> np<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 随机数，取决于内存情况</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token number">6.89818397e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818397e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89817518e-310</span><span class="token punctuation">,</span>         <span class="token number">6.89817518e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89817384e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89817852e-310</span><span class="token punctuation">,</span>         <span class="token number">6.89818486e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818483e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89817852e-310</span><span class="token punctuation">,</span>         <span class="token number">6.89817384e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818483e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89817384e-310</span><span class="token punctuation">,</span>         <span class="token number">6.89818486e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818486e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818483e-310</span><span class="token punctuation">,</span>         <span class="token number">6.89817518e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818486e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818484e-310</span><span class="token punctuation">,</span>         <span class="token number">6.89817518e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818488e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89817518e-310</span><span class="token punctuation">,</span>         <span class="token number">6.89818486e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818488e-310</span><span class="token punctuation">,</span>   <span class="token number">6.89818484e-310</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token string">'np.arange() （最小值，最大值，步长）（左闭右开） '</span><span class="token string">'np.linspace（最小值，最大值，元素数量）'</span><span class="token operator">>></span><span class="token operator">></span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">.</span>        <span class="token punctuation">,</span>  <span class="token number">0.33069396</span><span class="token punctuation">,</span>  <span class="token number">0.66138793</span><span class="token punctuation">,</span>  <span class="token number">0.99208189</span><span class="token punctuation">,</span>  <span class="token number">1.32277585</span><span class="token punctuation">,</span>        <span class="token number">1.65346982</span><span class="token punctuation">,</span>  <span class="token number">1.98416378</span><span class="token punctuation">,</span>  <span class="token number">2.31485774</span><span class="token punctuation">,</span>  <span class="token number">2.64555171</span><span class="token punctuation">,</span>  <span class="token number">2.97624567</span><span class="token punctuation">,</span>        <span class="token number">3.30693964</span><span class="token punctuation">,</span>  <span class="token number">3.6376336</span> <span class="token punctuation">,</span>  <span class="token number">3.96832756</span><span class="token punctuation">,</span>  <span class="token number">4.29902153</span><span class="token punctuation">,</span>  <span class="token number">4.62971549</span><span class="token punctuation">,</span>        <span class="token number">4.96040945</span><span class="token punctuation">,</span>  <span class="token number">5.29110342</span><span class="token punctuation">,</span>  <span class="token number">5.62179738</span><span class="token punctuation">,</span>  <span class="token number">5.95249134</span><span class="token punctuation">,</span>  <span class="token number">6.28318531</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="numpy-数组的寻址索引和遍历"><a href="#numpy-数组的寻址索引和遍历" class="header-anchor"></a>4. <a href="#Numpy-数组的寻址，索引和遍历" class="headerlink" title="Numpy 数组的寻址，索引和遍历"></a>Numpy 数组的寻址，索引和遍历</h1><p>多维数组的访问通过给每一维指定一个索引，顺序是先高维再低维：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token number">10</span><span class="token operator">*</span>x <span class="token operator">+</span> y<span class="token operator">>></span><span class="token operator">></span> np<span class="token punctuation">.</span>fromfunction<span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int<span class="token punctuation">)</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>…符号表示将所有未指定索引的维度均赋为：，：表示索引该维度范围所有元素</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> c <span class="token operator">=</span>  np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span> <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token number">6</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span> <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>遍历数组的方法可以用循环/迭代器等。如果需要flatten数组然后访问，可以用c.flat做一个迭代器，也可以用c.flatten（）函数将数组先一维展开。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> i <span class="token keyword">in</span> c<span class="token punctuation">.</span>flat<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#即可打印所有元素</span><span class="token operator">>></span><span class="token operator">></span> c<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token number">6</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">,</span>  <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span>       <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;NumPy, which stands for Numerical Python, is a library consisting of multidimensional array objects and a collection of routines for processing those arrays. Using NumPy, mathematical and logical operations on arrays can be performed&lt;br&gt;一些参考资料：&lt;br&gt;&lt;a href=&quot;http://scipy-lectures.github.io/intro/numpy/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Basics of numpy&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://scipy-lectures.github.io/intro/numpy/exercises.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Some numpy exercises&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://scipy-lectures.github.io/advanced/advanced_numpy/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Advanced numpy&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://docs.scipy.org/doc/numpy/reference/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Numpy reference&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://www.jiaxm.me/categories/python/"/>
    
    
      <category term="python" scheme="http://www.jiaxm.me/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Linux与Windows双系统启动引导恢复</title>
    <link href="http://www.jiaxm.me/2017-07-day/Ubuntu_Rescue_Mode_Repair/"/>
    <id>http://www.jiaxm.me/2017-07-day/Ubuntu_Rescue_Mode_Repair/</id>
    <published>2017-07-17T16:00:00.000Z</published>
    <updated>2017-11-16T16:35:09.740Z</updated>
    
    <content type="html"><![CDATA[<p>由grub引导的Linux与Windows共存的双系统环境中，Windows版本更新的时候常会出现grub引导失败，造成系统无法正常启动的问题。这是因为Windows更新的过程中导致MBR损坏导致无法找到/boot/grub部分，无法进一步引导系统。而这种情况下启动界面上会启动<code>grub rescue</code>模式，本文即在此模式下恢复grub引导。<br><a id="more"></a></p><h1 id="术语简述"><a href="#术语简述" class="header-anchor"></a>1. <a href="#术语简述" class="headerlink" title="术语简述"></a>术语简述</h1><h2 id="bios"><a href="#bios" class="header-anchor"></a>1.1. <a href="#BIOS" class="headerlink" title="BIOS"></a>BIOS</h2><p>“Basic Input Output System”，中文名称就是”基本输入输出系统”。其实，它是一组固化到计算机内主板上一个ROM芯片上的程序，它保存着计算机最重要的基本输入输出的程序、系统设置信息、开机后自检程序和系统自启动程序。 其主要功能是为计算机提供最底层的、最直接的硬件设置和控制。</p><h2 id="mbr"><a href="#mbr" class="header-anchor"></a>1.2. <a href="#MBR" class="headerlink" title="MBR"></a>MBR</h2><p>“Master Boot Record” 硬盘的物理扇区，也叫主引导记录！因为BIOS 很小无法承载启动的运行程序，所以在bios检测到一个硬盘后，将硬盘的0柱面、0磁头、1扇区的内容经过简单判断后， 至内存中的指定位置，然后跳转至这个位置，开始从这个位置运行，大小为512个byte，其中主要存放引导程序和该硬盘的分区表。</p><h2 id="grub"><a href="#grub" class="header-anchor"></a>1.3. <a href="#grub" class="headerlink" title="grub"></a>grub</h2><p>“GRand Unified Bootloade” 多重操作系统启动管理器，就是运行这个GRUB之后可以通过它来引导进入其它的系统，包括window以及linux</p><p>小结：PC 首先启动到BIOS ，然后检测硬盘的MBR，将MBR这块扇区的内容(也就是写在上面的GRUB)装入内存运行，再通过运行GRUB得到的结果实现新的跳转启动！</p><h1 id="出现grub-resuce情况下修复grub2"><a href="#出现grub-resuce情况下修复grub2" class="header-anchor"></a>2. <a href="#出现grub-resuce情况下修复grub2" class="headerlink" title="出现grub resuce情况下修复grub2"></a>出现grub resuce情况下修复grub2</h1><p>grub2分为两部分，一部分写入MBR，另一部分存在linux系统的/boot/grub目录下。出现<code>grub rescue&gt;</code>即MBR部分无法正常运作grub程序，找不到/boot/grub部分，于是启动grub救援模式。</p><p>grub rescue命令行有以下可用命令：<br>set, ls, insmod, root, prefix（设置启动路径）</p><ol><li>ls查看所有分区，列出：<br>（hd0），（hd0，msdos8），（hd0，msdos7），（hd0，msdos6），（hd0，msdos5），（hd0，msdos3），（hd0，msdos1）<br>需要找到ubuntu的安装分区，通过 <code>ls (hd0, msdos4)/boot</code>直到不出现<code>error: unknown filesystem</code></li><li>找到之后通过如下命令设置一次性启动参数：<pre class="line-numbers language-bash"><code class="language-bash">grub rescue<span class="token operator">></span>set root<span class="token operator">=</span><span class="token punctuation">(</span>hd0,msdos8<span class="token punctuation">)</span>grub rescue<span class="token operator">></span>set prefix<span class="token operator">=</span><span class="token punctuation">(</span>hd0,msdos8<span class="token punctuation">)</span>/boot/grubgrub rescue<span class="token operator">></span>insmod /boot/grub/i386-pc/normal.modgrub resuce<span class="token operator">></span> normal<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>其中<code>/boot/grub/i386-pc/normal.mod</code>路径是在Ubuntu 17.04的系统下的。</li><li>如果/boot/grub没有损坏，就能进入Ubuntu系统正常启动界面。If not， 需要手动引导：<br>进入grub命令行：<pre class="line-numbers language-bash"><code class="language-bash">grub<span class="token operator">></span> root <span class="token punctuation">(</span>hd0,4<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">## 指定包含vmlinuz-2.6.18-274.7.1.el5和initrd-2.6.18-274.7.1.el5.img的partition</span>grub<span class="token operator">></span> kernel /boot/vmlinuz-2.6.18-274.7.1.el5 ro root<span class="token operator">=</span>/dev/sda8 <span class="token comment" spellcheck="true">## root= 是指定包含/sbin/init的partition，即挂载/的partition（以Linux的角度）</span>grub<span class="token operator">></span> initrd /boot/initrd-2.6.18-274.7.1.el5.img <span class="token comment" spellcheck="true">## 据说这项可以省略</span>grub<span class="token operator">></span> boot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>在正确进入了ubuntu之后，需要更新MBR的grub部分来适应新的分区情况：<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> update-grub2 <span class="token comment" spellcheck="true"># update /boot/grub/grub.cfg</span><span class="token function">sudo</span> grub-install /dev/sda <span class="token comment" spellcheck="true"># install grub into MBR of Mater Disk</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h1 id="livecd-修复方法"><a href="#livecd-修复方法" class="header-anchor"></a>3. <a href="#liveCD-修复方法" class="headerlink" title="liveCD 修复方法"></a>liveCD 修复方法</h1><p>用启动盘进入try ubuntu界面，手动更新grub</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> update-grub2<span class="token function">sudo</span> grub-install /dev/sda8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>参考：</p><ol><li><a href="http://blog.csdn.net/jscese/article/details/36865449" target="_blank" rel="external">csdn-jscese</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由grub引导的Linux与Windows共存的双系统环境中，Windows版本更新的时候常会出现grub引导失败，造成系统无法正常启动的问题。这是因为Windows更新的过程中导致MBR损坏导致无法找到/boot/grub部分，无法进一步引导系统。而这种情况下启动界面上会启动&lt;code&gt;grub rescue&lt;/code&gt;模式，本文即在此模式下恢复grub引导。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.jiaxm.me/categories/linux/"/>
    
    
      <category term="linux" scheme="http://www.jiaxm.me/tags/linux/"/>
    
      <category term="grub" scheme="http://www.jiaxm.me/tags/grub/"/>
    
  </entry>
  
  <entry>
    <title>Shadowsocks 的搭建</title>
    <link href="http://www.jiaxm.me/2017-07-day/Shadowsocks_Configuration/"/>
    <id>http://www.jiaxm.me/2017-07-day/Shadowsocks_Configuration/</id>
    <published>2017-07-13T16:00:00.000Z</published>
    <updated>2017-11-16T16:35:09.691Z</updated>
    
    <content type="html"><![CDATA[<p>对于做科研、写代码的同学来说，翻<a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" target="_blank" rel="external">GFW</a>是必不可少的，对于专业的资料来说，google/sholar搜索的丰富程度可以秒某度的。梯子有很多种，例如改hosts、vpn(SoftEther)、浏览器翻墙的插件(谷歌上网助手)、自由门、GoAgent、cow、Lantern等等。今天我们来介绍一下在国外<a href="https://en.wikipedia.org/wiki/Virtual_private_server" target="_blank" rel="external">VPS</a>(Virtual private server)的搭建，不只是可以用来上google，scholar等，可以说相当于拥有了国外的网络环境，没有限制的浏览国外网站。<br><a id="more"></a></p><h1 id="shadowsocks-简介"><a href="#shadowsocks-简介" class="header-anchor"></a>1. <a href="#Shadowsocks-简介" class="headerlink" title="Shadowsocks 简介"></a>Shadowsocks 简介</h1><p>维基百科搬运：</p><blockquote><blockquote><p>Shadowsocks (以下简称“ss”) 是一种基于Sock5代理方式的网络资料加密传输工具，分为服务器端和客户端。使用之前，需先将服务器端部署到服务器上面，然后通过客户端连接并建立本地代理。<br>ss的运行原理与其他代理工具基本相同，使用特定的中转服务器完成数据传输。在服务器端部署完成后，用户需要按照指定的密码、加密方式和端口使用客户端软件与其连接。在成功连接到服务器后，客户端会在用户的电脑上构建一个本地Socks5代理。浏览网络时，网络流量会被分到本地socks5代理，客户端将其加密之后发送到服务器，服务器以同样的加密方式将流量回传给客户端，以此实现代理上网。ss的创建者<a href="http://github.com/clowwindy" target="_blank" rel="external">clowwindy</a>是中国人，15年8月22日受到一些外部压力，宣布停止维护此计划（项目）并移除其个人页面所存储的源代码，</p></blockquote></blockquote><p>详细News请移步<a href="https://zh.wikipedia.org/wiki/Shadowsocks" target="_blank" rel="external">维基百科</a>。</p><h1 id="ss-搭建"><a href="#ss-搭建" class="header-anchor"></a>2. <a href="#ss-搭建" class="headerlink" title="ss 搭建"></a>ss 搭建</h1><p>详细的搭建步骤有点琐碎，故分列几条。</p><ol><li>安装 Shadowsocks</li><li>server端配置</li><li>Windows客户端配置</li><li>Android客户端配置</li></ol><h2 id="安装-ss"><a href="#安装-ss" class="header-anchor"></a>2.1. <a href="#安装-ss" class="headerlink" title="安装 ss"></a>安装 ss</h2><p>以Ubuntu 17.04为例。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python-pip<span class="token function">sudo</span> pip <span class="token function">install</span> shadowsocks<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python-m2crypto <span class="token comment" spellcheck="true"># encrypt method</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="server端配置-ss"><a href="#server端配置-ss" class="header-anchor"></a>2.2. <a href="#server端配置-ss" class="headerlink" title="server端配置 ss"></a>server端配置 ss</h2><h3 id="即时启动"><a href="#即时启动" class="header-anchor"></a>2.2.1. <a href="#即时启动：" class="headerlink" title="即时启动："></a>即时启动：</h3><p><code>sudo ssserver -p 8388 -k password -m rc4-md5 -d start</code></p><h3 id="使用配置文件启动"><a href="#使用配置文件启动" class="header-anchor"></a>2.2.2. <a href="#使用配置文件启动：" class="headerlink" title="使用配置文件启动："></a>使用配置文件启动：</h3><p>编辑/etc/shadowsocks/config.json文件（如果没有可以创建此文件）</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"server"</span><span class="token operator">:</span><span class="token string">"my_server_ip"</span><span class="token punctuation">,</span><span class="token property">"server_port"</span><span class="token operator">:</span><span class="token number">8388</span><span class="token punctuation">,</span><span class="token property">"local_address"</span><span class="token operator">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span><span class="token property">"local_port"</span><span class="token operator">:</span><span class="token number">1080</span><span class="token punctuation">,</span><span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"mypassword"</span><span class="token punctuation">,</span><span class="token property">"timeout"</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token property">"method"</span><span class="token operator">:</span><span class="token string">"rc4-md5"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>字段含义：</p><table><thead><tr><th>字段</th><th>含义  </th></tr></thead><tbody><tr><td>server</td><td>服务器 IP (IPv4/IPv6)</td></tr><tr><td>server_port</td><td>服务器端口</td></tr><tr><td>local_port</td><td>本地端端口</td></tr><tr><td>password</td><td>密码</td></tr><tr><td>timeout</td><td>超时时间(s)</td></tr><tr><td>method</td><td>加密方法， 可选“bf-cfb”, “aes-256-cfb”, “rc4-md5”,等</td></tr></tbody></table><blockquote><p>加密方式推荐使用rc4-md5，因为 RC4 比 AES 速度快好几倍，如果用在路由器上会带来显著性能提升。旧的 RC4 加密之所以不安全是因为 Shadowsocks 在每个连接上重复使用 key，没有使用 IV。现在已经重新正确实现，可以放心使用。</p></blockquote><p>config.json文件创建完毕后，赋予755权限<br><code>sudo chmod 755 /etc/shadowsocks/config.json</code><br>使用配置文件，后台运行：<br><code>sudo ssserver -c /etc/shadowsocks/config.json -d start</code></p><h3 id="开机启动"><a href="#开机启动" class="header-anchor"></a>2.2.3. <a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h3><p>上述两种方法都是在机器没有重启的情况下用的，每次重启后都手动去开启ss服务有点麻烦，所以设置开机启动可以省点事。<br>创建 /etc/init.d/shadowsocks 文件 <code>sudo vim /etc/init.d/shadowsocks</code><br>添加以下内容：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token comment" spellcheck="true">### BEGIN INIT INFO</span><span class="token comment" spellcheck="true"># Provides:          shadowsocks</span><span class="token comment" spellcheck="true"># Required-Start:    $remote_fs $syslog</span><span class="token comment" spellcheck="true"># Required-Stop:     $remote_fs $syslog</span><span class="token comment" spellcheck="true"># Default-Start:     2 3 4 5</span><span class="token comment" spellcheck="true"># Default-Stop:      0 1 6</span><span class="token comment" spellcheck="true"># Short-Description: start shadowsocks</span><span class="token comment" spellcheck="true"># Description:       start shadowsocks</span><span class="token comment" spellcheck="true">### END INIT INFO</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    ssserver -c /etc/shadowsocks/config.json -d start<span class="token punctuation">}</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    ssserver -c /etc/shadowsocks/config.json -d stop<span class="token punctuation">}</span><span class="token keyword">case</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token keyword">in</span>start<span class="token punctuation">)</span>    start    <span class="token punctuation">;</span><span class="token punctuation">;</span>stop<span class="token punctuation">)</span>    stop    <span class="token punctuation">;</span><span class="token punctuation">;</span>reload<span class="token punctuation">)</span>     stop     start     <span class="token punctuation">;</span><span class="token punctuation">;</span>*<span class="token punctuation">)</span>    <span class="token keyword">echo</span> <span class="token string">"Usage: <span class="token variable">$0</span> {start|reload|stop}"</span>    <span class="token keyword">exit</span> 1    <span class="token punctuation">;</span><span class="token punctuation">;</span>esac<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>增加这个文件的可执行权限 <code>sudo chmod +x /etc/init.d/shadowsocks</code><br>在rc.d中新增<code>sudo update-rc.d shadowsocks defaults</code>，添加到开机启动中<br>以后就可以通过<code>sudo service shadowsocks {start|reload|stop}</code>来管理了。</p><h3 id="ss多用户配置"><a href="#ss多用户配置" class="header-anchor"></a>2.2.4. <a href="#ss多用户配置" class="headerlink" title="ss多用户配置"></a>ss多用户配置</h3><p>只开一个端口，用的人多了会相互挤占流量，所以多开几个为妥。配置很简单，只需要修改上述config.json文件：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token punctuation">{</span><span class="token string">"server"</span><span class="token punctuation">:</span><span class="token string">"my_server_ip"</span><span class="token punctuation">,</span><span class="token string">"local_address"</span><span class="token punctuation">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span><span class="token string">"local_port"</span><span class="token punctuation">:</span><span class="token number">1080</span><span class="token punctuation">,</span><span class="token string">"port_password"</span><span class="token punctuation">:</span><span class="token punctuation">{</span>  <span class="token string">"8381"</span><span class="token punctuation">:</span> <span class="token string">"12345678"</span><span class="token punctuation">,</span>  <span class="token string">"8382"</span><span class="token punctuation">:</span> <span class="token string">"12345678"</span><span class="token punctuation">,</span>  <span class="token string">"8383"</span><span class="token punctuation">:</span> <span class="token string">"12345678"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">"timeout"</span><span class="token punctuation">:</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token string">"method"</span><span class="token punctuation">:</span><span class="token string">"rc4-md5"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果是ubuntu/debian用户，ss多用户多端口的配置就到此结束了。但是对于centos用户仍会存在问题——centos默认的防火墙机制，会阻隔掉多端口配置。解决方法是，将这个端口打开tcp和udp通信。具体操作如下，参考<a href="http://blog.csdn.net/helinlin007/article/details/51469656" target="_blank" rel="external">这里</a>：</p><ol><li>打开<code>etc/firewalled/zones/public.xml</code>进行端口编辑，如<code>&lt;port protocol=&quot;tcp&quot; port=&quot;443&quot;/&gt;   &lt;portprotocol=&quot;udp&quot; port=&quot;443&quot;/&gt;</code>，即可添加tcp和udp的权限。</li><li><code>systemctl firewall restart</code>重启防火墙</li></ol><h3 id="ss-速度优化"><a href="#ss-速度优化" class="header-anchor"></a>2.2.5. <a href="#ss-速度优化" class="headerlink" title="ss 速度优化"></a>ss 速度优化</h3><p>基于kvm架构vps的优化<br>这方面SS给出了非常详尽的优化指南，主要有：优化内核参数，开启TCP Fast Open<br>这里只给出优化内核参数/优化加密方式的方法。更多、更详细的策略方法请参考<a href="https://github.com/iMeiji/shadowsocks_install/wiki/shadowsocks-optimize" target="_blank" rel="external">shadowsocks optimize</a></p><h4 id="内核参数优化"><a href="#内核参数优化" class="header-anchor"></a>2.2.5.1. <a href="#内核参数优化" class="headerlink" title="内核参数优化"></a>内核参数优化</h4><p>创建<code>/etc/sysctl.d/local.conf</code>并写入</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># max open files</span>fs.file-max <span class="token operator">=</span> 1024000<span class="token comment" spellcheck="true"># max read buffer</span>net.core.rmem_max <span class="token operator">=</span> 67108864<span class="token comment" spellcheck="true"># max write buffer</span>net.core.wmem_max <span class="token operator">=</span> 67108864<span class="token comment" spellcheck="true"># default read buffer</span>net.core.rmem_default <span class="token operator">=</span> 65536<span class="token comment" spellcheck="true"># default write buffer</span>net.core.wmem_default <span class="token operator">=</span> 65536<span class="token comment" spellcheck="true"># max processor input queue</span>net.core.netdev_max_backlog <span class="token operator">=</span> 4096<span class="token comment" spellcheck="true"># max backlog</span>net.core.somaxconn <span class="token operator">=</span> 4096<span class="token comment" spellcheck="true"># resist SYN flood attacks</span>net.ipv4.tcp_syncookies <span class="token operator">=</span> 1<span class="token comment" spellcheck="true"># reuse timewait sockets when safe</span>net.ipv4.tcp_tw_reuse <span class="token operator">=</span> 1<span class="token comment" spellcheck="true"># turn off fast timewait sockets recycling</span>net.ipv4.tcp_tw_recycle <span class="token operator">=</span> 0<span class="token comment" spellcheck="true"># short FIN timeout</span>net.ipv4.tcp_fin_timeout <span class="token operator">=</span> 30<span class="token comment" spellcheck="true"># short keepalive time</span>net.ipv4.tcp_keepalive_time <span class="token operator">=</span> 1200<span class="token comment" spellcheck="true"># outbound port range</span>net.ipv4.ip_local_port_range <span class="token operator">=</span> 10000 65000<span class="token comment" spellcheck="true"># max SYN backlog</span>net.ipv4.tcp_max_syn_backlog <span class="token operator">=</span> 4096<span class="token comment" spellcheck="true"># max timewait sockets held by system simultaneously</span>net.ipv4.tcp_max_tw_buckets <span class="token operator">=</span> 5000<span class="token comment" spellcheck="true"># TCP receive buffer</span>net.ipv4.tcp_rmem <span class="token operator">=</span> 4096 87380 67108864<span class="token comment" spellcheck="true"># TCP write buffer</span>net.ipv4.tcp_wmem <span class="token operator">=</span> 4096 65536 67108864<span class="token comment" spellcheck="true"># turn on path MTU discovery</span>net.ipv4.tcp_mtu_probing <span class="token operator">=</span> 1<span class="token comment" spellcheck="true"># for high-latency network</span>net.ipv4.tcp_congestion_control <span class="token operator">=</span> htcp<span class="token comment" spellcheck="true"># forward ipv4</span>net.ipv4.ip_forward <span class="token operator">=</span> 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中最后的<code>hybla</code>是为高延迟网络（如美国，欧洲）准备的算法，需要内核支持，测试内核是否支持，在终端输入：<code>sysctl net.ipv4.tcp_available_congestion_control</code><br>如果结果中有<code>hybla</code>，则证明你的内核已开启<code>hybla</code>，如果没有<code>hybla</code>，可以用命令<code>modprobe tcp_hybla</code>开启。</p><p>对于低延迟的网络（如日本，香港等），可以使用<code>htcp</code>，可以非常显著的提高速度，首先使用<code>modprobe tcp_htcp</code>开启，再将<code>net.ipv4.tcp_congestion_control = hybla改为net.ipv4.tcp_congestion_control = htcp</code>，建议EC2日本用户使用这个算法。</p><p>使配置生效：sysctl –system<br>note: 经过手机Andoid客户端测试, 速度确实有提升（之前手机端速度感觉已经很快了！），YouTube上1080p的高清视频一点不卡，甚至于还没有缓冲到的时间点直接点击在3秒之内都可以缓冲出来（这个时候的即时速度可以到3M/s）。<img src="/images/scenery.jpg"><br>YouTube 1080p高清测试视频，<a href="https://youtu.be/6v2L2UGZJAM" target="_blank" rel="external">Planet Earth: Amazing nature scenery</a></p><h4 id="tcp优化"><a href="#tcp优化" class="header-anchor"></a>2.2.5.2. <a href="#TCP优化" class="headerlink" title="TCP优化"></a>TCP优化</h4><p>1.修改文件句柄数限制<br>如果是ubuntu/centos均可修改/etc/sysctl.d/local.conf<br>找到fs.file-max这一行，修改其值为1024000，并保存退出。然后执行<code>sysctl -p</code>使其生效<br>修改vi /etc/security/limits.conf文件，加入</p><pre class="line-numbers language-bash"><code class="language-bash">*               soft    nofile           512000*               hard    nofile          1024000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2.修改vi /etc/profile文件，加入<br><code>ulimit -SHn 1024000</code><br>然后重启服务器执行<code>ulimit -n</code>，查询返回1024000即可。</p><h3 id="ss-加密优化"><a href="#ss-加密优化" class="header-anchor"></a>2.2.6. <a href="#ss-加密优化" class="headerlink" title="ss 加密优化"></a>ss 加密优化</h3><ol><li>装M2Crypto 这个可以提高SS的加密速度，安装办法：<br>Debian/Ubuntu<br><code>apt-get install python-m2crypto</code><br>安装之后重启SS，速度将会有一定的提升</li><li>装 gevent 安装 gevent可以提高 Shadowsocks 的性能。<pre><code>apt-get install python-dev libevent-dev python-setuptools python-gevent easy_install greenlet gevent</code></pre></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于做科研、写代码的同学来说，翻&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GFW&lt;/a&gt;是必不可少的，对于专业的资料来说，google/sholar搜索的丰富程度可以秒某度的。梯子有很多种，例如改hosts、vpn(SoftEther)、浏览器翻墙的插件(谷歌上网助手)、自由门、GoAgent、cow、Lantern等等。今天我们来介绍一下在国外&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_private_server&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;VPS&lt;/a&gt;(Virtual private server)的搭建，不只是可以用来上google，scholar等，可以说相当于拥有了国外的网络环境，没有限制的浏览国外网站。&lt;br&gt;
    
    </summary>
    
    
      <category term="VPS" scheme="http://www.jiaxm.me/tags/VPS/"/>
    
      <category term="Shadowsocks" scheme="http://www.jiaxm.me/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Configuration</title>
    <link href="http://www.jiaxm.me/2017-07-day/Hexo/"/>
    <id>http://www.jiaxm.me/2017-07-day/Hexo/</id>
    <published>2017-07-13T11:40:00.000Z</published>
    <updated>2018-03-16T10:49:34.731Z</updated>
    
    <content type="html"><![CDATA[<p><meta content="text/html; charset=UTF-8" http-equiv="content-type"><br>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文为Hexo相关的东西，大部分与特性配置有关。<br><a id="more"></a></p><h1 id="hexo在不同电脑间的迁移"><a href="#hexo在不同电脑间的迁移" class="header-anchor"></a>1. <a href="#Hexo在不同电脑间的迁移" class="headerlink" title="Hexo在不同电脑间的迁移"></a>Hexo在不同电脑间的迁移</h1><ol><li>安装node.js</li><li>安装hexo  <code>npm install -g hexo-cli</code></li><li>git安装</li><li>拷贝原来的文件 包括<strong>:<br><code>_config.yml</code>: 站点配置文件<br><code>/theme</code>: 主题及其配置<br><code>source</code>: 文章源文件及404页面<br><code>scaffolds</code>: Hexo所提供的模板文件<br><code>package.json</code>: 说明站点使用了哪些包<br><code>gitignore</code>: 放置在git端时忽略的文件<br>需要删除:<br>.git, public, .deploy_</strong>git, db_json<br><code>git</code>：git的配置，关联文件夹等，由于我们已经换了电脑，所以之前的配置应该被舍弃掉；<br><code>node_modules/</code>: 注意这个并不需要删除，上面1-3安装完成后<code>npm install</code>命令即可加载所有的文件<br><code>public/</code>：在用hexo generate时会重新生成；<br><code>.deploy_git/</code>：在用hexo deploy时会重新生成；<br><code>db.json</code>：站点的一些数据文件；</li><li>git init</li><li>npm install</li><li>重新配置全局默认邮箱和用户名</li></ol><h1 id="特性配置"><a href="#特性配置" class="header-anchor"></a>2. <a href="#特性配置" class="headerlink" title="特性配置"></a>特性配置</h1><h2 id="添加邮箱链接控制"><a href="#添加邮箱链接控制" class="header-anchor"></a>2.1. <a href="#添加邮箱链接控制" class="headerlink" title="添加邮箱链接控制"></a>添加邮箱链接控制</h2><p>安装插件<code>hexo-email-obfuscate</code>，参考<a href="https://www.npmjs.com/package/hexo-email-obfuscate" target="_blank" rel="external">这里</a></p><pre class="line-numbers language-shell"><code class="language-shell">npm install hexo-email-obfuscate --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在站点配置文件<code>_config.yml</code>中加入：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">plugins</span><span class="token punctuation">:</span>  - hexo-email-obfuscate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用语法：<br>Markdown</p><pre><code>[Contact Me](mailto:foo@bar.com)</code></pre><h2 id="文章中添加居中模块"><a href="#文章中添加居中模块" class="header-anchor"></a>2.2. <a href="#文章中添加居中模块" class="headerlink" title="文章中添加居中模块"></a>文章中添加居中模块</h2><p>文章Markdown中填写如下：</p><pre class="line-numbers language-css"><code class="language-css">&lt;blockquote class=<span class="token string">"blockquote-center"</span>>优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="隐藏网页底部powered-by-hexo-强力驱动"><a href="#隐藏网页底部powered-by-hexo-强力驱动" class="header-anchor"></a>2.3. <a href="#隐藏网页底部powered-By-Hexo-强力驱动" class="headerlink" title="隐藏网页底部powered By Hexo / 强力驱动"></a>隐藏网页底部powered By Hexo / 强力驱动</h2><p>打开themes/next/layout/_partials/footer.swig,使用””隐藏之间的代码即可，或者直接删除。</p><h2 id="友情链接设置"><a href="#友情链接设置" class="header-anchor"></a>2.4. <a href="#友情链接设置" class="headerlink" title="友情链接设置"></a>友情链接设置</h2><p>编辑站点的 _config.yml 添加：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># title, chinese available</span><span class="token key atrule">links_title</span><span class="token punctuation">:</span> Links<span class="token comment" spellcheck="true"># links</span><span class="token key atrule">links</span><span class="token punctuation">:</span>  <span class="token key atrule">MacTalk</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//macshuo.com/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="代码高亮问题"><a href="#代码高亮问题" class="header-anchor"></a>2.5. <a href="#代码高亮问题" class="headerlink" title="代码高亮问题"></a>代码高亮问题</h2><p>Hexo自带的highlight.js代码高亮并不好用，当在博客配置中将highlight的选项auto_detect设为true时，hexo g生成博客时报错<br>但是如果你不去设置这一项，代码高亮永远是<code>normal</code>主题。解决这个问题很简单，就是手动设置<code>auto_detect = false</code>:</p><pre class="line-numbers language-js"><code class="language-js">highlight<span class="token punctuation">:</span>  enable<span class="token punctuation">:</span> <span class="token boolean">false</span>  line_number<span class="token punctuation">:</span> <span class="token boolean">false</span>  auto_detect<span class="token punctuation">:</span> <span class="token boolean">false</span>  tab_replace<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="代码高亮prism"><a href="#代码高亮prism" class="header-anchor"></a>2.6. <a href="#代码高亮prism" class="headerlink" title="代码高亮prism"></a>代码高亮prism</h2><p>由<a href="https://github.com/wayou/hexo-prism" target="_blank" rel="external">wayou</a>开发，代替hexo原生代码高亮。</p><h3 id="install"><a href="#install" class="header-anchor"></a>2.6.1. <a href="#Install" class="headerlink" title="Install:"></a>Install:</h3><pre class="line-numbers language-sh"><code class="language-sh">npm i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="usage"><a href="#usage" class="header-anchor"></a>2.6.2. <a href="#Usage" class="headerlink" title="Usage:"></a>Usage:</h3><p>编辑站点配置文件<code>_config.yml</code>，加入</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">### prism_plugin</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime or preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'default'</span>  <span class="token comment" spellcheck="true">#theme: 'coy'</span>  <span class="token comment" spellcheck="true">#theme: 'dark'</span>  <span class="token comment" spellcheck="true">#theme: 'funky'</span>  <span class="token comment" spellcheck="true">#theme: 'okaidia'</span>  <span class="token comment" spellcheck="true">#theme: 'solarizedlight'</span>  <span class="token comment" spellcheck="true">#theme: 'tomorrow'</span>  <span class="token comment" spellcheck="true">#theme: 'twilight'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true   </span><span class="token comment" spellcheck="true"># default false</span>  <span class="token key atrule">auto_import_assets</span><span class="token punctuation">:</span> <span class="token boolean important">true   </span><span class="token comment" spellcheck="true"># default true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="代码高亮主题测试"><a href="#代码高亮主题测试" class="header-anchor"></a>2.6.3. <a href="#代码高亮主题测试" class="headerlink" title="代码高亮主题测试"></a>代码高亮主题测试</h3><p>default:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807063/default_kglgrh.jpg" alt=""><br>coy:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807063/coy_vjozcy.jpg" alt=""><br>dark:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807063/dark_lxldep.jpg" alt=""><br>funky:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/funky_bvxgwk.jpg" alt=""><br>okaidia:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/okaidia_jtwjxz.jpg" alt=""><br>solarizedlight:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/Solariedlight_d6h4xb.jpg" alt=""><br>tomorrow:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/tomorrow_liekgg.jpg" alt=""><br>twilight:<br><img src="http://res.cloudinary.com/jiaxm/image/upload/v1500807064/twilight_wlpsfk.jpg" alt=""><br>note:感觉有些主题怪怪的~~~</p><h2 id="文章内插入图片"><a href="#文章内插入图片" class="header-anchor"></a>2.7. <a href="#文章内插入图片" class="headerlink" title="文章内插入图片"></a>文章内插入图片</h2><p>在文章中写入:</p><pre class="line-numbers language-json"><code class="language-json">!<span class="token punctuation">[</span><span class="token punctuation">]</span>(/upload_image/<span class="token number">1</span>.jpg<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后进入themes-主题名-source-upload_image目录下(自己创建)，将图片放到这个目录下，就可以了。</p><blockquote><p>说明：当执行hexo g命令时，会自动把图片复制到 public文件的upload_image目录下。</p></blockquote><h2 id="鼠标点击小红心的设置"><a href="#鼠标点击小红心的设置" class="header-anchor"></a>2.8. <a href="#鼠标点击小红心的设置" class="headerlink" title="鼠标点击小红心的设置"></a>鼠标点击小红心的设置</h2><p>将 <a href="https://github.com/Neveryu/Neveryu.github.io/blob/master/js/src/love.js" target="_blank" rel="external">love.js</a> 文件添加到 \themes\next\source\js\src 文件目录下。<br>找到 \themes\next\layout_layout.swing 文件， 在文件的后面， 标签之前 添加以下代码：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 页面点击小红心 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"/js/src/love.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="header-anchor"></a>2.9. <a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h2><p>将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。<br>找到文件 themes\next\source\css_custom\custom.styl ，添加如下 css 样式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.post-body</span> p a </span><span class="token punctuation">{</span>  <span class="token selector">color: <span class="token id">#0593d3</span>;  border-bottom: none;  &amp;<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#0477ab</span><span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="设置字体"><a href="#设置字体" class="header-anchor"></a>2.10. <a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h2><blockquote><p>note: 此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后</p></blockquote><p>为了解决 Google Fonts API 不稳定的问题，NexT 在 5.0.1 中引入此特性。 通过此特性，你可以指定所使用的字体库外链地址；与此同时，NexT 开放了 5 个特定范围的字体设定，他们是：</p><ul><li>全局字体：定义的字体将在全站范围使用</li><li>标题字体：文章内标题的字体（h1, h2, h3, h4, h5, h6）</li><li>文章字体：文章所使用的字体</li><li>Logo字体：Logo 所使用的字体</li><li>代码字体： 代码块所使用的字体</li></ul><p>注意，各项所指定的字体将作为首选字体，当他们不可用时会自动 Fallback 到 NexT 设定的基础字体组：<br>非代码类字体：Fallback 到 “PingFang SC”, “Microsoft YaHei”, sans-serif<br>代码类字体： Fallback 到 consolas, Menlo, “PingFang SC”, “Microsoft YaHei”, monospace<br>另外，每一项都有一个额外的 external 属性，此属性用来控制是否使用外链字体库。 开放此属性方便你设定那些已经安装在系统中的字体，减少不必要的请求（请求大小）。</p><pre class="line-numbers language-yml"><code class="language-yml">font:  enable: true  # 外链字体库地址，例如 //fonts.googleapis.com (默认值)  host: //fonts.googleapis.com  # 全局字体，应用在 body 元素上  global:    external: true    family: Lato  # 标题字体 (h1, h2, h3, h4, h5, h6)  headings:    external: true    family: Playball    size: 30  # 文章字体  posts:    external: true    family:  # Logo 字体  logo:    external: true    family: Playball    size: 40  # 代码字体，应用于 code 以及代码块  codes:    external: true    family: Droid Sans Mono    size: 25<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="设置菜单"><a href="#设置菜单" class="header-anchor"></a>2.11. <a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h2><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 <a href="http://fontawesome.io/" target="_blank" rel="external">Font Awesome</a> 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景。参考<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">官方设置菜单配置</a><br>如添加一个新的页面“链接”：</p><pre class="line-numbers language-shell"><code class="language-shell">hexo new page Links<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即在<code>hexo/source/</code>目录下新建了<code>Links</code>目录，目录中包含<code>index.md</code>文件，文件内容：</p><pre class="line-numbers language-css"><code class="language-css">---<span class="token property">title</span><span class="token punctuation">:</span> Links<span class="token property">date</span><span class="token punctuation">:</span> <span class="token number">2017</span>-<span class="token number">07</span>-<span class="token number">20</span> <span class="token property">10</span><span class="token punctuation">:</span><span class="token property">34</span><span class="token punctuation">:</span><span class="token number">38</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后再NexT主题配置文件中的menu项和menu_ico项中加入 Links</p><pre class="line-numbers language-yml"><code class="language-yml">menu:  home: /  categories: /categories/  archives: /archives/  tags: /tags/  about: /about/  links: /Links/ # note: links尝试用过Links: /Links发现会有问题——即使hexo g产生的/hexo/public目录中确实有/links，但是在推送到VPS的时候莫名其妙变成/Links，造成无法访问。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css"><span class="token property">menu_icons</span><span class="token punctuation">:</span>  <span class="token property">enable</span><span class="token punctuation">:</span> true  #<span class="token property">KeyMapsToMenuItemKey</span><span class="token punctuation">:</span> NameOfTheIconFromFontAwesome  <span class="token property">home</span><span class="token punctuation">:</span> home  <span class="token property">about</span><span class="token punctuation">:</span> user  <span class="token property">categories</span><span class="token punctuation">:</span> th  <span class="token property">schedule</span><span class="token punctuation">:</span> calendar  <span class="token property">tags</span><span class="token punctuation">:</span> heart  <span class="token property">archives</span><span class="token punctuation">:</span> archive  <span class="token property">links</span><span class="token punctuation">:</span> heart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后要修改<code>/themes/next/languages/</code>中对应的语言文件<code>zh-Hans.yml</code>的中links项</p><pre class="line-numbers language-yml"><code class="language-yml">menu:  home: 首页  archives: 归档  categories: 分类  tags: 标签  about: 关于  search: 搜索  schedule: 日程表  sitemap: 站点地图  commonweal: 公益404  links: 链接<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加并美化本地搜索"><a href="#添加并美化本地搜索" class="header-anchor"></a>2.12. <a href="#添加并美化本地搜索" class="headerlink" title="添加并美化本地搜索"></a>添加并美化本地搜索</h2><p>NexT 主题内置了本地站内搜索，很方便添加。</p><ol><li>首先安装<code>hexo-generator-search</code>插件，用于生成博客索引数据<br>在站点的根目录下执行以下命令进行安装：<pre class="line-numbers language-sh"><code class="language-sh">npm install hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>编辑 站点配置文件<code>_config.yml</code>，新增以下内容到任意位置：</li></ol><pre class="line-numbers language-css"><code class="language-css"><span class="token property">search</span><span class="token punctuation">:</span>  <span class="token property">path</span><span class="token punctuation">:</span> search<span class="token number">.</span>xml  <span class="token property">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol><li>编辑NexT主题配置文件<code>_config.yml</code>，解注释local search:<pre class="line-numbers language-yml"><code class="language-yml"># Local searchlocal_search:enable: true# if auto, trigger search by changing input# if manual, trigger search by pressing enter key or search buttonpath: search.xmlfielf: postformat: htmllimit: 10000trigger: auto# 注意把trigger: auto打开，可以在输入的同时即时显示搜索结果# show top n results per article, show all results by setting to -1#top_n_per_article: 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="侧边栏头像修饰"><a href="#侧边栏头像修饰" class="header-anchor"></a>2.13. <a href="#侧边栏头像修饰" class="headerlink" title="侧边栏头像修饰"></a>侧边栏头像修饰</h2><p>把侧边栏头像变成圆形，并且鼠标停留在上面发生旋转效果，参考<a href="odepub.cn/2016/03/20/Hexo-blog-theme-switching-from-Jacman-to-NexT-Mist/">这里</a>，具体修改文件的位置是<code>hexo\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>中的内容如下:</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.site-author-image</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>  <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">96</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">2</span>px solid <span class="token hexcode">#333</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* start*/</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span>  <span class="token property">webkit-transition</span><span class="token punctuation">:</span> <span class="token number">1.4</span>s all<span class="token punctuation">;</span>  <span class="token property">moz-transition</span><span class="token punctuation">:</span> <span class="token number">1.4</span>s all<span class="token punctuation">;</span>  <span class="token property">ms-transition</span><span class="token punctuation">:</span> <span class="token number">1.4</span>s all<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> <span class="token number">1.4</span>s all<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* end */</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* start */</span><span class="token selector"><span class="token class">.site-author-image</span><span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#55DAE1</span><span class="token punctuation">;</span>  <span class="token property">webkit-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">moz-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">ms-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* end */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="cloudinary-在线图片服务"><a href="#cloudinary-在线图片服务" class="header-anchor"></a>2.14. <a href="#Cloudinary-在线图片服务" class="headerlink" title="Cloudinary 在线图片服务"></a>Cloudinary 在线图片服务</h2><p>除了在本地存储图片，还可以将图片上传到一些免费的CDN服务中。比如Cloudinary提供的图片CDN服务，在Cloudinary中上传图片后，会生成对应的url地址，将地址直接拿来引用即可。<br>在<a href="https://cloudinary.com" target="_blank" rel="external">Cloudinary</a>申请账号，上传图片(注意把upload选项中的unsigned signature选上)</p><h2 id="设置文章置顶"><a href="#设置文章置顶" class="header-anchor"></a>2.15. <a href="#设置文章置顶" class="headerlink" title="设置文章置顶"></a>设置文章置顶</h2><blockquote><p>note: 参考<a href="http://www.netcan666.com/2015/11/22/%E8%A7%A3%E5%86%B3Hexo%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/" target="_blank" rel="external">解决文章置顶</a></p></blockquote><ol><li><p>安装 hexo-generator-index</p><pre class="line-numbers language-sh"><code class="language-sh">npm i --save hexo-generator-index<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>将如下的代码加入<code>node_modules/hexo-generator-index/lib/generator.js</code></p></li></ol><pre class="line-numbers language-js"><code class="language-js">posts<span class="token punctuation">.</span>data <span class="token operator">=</span> posts<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 两篇文章top都有定义</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">==</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>date <span class="token operator">-</span> a<span class="token punctuation">.</span>date<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 若top值一样则按照文章日期降序排</span>        <span class="token keyword">else</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>top <span class="token operator">-</span> a<span class="token punctuation">.</span>top<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 否则按照top值降序排</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>date <span class="token operator">-</span> a<span class="token punctuation">.</span>date<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 都没定义按照文章日期降序排</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最终的 <code>node_modules/hexo-generator-index/lib/generator.js</code> 代码:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token string">'use strict'</span><span class="token punctuation">;</span>var pagination <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'hexo-pagination'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">function</span><span class="token punctuation">(</span>locals<span class="token punctuation">)</span> <span class="token punctuation">{</span>    var config <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">;</span>    var posts <span class="token operator">=</span> locals<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>index_generator<span class="token punctuation">.</span>order_by<span class="token punctuation">)</span><span class="token punctuation">;</span>    var paginationDir <span class="token operator">=</span> config<span class="token punctuation">.</span>pagination_dir <span class="token operator">||</span> <span class="token string">'page'</span><span class="token punctuation">;</span>    posts<span class="token punctuation">.</span>data <span class="token operator">=</span> posts<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 两篇文章top都有定义</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">==</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>date <span class="token operator">-</span> a<span class="token punctuation">.</span>date<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 若top值一样则按照文章日期降序排</span>            <span class="token keyword">else</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>top <span class="token operator">-</span> a<span class="token punctuation">.</span>top<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 否则按照top值降序排</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span>            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token keyword">return</span> b<span class="token punctuation">.</span>date <span class="token operator">-</span> a<span class="token punctuation">.</span>date<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 都没定义按照文章日期降序排</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">pagination</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> posts<span class="token punctuation">,</span> <span class="token punctuation">{</span>        perPage<span class="token operator">:</span> config<span class="token punctuation">.</span>index_generator<span class="token punctuation">.</span>per_page<span class="token punctuation">,</span>        layout<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">,</span> <span class="token string">'archive'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        format<span class="token operator">:</span> paginationDir <span class="token operator">+</span> <span class="token string">'/%d/'</span><span class="token punctuation">,</span>        data<span class="token operator">:</span> <span class="token punctuation">{</span>          __index<span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在文章 <code>Front-matter</code> 中添加 <code>top</code> 值，数值越大文章越靠前，如：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">title</span><span class="token punctuation">:</span> Hexo<span class="token property">date</span><span class="token punctuation">:</span> <span class="token number">2017</span>-<span class="token number">07</span>-<span class="token number">21</span><span class="token property">tags</span><span class="token punctuation">:</span> vps<span class="token property">categories</span><span class="token punctuation">:</span> vps<span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="next主题宽度调整"><a href="#next主题宽度调整" class="header-anchor"></a>2.16. <a href="#next主题宽度调整" class="headerlink" title="next主题宽度调整"></a>next主题宽度调整</h2><p>编辑 <code>themes/next/source/css/_variables/custom.styl</code> 文件，新增变量：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 修改成你期望的宽度</span>$content<span class="token operator">-</span>desktop <span class="token operator">=</span> 700px<span class="token comment" spellcheck="true">// 当视窗超过 1600px 后的宽度</span>$content<span class="token operator">-</span>desktop<span class="token operator">-</span>large <span class="token operator">=</span> 900px<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>以上方法不适用与next.Picses scheme<br><code>Pisces Scheme</code> 编辑<code>themes/next/source/css/_schemes/Picses/_layout.styl</code>文件，更改以下 css 选项定义值：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.header</span></span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1150</span>px<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token selector"><span class="token class">.container</span> <span class="token class">.main-inner</span> </span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1150</span>px<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token selector"><span class="token class">.content-wrap</span> </span><span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100%</span> - <span class="token number">260</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="设置disqus"><a href="#设置disqus" class="header-anchor"></a>2.17. <a href="#设置disqus" class="headerlink" title="设置disqus"></a>设置disqus</h2><blockquote><p>note: “多说”评论功能应用广泛，但是据其公司的<a href="http://dev.duoshuo.com/threads/58d1169ae293b89a20c57241" target="_blank" rel="external">声明</a>，多说网已经关闭。</p></blockquote><p>hexo已经内置了对disqus的支持，配置也很简单</p><ol><li>首先注册disques账号<br><a href="https://disqus.com" target="_blank" rel="external">https://disqus.com</a> 获取shortname</li><li>next主题内置了对disqus的支持，在next主题的_config_xml中搜索disqus，并做如下配置：<pre class="line-numbers language-css"><code class="language-css"># disqus<span class="token property">disqus</span><span class="token punctuation">:</span> <span class="token property">enable</span><span class="token punctuation">:</span> True <span class="token property">shortname</span><span class="token punctuation">:</span> jiaxm-me <span class="token property">count</span><span class="token punctuation">:</span> true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="给github添加readme"><a href="#给github添加readme" class="header-anchor"></a>2.18. <a href="#给github添加README" class="headerlink" title="给github添加README"></a>给github添加README</h2><p>hexo会把md文件都解析成html，但是github的readme只支持MD格式，最简单的方法是让hexo不对README.md做转换。<br>站点配置文件_config_xml中的<code>skip_render:</code>改为<code>skip_render: README.md</code><br>note: README.md放在 hexo/source/目录中即可</p><h2 id="markdown里-table-的语法"><a href="#markdown里-table-的语法" class="header-anchor"></a>2.19. <a href="#MarkDown里-table-的语法" class="headerlink" title="MarkDown里 table 的语法"></a>MarkDown里 table 的语法</h2><p>MD的写法</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">|</span> I <span class="token operator">|</span> am <span class="token operator">|</span> table <span class="token operator">|</span><span class="token operator">|</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">|</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token punctuation">:</span><span class="token operator">|</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token punctuation">:</span><span class="token operator">|</span><span class="token operator">|</span>文本内容<span class="token operator">|</span> <span class="token operator">**</span>`是`<span class="token operator">**</span> <span class="token operator">|</span>table<span class="token operator">|</span><span class="token operator">|</span>文本内容<span class="token operator">|</span> <span class="token operator">**</span>`是`<span class="token operator">**</span> <span class="token operator">|</span>table<span class="token operator">|</span><span class="token operator">|</span>文本内容<span class="token operator">|</span> <span class="token operator">**</span>`是`<span class="token operator">**</span> <span class="token operator">|</span>table<span class="token operator">|</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>表格与上面的文本内容之间<strong>空一行</strong>。否则解析不出来</li><li>最上面一行是表格第一列的值。第二行的冒号位置决定表格内文本的对齐方式。有水平居中、水平靠左对齐、水平靠右对齐三种</li><li>每列的宽度是根据对应列里最长的文本来决定的</li></ol><p>输出结果：</p><table><thead><tr><th style="text-align:left">我</th><th style="text-align:center">是</th><th style="text-align:right">展示表格</th></tr></thead><tbody><tr><td style="text-align:left">文本内容</td><td style="text-align:center"><strong><code>是</code></strong></td><td style="text-align:right">table</td></tr><tr><td style="text-align:left">文本内容</td><td style="text-align:center"><strong><code>是</code></strong></td><td style="text-align:right">table</td></tr><tr><td style="text-align:left">文本内容</td><td style="text-align:center"><strong><code>是</code></strong></td><td style="text-align:right">table</td></tr></tbody></table><h2 id="去除b2t-sidebar"><a href="#去除b2t-sidebar" class="header-anchor"></a>2.20. <a href="#去除b2t-sidebar" class="headerlink" title="去除b2t sidebar"></a>去除b2t sidebar</h2><p>找到<code>Hexo/themes/next/layout/_macro/sidebar.swig</code>文件，去掉其中关于b2t的部分：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token punctuation">{</span><span class="token number">%</span> if theme<span class="token number">.</span>sidebar<span class="token number">.</span>b<span class="token number">2</span>t <span class="token number">%</span><span class="token punctuation">}</span>  <span class="token selector">&lt;div class="back-to-top">    &lt;i class="fa fa-arrow-up">&lt;/i>    </span><span class="token punctuation">{</span><span class="token number">%</span> if theme<span class="token number">.</span>sidebar<span class="token number">.</span>scrollpercent <span class="token number">%</span><span class="token punctuation">}</span>      <span class="token selector">&lt;span id="scrollpercent">&lt;span>0&lt;/span>%&lt;/span>    </span><span class="token punctuation">{</span><span class="token number">%</span> endif <span class="token number">%</span><span class="token punctuation">}</span>  <span class="token selector">&lt;/div></span><span class="token punctuation">{</span><span class="token number">%</span> endif <span class="token number">%</span><span class="token punctuation">}</span>&lt;/div><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="调整b2t样式"><a href="#调整b2t样式" class="header-anchor"></a>2.21. <a href="#调整b2t样式" class="headerlink" title="调整b2t样式"></a>调整b2t样式</h2><p><code>back-to-top</code>的控制文件为<code>/home/jxm/Hexo/themes/next/source/css/_common/components/back-to-top.styl</code><br>在文件中可以修改b2t bar的格式，如颜色，位置，大小等。</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.back-to-top</span> </span><span class="token punctuation">{</span>  <span class="token selector">box-sizing: border-box;  position: fixed;  bottom: $b2t-position-bottom;  right: $b2t-position-right;  z-index: $zindex-5;  padding: 0 6px;  width: hexo-config('sidebar<span class="token class">.scrollpercent</span>') ? initial : 24px;  background: white;  font-size: $b2t-font-size;  opacity: $b2t-opacity;  color: green  cursor: pointer;  text-align: center;  -webkit-transform: translateZ(0);  transition-property: bottom;  the-transition();  +mobile() </span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">+tablet() </span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">&amp;<span class="token class">.back-to-top-on</span> </span><span class="token punctuation">{</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> $b<span class="token number">2</span>t-position-bottom-on<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="设置网站图标logo"><a href="#设置网站图标logo" class="header-anchor"></a>2.22. <a href="#设置网站图标Logo" class="headerlink" title="设置网站图标Logo"></a>设置网站图标Logo</h2><ol><li>通过网站<a href="http://tool.lu/favicon/" target="_blank" rel="external">favicon在线制作制作</a>favicon图片，logo最好设置32*32。</li><li>next主题：将图片放在next主题source/images目录下</li><li>在next主题配置文件中添加：<code>favicon: images/favicon.ico</code>;或者直接把<code>favicon.ico</code>放到站点source文件夹</li></ol><h2 id="设置emoji"><a href="#设置emoji" class="header-anchor"></a>2.23. <a href="#设置emoji" class="headerlink" title="设置emoji"></a>设置emoji</h2><p>to test this plugin! :simple_smile:</p><h2 id="版权声明"><a href="#版权声明" class="header-anchor"></a>2.24. <a href="#版权声明" class="headerlink" title="版权声明"></a>版权声明</h2><p>主题默认的版权声明配置在themes\next_config.yml文件中。</p><pre class="line-numbers language-json"><code class="language-json"># Declare license on postspost_copyright<span class="token operator">:</span>  enable<span class="token operator">:</span> <span class="token boolean">false</span>  license<span class="token operator">:</span> CC BY-NC-SA <span class="token number">3.0</span>  license_url<span class="token operator">:</span> https<span class="token operator">:</span>//creativecommons.org/licenses/by-nc-sa/<span class="token number">3.0</span>/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 将’enable’ 改为’true’即可<br> 或者自己魔改，配置如下（参考<a href="http://www.crocutax.com/2017/05/20/Hexo%E6%8C%81%E7%BB%AD%E4%BC%98%E5%8C%96-%E5%9C%A8%E6%96%87%E7%AB%A0%E5%B0%BE%E9%83%A8%E6%B7%BB%E5%8A%A0%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E%E4%BF%A1%E6%81%AF/" target="_blank" rel="external">Crocutax’s Blog</a>）</p><p> 定位到themes\next\layout_macro\post.swig文件，找到<footer class="post-footer">节点，该节点包括了每篇文章底部的tag、span分割线等标签，可以根据自己的需要放置【版权声明】的位置。</footer></p><pre class="line-numbers language-json"><code class="language-json"> &lt;footer class=<span class="token string">"post-footer"</span>>     &lt;div>          <span class="token punctuation">{</span>% if not is_index %<span class="token punctuation">}</span>      &lt;ul class=<span class="token string">"post-copyright"</span>>         &lt;li class=<span class="token string">"post-copyright-link"</span>>          &lt;strong>本文作者：&lt;/strong>          &lt;a href=<span class="token string">"/"</span> title=<span class="token string">"欢迎访问 {{ theme.author }} 的个人博客"</span>><span class="token punctuation">{</span><span class="token punctuation">{</span> theme.author <span class="token punctuation">}</span><span class="token punctuation">}</span>&lt;/a>        &lt;/li>        &lt;li class=<span class="token string">"post-copyright-link"</span>>          &lt;strong>本文标题：&lt;/strong>          &lt;a href=<span class="token string">"{{ url_for(post.permalink) }}"</span> title=<span class="token string">"{{ post.title }}"</span>><span class="token punctuation">{</span><span class="token punctuation">{</span> post.title <span class="token punctuation">}</span><span class="token punctuation">}</span>&lt;/a>        &lt;/li>        &lt;li class=<span class="token string">"post-copyright-link"</span>>          &lt;strong>本文链接：&lt;/strong>          &lt;a href=<span class="token string">"{{ url_for(post.permalink) }}"</span> title=<span class="token string">"{{ post.title }}"</span>><span class="token punctuation">{</span><span class="token punctuation">{</span> post.permalink <span class="token punctuation">}</span><span class="token punctuation">}</span>&lt;/a>        &lt;/li>        &lt;li class=<span class="token string">"post-copyright-date"</span>>            &lt;strong>发布时间：&lt;/strong><span class="token punctuation">{</span><span class="token punctuation">{</span> post.date.format(<span class="token string">"YYYY年M月D日 - HH时MM分"</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>        &lt;/li>          &lt;li class=<span class="token string">"post-copyright-license"</span>>          &lt;strong>版权声明： &lt;/strong>          本文由 <span class="token punctuation">{</span><span class="token punctuation">{</span>theme.author<span class="token punctuation">}</span><span class="token punctuation">}</span> 原创，采用 &lt;a href=<span class="token string">"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"</span> rel=<span class="token string">"license"</span> target=<span class="token string">"_blank"</span>>保留署名-非商业性使用-禁止演绎 <span class="token number">4.0</span>-国际许可协议&lt;/a> &lt;br>转载请保留以上声明信息！        &lt;/li>      &lt;/ul>    <span class="token punctuation">{</span>% endif %<span class="token punctuation">}</span>  &lt;/div>...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 里面都是基础的HTML代码，使用了一个无序列表用于展示版权声明的各项信息，这里可以随意diy。<br> 当然里面涉及一些属性，比如：</p><ul><li>theme.author ： 作者名</li><li>post.title ：文章标题</li><li>post.path　：文章相对路径</li><li>post.permalink : 文章绝对路径</li><li>post.date : 日期<blockquote><ul><li>这里用<code>page</code>和<code>post</code>效果一样，比如<code>page.title</code> , <code>page.path</code></li><li>这里基本都做成了超链接形式，也可以做成文本形式</li></ul></blockquote></li></ul><p>然后，定位到<code>themes\next\source\css\_custom\custom.styl</code> 文件，通过类选择器添加CSS样式</p><pre class="line-numbers language-json"><code class="language-json"> // Custom styles. .post-copyright <span class="token punctuation">{</span>    margin<span class="token operator">:</span> 2em <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">;</span>    padding<span class="token operator">:</span> <span class="token number">0</span>.5em 1em<span class="token punctuation">;</span>    border-left<span class="token operator">:</span> 3px solid #FF1700<span class="token punctuation">;</span>    background-color<span class="token operator">:</span> #F9F9F9<span class="token punctuation">;</span>    list-style<span class="token operator">:</span> none<span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="主题配置参考"><a href="#主题配置参考" class="header-anchor"></a>3. <a href="#主题配置参考" class="headerlink" title="主题配置参考"></a>主题配置参考</h1><ol><li><a href="http://chitanda.me/2015/06/11/tips-for-setup-hexo/" target="_blank" rel="external">markdown table</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;meta content=&quot;text/html; charset=UTF-8&quot; http-equiv=&quot;content-type&quot;&gt;&lt;br&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。本文为Hexo相关的东西，大部分与特性配置有关。&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.jiaxm.me/categories/hexo/"/>
    
    
      <category term="next" scheme="http://www.jiaxm.me/tags/next/"/>
    
      <category term="hexo" scheme="http://www.jiaxm.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令行快捷键</title>
    <link href="http://www.jiaxm.me/2017-07-day/Linux_Terminal_Shortcuts/"/>
    <id>http://www.jiaxm.me/2017-07-day/Linux_Terminal_Shortcuts/</id>
    <published>2017-07-12T16:00:00.000Z</published>
    <updated>2017-11-16T16:35:09.489Z</updated>
    
    <content type="html"><![CDATA[<p>note: 这些快捷键在xshell5环境下适用<br>在shell命令终端中，Ctrl+n相当于方向向下的方向键，Ctrl+p相当于方向向上的方向键。<br>在命令终端中通过它们或者方向键可以实现对历史命令的快速查找。这也是快速输入命令的技巧。<br>在命令终端中可以通过Ctrl+r 实现快速检索使用过的历史命令。Ctrl+r中r是retrieve中r。</p><a id="more"></a><p>Ctrl+a：光标回到命令行首。 （a：ahead）<br>Ctrl+e：光标回到命令行尾。 （e：end）<br>Ctrl+b：光标向行首移动一个字符。 （b：backwards）<br>Ctrl+ f：光标向行尾移动一个字符。 （f：forwards）<br>Ctrl+w: 删除光标处到行首的字符。<br>Ctrl+k：删除光标处到行尾的字符。<br>Ctrl+u：删除整个命令行文本字符。<br>Ctrl+h：向行首删除一个字符。<br>Ctrl+d：向行尾删除一个字符。<br>Ctrl+y:：粘贴Ctrl+u，Ctrl+k，Ctrl+w删除的文本。<br>Ctrl+p: 上一个使用的历史命令。 （p：previous）<br>Ctrl+n： 下一个使用的历史命令。（n：next ）<br>Ctrl+r：快速检索历史命令。（r：retrieve）。<br>Ctrl+t： 交换光标所在字符和其前的字符。<br>Ctrl+i：相当于Tab键。<br>Ctrl+o：相当于Ctrl+m.<br>Ctrl+m：相当Enter键。<br>其他控制键：<br>Ctrl+s:使终端发呆，静止，可以使快速输出的终端屏幕停下来。<br>Ctrl+q：退出Ctrl+s引起的发呆。<br>Ctrl+z：使正在运行在终端的任务，运行于后台。 （可用fg恢复）<br>Ctrl+c：中断终端中正在执行的任务。<br>Ctrl+d: 在空命令行的情况下可以退出终端。<br>Ctrl+[ ：相当于Esc键。<br>Esc键：连续按3次显示所有的支持的终端命令。<br>Tab键：命令、文件名等自动补全功能。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;note: 这些快捷键在xshell5环境下适用&lt;br&gt;在shell命令终端中，Ctrl+n相当于方向向下的方向键，Ctrl+p相当于方向向上的方向键。&lt;br&gt;在命令终端中通过它们或者方向键可以实现对历史命令的快速查找。这也是快速输入命令的技巧。&lt;br&gt;在命令终端中可以通过Ctrl+r 实现快速检索使用过的历史命令。Ctrl+r中r是retrieve中r。&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.jiaxm.me/categories/linux/"/>
    
    
      <category term="linux" scheme="http://www.jiaxm.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>VPS Configuration</title>
    <link href="http://www.jiaxm.me/2017-07-day/VPS/"/>
    <id>http://www.jiaxm.me/2017-07-day/VPS/</id>
    <published>2017-07-04T04:00:04.000Z</published>
    <updated>2017-11-16T16:35:09.850Z</updated>
    
    <content type="html"><![CDATA[<p>VPS（Virtual Private Server 虚拟专用服务器）技术，将一台服务器分割成多个虚拟专享服务器的优质服务。简单的说，VPS就是一台拥有公网IP的服务器总结一下VPS搭建的过程，从域名的购买到VPS的设置<br><a id="more"></a></p><h1 id="vps的配置"><a href="#vps的配置" class="header-anchor"></a>1. <a href="#VPS的配置" class="headerlink" title="VPS的配置"></a>VPS的配置</h1><h2 id="vps的购买-tbd"><a href="#vps的购买-tbd" class="header-anchor"></a>1.1. <a href="#VPS的购买-TBD" class="headerlink" title="VPS的购买 TBD"></a>VPS的购买 TBD</h2><h2 id="vps在ubuntu-1704下的软件配置"><a href="#vps在ubuntu-1704下的软件配置" class="header-anchor"></a>1.2. <a href="#VPS在ubuntu-17-04下的软件配置" class="headerlink" title="VPS在ubuntu 17.04下的软件配置"></a>VPS在ubuntu 17.04下的软件配置</h2><h3 id="安装git"><a href="#安装git" class="header-anchor"></a>1.2.1. <a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><pre class="line-numbers language-sh"><code class="language-sh">apt-get update && apt-get upgradeapt-get install git git-core<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>git-hook 自动部署:</strong><br>在普通用户目录下，如<code>/home/jxm/</code>中新建<code>git</code> 和<code>www</code>目录。<br>在git中新建xmjia.git目录，并进入该目录，执行：</p><pre class="line-numbers language-sh"><code class="language-sh">git init --bare<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建并编辑<code>hooks/post-receive</code>，加入：</p><pre class="line-numbers language-sh"><code class="language-sh">git --work-tree=/home/jxm/www/jiaxm --git-dir=/home/jxm/git/jiaxm.git checkout -f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在<code>www</code>文件夹中新建<code>xmjia</code>目录<br>ok，git的配置完成。<br>解释：TBD</p><h3 id="安装并配置nginx"><a href="#安装并配置nginx" class="header-anchor"></a>1.2.2. <a href="#安装并配置nginx" class="headerlink" title="安装并配置nginx"></a>安装并配置nginx</h3><p>安装nginx</p><pre class="line-numbers language-sh"><code class="language-sh">apt-get updateapt-get install nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>note: 如果你提前加载了owncloud/nextcloud会发现无法安装nginx，只有停用apache2才可继续。</p></blockquote><p>编辑<code>/etc/nginx/conf.d/xmjia.conf</code>文件内容：</p><pre class="line-numbers language-js"><code class="language-js">server <span class="token punctuation">{</span>listen <span class="token number">80</span><span class="token punctuation">;</span>listen <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">;</span>## <span class="token keyword">if</span> https is desired<span class="token punctuation">,</span> please uncomment the following lines#listen <span class="token number">443</span> ssl http2<span class="token punctuation">;</span>#listen <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">443</span> ssl http2<span class="token punctuation">;</span>server_name ipv6<span class="token punctuation">.</span>xmjia<span class="token punctuation">.</span>me xmjia<span class="token punctuation">.</span>me www<span class="token punctuation">.</span>xmjia<span class="token punctuation">.</span>me<span class="token punctuation">;</span>## <span class="token keyword">if</span> forcing https<span class="token punctuation">,</span> please uncomment the following lines#<span class="token keyword">if</span> <span class="token punctuation">(</span>$scheme <span class="token operator">=</span> http<span class="token punctuation">)</span> <span class="token punctuation">{</span># <span class="token keyword">return</span> <span class="token number">301</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>$server_name$request_uri<span class="token punctuation">;</span>#<span class="token punctuation">}</span>location <span class="token operator">/</span> <span class="token punctuation">{</span>root <span class="token operator">/</span>home<span class="token operator">/</span>jxm<span class="token operator">/</span>www<span class="token operator">/</span>xmjia<span class="token punctuation">;</span>index index<span class="token punctuation">.</span>html<span class="token punctuation">;</span>proxy_set_header X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>For $proxy_add_x_forwarded_for<span class="token punctuation">;</span>proxy_set_header Host $http_host<span class="token punctuation">;</span>## <span class="token keyword">if</span> https is desired<span class="token punctuation">,</span> please uncomment the following lines#proxy_set_header X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>Proto https<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启nginx服务，<code>service restart nginx</code></p><h3 id="安装nodejs"><a href="#安装nodejs" class="header-anchor"></a>1.2.3. <a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><p>hexo基于nodejs，所以需要安装。</p><pre class="line-numbers language-sh"><code class="language-sh">curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -apt-get install -y nodejs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="第三方服务"><a href="#第三方服务" class="header-anchor"></a>2.2. <a href="#第三方服务" class="headerlink" title="第三方服务"></a>第三方服务</h1><h2 id="vps-vnc远程"><a href="#vps-vnc远程" class="header-anchor"></a>2.3. <a href="#VPS-vnc远程" class="headerlink" title="VPS vnc远程"></a>VPS vnc远程</h2><ol><li>安装xfce桌面环境<pre class="line-numbers language-sh"><code class="language-sh">sudo apt-get install xfce4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>安装远程桌面服务</p><pre class="line-numbers language-sh"><code class="language-sh">apt-get -y install vnc4server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后先开启服务，然后再终止服务：（这是为了创建一个默认的配置文件） </p><pre class="line-numbers language-sh"><code class="language-sh">vncserver :1vncserver -kill :1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>打开配置文件<code>vim /root/.vnc/xstartup</code>。note:如果是普通用户创建的上述配置文件要打开自己目录下的<code>xstartup</code>文件，写入：</p><pre class="line-numbers language-sh"><code class="language-sh">#!/bin/sh # Uncomment the following two lines for normal desktop: # unset SESSION_MANAGER # unset DBUS_SESSION_BUS_ADDRESS  #上面这句话如果在xubuntu桌面环境下开启vnc的话最好取消注释 # exec /etc/X11/xinit/xinitrc [ -x /etc/vnc/xstartup ] && exec /etc/vnc/xstartup [ -r $HOME/.Xresources ] && xrdb $HOME/.Xresources xsetroot -solid grey vncconfig -iconic & x-terminal-emulator -geometry 80x24+10+10 -ls -title "$VNCDESKTOP Desktop" & # x-window-manager & x-session-manager &  xfdesktop & xfce4-panel &      xfce4-menu-plugin &      xfsettingsd &      xfconfd &      xfwm4 &<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以通过一下命令控制vnc窗口的分辨率，注意太高的话会很卡。</p><pre class="line-numbers language-sh"><code class="language-sh">vncserver :0 -geometry 1600x1200<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>or</p><pre class="line-numbers language-sh"><code class="language-sh">vncserver :1 -geometry 1440x900<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>note: 1600x1200中间的符号就是英文字母x，不是*。</p></blockquote></li><li><p>在<code>real vnc</code>官网下载 <code>vnc viewer</code>, <a href="https://www.realvnc.com/en/download/viewer/" target="_blank" rel="external">https://www.realvnc.com/en/download/viewer/</a><br>配置很简单，填入server_ip:1 连接，输入密码就可以了。<br>不过最好把display编号写全。I mean <code>100.100.100.100:5901</code>.</p></li></ol><h2 id="腾讯企业邮箱"><a href="#腾讯企业邮箱" class="header-anchor"></a>2.4. <a href="#腾讯企业邮箱" class="headerlink" title="腾讯企业邮箱"></a>腾讯企业邮箱</h2><ol><li>购买域名</li><li>注册腾讯企业邮箱</li><li>在域名购买处填写MX记录 （注册腾讯企业邮箱过程中会有提示）</li><li>SPF 防止发出的邮件被识别为垃圾邮件。SPF是通过域名的TXT记录来进行设置的。<br>为了提升域名邮箱发送外域（@qq.com以外的邮箱）邮件的成功率，可以给自己的域名设置一条TXT记录来避免这种情况。 TXT记录值为：<code>v=spf1 include:spf.mail.qq.com ~all</code><pre class="line-numbers language-js"><code class="language-js">note<span class="token punctuation">:</span> sss # 测试<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="shadowsocks的搭建"><a href="#shadowsocks的搭建" class="header-anchor"></a>2.5. <a href="#Shadowsocks的搭建" class="headerlink" title="Shadowsocks的搭建"></a>Shadowsocks的搭建</h2>见<a href="http://www.jiaxm.me/2017-07-day/Shadowsocks_Configuration/#more">站内文章-Shadowsocks搭建</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;VPS（Virtual Private Server 虚拟专用服务器）技术，将一台服务器分割成多个虚拟专享服务器的优质服务。简单的说，VPS就是一台拥有公网IP的服务器总结一下VPS搭建的过程，从域名的购买到VPS的设置&lt;br&gt;
    
    </summary>
    
      <category term="VPS" scheme="http://www.jiaxm.me/categories/VPS/"/>
    
    
      <category term="VPS" scheme="http://www.jiaxm.me/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title>python3 学习爬虫遇到的一点编码问题</title>
    <link href="http://www.jiaxm.me/2017-07-day/python_code/"/>
    <id>http://www.jiaxm.me/2017-07-day/python_code/</id>
    <published>2017-07-02T06:36:06.000Z</published>
    <updated>2017-11-16T16:35:09.595Z</updated>
    
    <content type="html"><![CDATA[<p>在windows上默认以gbk编码。保存一个文件到本地，会被改成gbk的编码，即使在输出内容在写入到文件前已经做了utf-8的编码，最后还是会被转成gbk编码。<br>本例中就是从糗百上抓的文本，其本身是utf-8编码的。读取的时候encode用gbk，输出用gbk。既然最后一定要用gbk，那前面就不可以用utf-8来encode，否则会报错，i.e.，有些字符找不到对应的编码。<br><a id="more"></a></p><h1 id="python3-学习爬虫遇到的一点编码问题"><a href="#python3-学习爬虫遇到的一点编码问题" class="header-anchor"></a>1. <a href="#python3-学习爬虫遇到的一点编码问题" class="headerlink" title="python3 学习爬虫遇到的一点编码问题"></a>python3 学习爬虫遇到的一点编码问题</h1><h2 id="上解决代码"><a href="#上解决代码" class="header-anchor"></a>1.1. <a href="#上解决代码：" class="headerlink" title="上解决代码："></a>上解决代码：</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#coding='utf-8'</span><span class="token keyword">import</span> chardet<span class="token keyword">import</span> requests<span class="token punctuation">,</span> re<span class="token punctuation">,</span> sysheaders <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span> 'Mozilla<span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span>Macintosh<span class="token punctuation">;</span> Intel Mac OS X 10_11_\<span class="token number">4</span><span class="token punctuation">)</span> AppleWebKit<span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like Gecko<span class="token punctuation">)</span> Chrome<span class="token operator">/</span><span class="token number">52.0</span><span class="token punctuation">.</span><span class="token number">2743.116</span> S\afari<span class="token operator">/</span><span class="token number">537.36</span>'<span class="token punctuation">}</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.qiushibaike.com"</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>pattern<span class="token operator">=</span>re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span><span class="token string">'&lt;div class="author.*?&lt;h2>(.*?)&lt;/h2>.*?Icon">(.*?)&lt;/div>.*?&lt;div class="content">.*?&lt;span>(.*?)&lt;/span>.*?&lt;span.*?stats-vote.*?number">(.*?)&lt;/i>.*?stats-comments.*?number">(.*?)&lt;/i>.*?up.*?number hidden">(.*?)&lt;/span>.*?down.*?number hidden">(.*?)&lt;/span>'</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>items <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>fout <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"qiubai.txt"</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> item <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">:</span>    fout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"=========================================\n"</span><span class="token punctuation">)</span>    name <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    age <span class="token operator">=</span> int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    up <span class="token operator">=</span> int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    comment <span class="token operator">=</span> int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    down <span class="token operator">=</span> <span class="token operator">-</span>int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    tot <span class="token operator">=</span> int<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    s <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>    <span class="token keyword">for</span> l <span class="token keyword">in</span> s<span class="token punctuation">:</span>        gl <span class="token operator">=</span> l<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'gbk'</span><span class="token punctuation">,</span><span class="token string">'ignore'</span><span class="token punctuation">)</span>        fout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token operator">%</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'gbk'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    fout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"ID: %s\nAge: %d\n顶: %d\n踩: %d\n评论:%d\n"</span><span class="token operator">%</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> up<span class="token punctuation">,</span> comment<span class="token punctuation">,</span> down<span class="token punctuation">)</span><span class="token punctuation">)</span>    fout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在windows上默认以gbk编码。保存一个文件到本地，会被改成gbk的编码，即使在输出内容在写入到文件前已经做了utf-8的编码，最后还是会被转成gbk编码。&lt;br&gt;本例中就是从糗百上抓的文本，其本身是utf-8编码的。读取的时候encode用gbk，输出用gbk。既然最后一定要用gbk，那前面就不可以用utf-8来encode，否则会报错，i.e.，有些字符找不到对应的编码。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://www.jiaxm.me/categories/python/"/>
    
    
      <category term="python" scheme="http://www.jiaxm.me/tags/python/"/>
    
      <category term="编码" scheme="http://www.jiaxm.me/tags/%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
</feed>
